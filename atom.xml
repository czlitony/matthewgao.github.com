<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Matthew Note</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://matthewgao.github.io/"/>
  <updated>2016-04-17T15:36:52.000Z</updated>
  <id>http://matthewgao.github.io/</id>
  
  <author>
    <name>Matthew Gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux Command Notes</title>
    <link href="http://matthewgao.github.io/2014-9-2-linux-command-note/"/>
    <id>http://matthewgao.github.io/2014-9-2-linux-command-note/</id>
    <published>2016-04-15T09:58:31.000Z</published>
    <updated>2016-04-17T15:36:52.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;mount&quot;&gt;&lt;a href=&quot;#mount&quot; class=&quot;headerlink&quot; title=&quot;mount&quot;&gt;&lt;/a&gt;mount&lt;/h2&gt;&lt;h3 id=&quot;mount-a-dir&quot;&gt;&lt;a href=&quot;#mount-a-dir&quot; class=&quot;headerlink&quot; title=&quot;mount a dir&quot;&gt;&lt;/a&gt;mount a dir&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;-t 指定文件系统类型，通常可以不指定，除了一些特殊的比如, smbfs, tmpfs, proc, sysfs等等&lt;/li&gt;
&lt;li&gt;-bind 通常来讲mount是mount一个设备到文件目录，但是同样可以使用bind来mount一个目录到另一个目录&lt;/li&gt;
&lt;li&gt;-o 代表 option，&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mount -o &lt;span class=&quot;keyword&quot;&gt;bind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mount -&lt;span class=&quot;keyword&quot;&gt;bind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;mount一个网络共享文件夹&quot;&gt;&lt;a href=&quot;#mount一个网络共享文件夹&quot; class=&quot;headerlink&quot; title=&quot;mount一个网络共享文件夹&quot;&gt;&lt;/a&gt;mount一个网络共享文件夹&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;mount&lt;/span&gt; //&lt;span class=&quot;number&quot;&gt;10.103.226.143&lt;/span&gt;/abc /mnt/net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个对Ubuntu和Mint有效，有些情况下可能需要指定文件系统格式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-t smbfs -o username=root, password=pass&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;umount-a-busy-device&quot;&gt;&lt;a href=&quot;#umount-a-busy-device&quot; class=&quot;headerlink&quot; title=&quot;umount a busy device&quot;&gt;&lt;/a&gt;umount a busy device&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;umount &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; unpacked/rbe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;-l 代表lazy，可以强制umount一个device，如果依旧不行，可以尝试用 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lsof | grep unpacked/rbe&lt;span class=&quot;comment&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fuser &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;来查找具体是谁占用了，Kill他&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;skip-an-existed-dir&quot;&gt;&lt;a href=&quot;#skip-an-existed-dir&quot; class=&quot;headerlink&quot; title=&quot;skip an existed dir&quot;&gt;&lt;/a&gt;skip an existed dir&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir -&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; dir1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Create-a-link&quot;&gt;&lt;a href=&quot;#Create-a-link&quot; class=&quot;headerlink&quot; title=&quot;Create a link&quot;&gt;&lt;/a&gt;Create a link&lt;/h2&gt;&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;ln&lt;/span&gt; file1 file2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;ln&lt;/span&gt; -s file1 file2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;hard link and soft link&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;X-windows&quot;&gt;&lt;a href=&quot;#X-windows&quot; class=&quot;headerlink&quot; title=&quot;X windows&quot;&gt;&lt;/a&gt;X windows&lt;/h2&gt;&lt;p&gt;X Windows包含几个部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X server, 主要用于和硬件打交道，把绘图展示到显示器上&lt;/li&gt;
&lt;li&gt;X client，关注与如何绘图，和绘制什么样的图形，一个完全抽象出来的脱离硬件的层面&lt;/li&gt;
&lt;li&gt;Display manager, 用来管理多个Xclient绘制的窗口，最常见的有gdm，lightdm，twm，i3block等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;调整分辨率&quot;&gt;&lt;a href=&quot;#调整分辨率&quot; class=&quot;headerlink&quot; title=&quot;调整分辨率&quot;&gt;&lt;/a&gt;调整分辨率&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xrandr &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xrandr &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; 1280x960&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;分辨率需要驱动支持，如果不支持会报错。 对于VBOX和VM，需要先安装VBOX tools和vmware-tools&lt;br&gt;有些时候需要更改显示驱动，在Xorg.conf中，虚拟机和服务器大多默认vesa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Console-Terminal&quot;&gt;&lt;a href=&quot;#Console-Terminal&quot; class=&quot;headerlink&quot; title=&quot;Console/Terminal&quot;&gt;&lt;/a&gt;Console/Terminal&lt;/h2&gt;&lt;p&gt;这是两个很容易混淆的概念，Console通常指的是一个串行借口，Terminal通常指的是一个Bash, Console通常会启动一个Bash&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Console分为两种，ttyX和ttySX, 前者是一个逻辑上的Console，后者是物理上的Serial Console，Console的相关设置，可以在Grub这类工具中设置，Linux中通常是使用tty了，如果你有个COM口，那么可以用ttyS&lt;/li&gt;
&lt;li&gt;系统在启动的时候inittab中会设置，通过getty来获得一个console&lt;/li&gt;
&lt;li&gt;Text Console的分辨率就不能用xrandr了，可以在grub中通过vga=ask/ID来设置，具体ID取决于硬件支持&lt;/li&gt;
&lt;li&gt;stty可以设置tty相关属性，比如对应快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;权限操作&quot;&gt;&lt;a href=&quot;#权限操作&quot; class=&quot;headerlink&quot; title=&quot;权限操作&quot;&gt;&lt;/a&gt;权限操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;adduser&lt;/li&gt;
&lt;li&gt;addgroup 加user到group&lt;/li&gt;
&lt;li&gt;groupadd 新建一个group&lt;/li&gt;
&lt;li&gt;usermod 可以改变user的属性，比如属于哪个Group，注意group改完要重新gdm进去才能生效&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;SElinux&quot;&gt;&lt;a href=&quot;#SElinux&quot; class=&quot;headerlink&quot; title=&quot;SElinux&quot;&gt;&lt;/a&gt;SElinux&lt;/h3&gt;&lt;p&gt;是一个更高级的权限管理，可以避免一个有很高权限的程序随意访问文件系统，比如httpd，一个普通用户可以操作httpd来访问root权限的目录&lt;/p&gt;
&lt;h2 id=&quot;DNS-lookup&quot;&gt;&lt;a href=&quot;#DNS-lookup&quot; class=&quot;headerlink&quot; title=&quot;DNS lookup&quot;&gt;&lt;/a&gt;DNS lookup&lt;/h2&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sslvpn:~# host -a baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Trying &quot;baidu.com&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 53987&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; flags: qr rd ra; QUERY: 1, ANSWER: 14, AUTHORITY: 0, ADDITIONAL: 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; QUESTION SECTION:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;baidu.com.                     IN      ANY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;462&lt;/span&gt;     &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;123.125.114.144&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;462&lt;/span&gt;     &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;220.181.111.85&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;462&lt;/span&gt;     &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;220.181.111.86&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;NS&lt;/span&gt;      ns4.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;NS&lt;/span&gt;      dns.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;NS&lt;/span&gt;      ns3.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;NS&lt;/span&gt;      ns2.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;NS&lt;/span&gt;      ns7.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;SOA&lt;/span&gt;     dns.baidu.com. sa.baidu.com. &lt;span class=&quot;number&quot;&gt;2012120775&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;300 300&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2592000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;MX&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; mx1.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;MX&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; jpmx.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;MX&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; mx50.baidu.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;MX&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; mx.n.shifen.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu.com.              &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;TXT&lt;/span&gt;     &quot;v=spf1 include:spf1.baidu.com include:spf2.baidu.com include:spf3.baidu.com a mx ptr ~all&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; ADDITIONAL SECTION:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ns4.baidu.com.          &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;220.181.38.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dns.baidu.com.          &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;202.108.22.220&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ns3.baidu.com.          &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;220.181.37.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ns2.baidu.com.          &lt;span class=&quot;number&quot;&gt;86262&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;61.135.165.235&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ns7.baidu.com.          &lt;span class=&quot;number&quot;&gt;86085&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;119.75.219.82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mx1.baidu.com.          &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;     &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;61.135.163.61&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jpmx.baidu.com.         &lt;span class=&quot;number&quot;&gt;7062&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;61.208.132.13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Received &lt;span class=&quot;number&quot;&gt;508&lt;/span&gt; bytes from &lt;span class=&quot;number&quot;&gt;10.8.85.239&lt;/span&gt;#&lt;span class=&quot;number&quot;&gt;53&lt;/span&gt; in &lt;span class=&quot;number&quot;&gt;218&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;man&quot;&gt;&lt;a href=&quot;#man&quot; class=&quot;headerlink&quot; title=&quot;man&quot;&gt;&lt;/a&gt;man&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;man&lt;/span&gt; --regex ‘convert’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: gsettings-schema-convert(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: tapconvert(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: 2to3(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: 2to3-3.2(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: addr2line(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: atobm(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: b2m(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;span class=&quot;keyword&quot;&gt;Man&lt;/span&gt;-- next: bdftopcf(1) [ &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;) | skip (Ctrl-&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;) | quit (Ctrl-C) ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看所有convert相关的手册&lt;/p&gt;
&lt;h2 id=&quot;Source&quot;&gt;&lt;a href=&quot;#Source&quot; class=&quot;headerlink&quot; title=&quot;Source&quot;&gt;&lt;/a&gt;Source&lt;/h2&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/root/&lt;/span&gt;.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;查看程序依赖关系&quot;&gt;&lt;a href=&quot;#查看程序依赖关系&quot; class=&quot;headerlink&quot; title=&quot;查看程序依赖关系&quot;&gt;&lt;/a&gt;查看程序依赖关系&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ldd /usr/bin/openssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	linux-vdso&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; =&amp;gt;  (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fffcd05c000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	libssl&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; =&amp;gt; /tip/bldfs/usr/lib/libssl&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45fb99000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	libcrypto&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; =&amp;gt; /tip/bldfs/usr/lib/libcrypto&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45f7b1000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	libdl&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; =&amp;gt; /lib/x86_64-linux-gnu/libdl&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45f5aa000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	libz&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; =&amp;gt; /tip/bldfs/usr/lib/libz&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45f394000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	libc&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; =&amp;gt; /lib/x86_64-linux-gnu/libc&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45f009000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/lib64/ld-linux-x86-&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.so&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x00007fe45fe07000)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;nm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;查看库文件导出symbol&quot;&gt;&lt;a href=&quot;#查看库文件导出symbol&quot; class=&quot;headerlink&quot; title=&quot;查看库文件导出symbol&quot;&gt;&lt;/a&gt;查看库文件导出symbol&lt;/h2&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objdump -T /usr/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;libcrypto&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;so&lt;/span&gt;.1.0.0| &lt;span class=&quot;title&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EVP_rc4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;00000000000&lt;/span&gt;fbe20 g    DF .text	&lt;span class=&quot;number&quot;&gt;0000000000000008&lt;/span&gt;  OPENSSL_1.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; EVP_rc4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;00000000001086e0&lt;/span&gt; g    DF .text	&lt;span class=&quot;number&quot;&gt;0000000000000008&lt;/span&gt;  OPENSSL_1.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt; EVP_rc4_hmac_md5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;00000000000&lt;/span&gt;fbe30 g    DF .text	&lt;span class=&quot;number&quot;&gt;0000000000000008&lt;/span&gt;  OPENSSL_1.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; EVP_rc4_40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;RBE编译问题&quot;&gt;&lt;a href=&quot;#RBE编译问题&quot; class=&quot;headerlink&quot; title=&quot;RBE编译问题&quot;&gt;&lt;/a&gt;RBE编译问题&lt;/h2&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;=/usr/lib/x&lt;span class=&quot;number&quot;&gt;86_64&lt;/span&gt;-linux-gnu/:&lt;span class=&quot;variable&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于有两个&lt;code&gt;libcrypto.so.1.0.0&lt;/code&gt;，分别在&lt;code&gt;/tip/bldfs/usr/lib/&lt;/code&gt;里和&lt;code&gt;/usr/lib/x86_64-linux-gnu&lt;/code&gt;, 两个版本不同 一个为1.0.0 一个为1.0.1 所以在使用ssl相关工具， 比如ssh，rsync时候会显示找不到symbol，这时需要手动设置&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LIBRARY_PATH is used by gcc before compilation to search for directories containing libraries that need to be linked to your program.&lt;/li&gt;
&lt;li&gt;LD_LIBRARY_PATH is used by your program to search for directories containing the libraries after it has been successfully compiled and linked.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;程序栈最大大小&quot;&gt;&lt;a href=&quot;#程序栈最大大小&quot; class=&quot;headerlink&quot; title=&quot;程序栈最大大小&quot;&gt;&lt;/a&gt;程序栈最大大小&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;ulimit&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;查看每个目录硬盘占的空间&quot;&gt;&lt;a href=&quot;#查看每个目录硬盘占的空间&quot; class=&quot;headerlink&quot; title=&quot;查看每个目录硬盘占的空间&quot;&gt;&lt;/a&gt;查看每个目录硬盘占的空间&lt;/h2&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;du -sm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;df -ah &lt;span class=&quot;comment&quot;&gt;//查看各个盘空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fdiks -&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;作业控制&quot;&gt;&lt;a href=&quot;#作业控制&quot; class=&quot;headerlink&quot; title=&quot;作业控制&quot;&gt;&lt;/a&gt;作业控制&lt;/h2&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;bin/policyserver&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(kili64-rbe)shgao-virtual-machine:&lt;span class=&quot;meta-keyword&quot;&gt;/tip/&lt;/span&gt;src&lt;span class=&quot;meta-keyword&quot;&gt;/avt/&lt;/span&gt;gentoo&lt;span class=&quot;meta&quot;&gt;# jobs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+  Stopped                 &lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;local&lt;span class=&quot;meta-keyword&quot;&gt;/extranet/&lt;/span&gt;bin/policyserver -f --logserverport &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(kili64-rbe)shgao-virtual-machine:&lt;span class=&quot;meta-keyword&quot;&gt;/tip/&lt;/span&gt;src&lt;span class=&quot;meta-keyword&quot;&gt;/avt/&lt;/span&gt;gentoo&lt;span class=&quot;meta&quot;&gt;# bg 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+ &lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;local&lt;span class=&quot;meta-keyword&quot;&gt;/extranet/&lt;/span&gt;bin/policyserver -f --logserverport &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(kili64-rbe)shgao-virtual-machine:&lt;span class=&quot;meta-keyword&quot;&gt;/tip/&lt;/span&gt;src&lt;span class=&quot;meta-keyword&quot;&gt;/avt/&lt;/span&gt;gentoo&lt;span class=&quot;meta&quot;&gt;# jobs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+  Running                 &lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;local&lt;span class=&quot;meta-keyword&quot;&gt;/extranet/&lt;/span&gt;bin/policyserver -f --logserverport &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(kili64-rbe)shgao-virtual-machine:&lt;span class=&quot;meta-keyword&quot;&gt;/tip/&lt;/span&gt;src&lt;span class=&quot;meta-keyword&quot;&gt;/avt/&lt;/span&gt;gentoo&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl+z&lt;/code&gt; 暂停并放到后台&lt;/li&gt;
&lt;li&gt;程序后面加上&amp;amp;，使之自动在后台运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bg&lt;/code&gt; 将一个在后台暂停的命令，变成继续执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fg&lt;/code&gt; 将后台中的命令调至前台继续运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill %num&lt;/code&gt; num不是PID&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;ldconfig&quot;&gt;&lt;a href=&quot;#ldconfig&quot; class=&quot;headerlink&quot; title=&quot;ldconfig&quot;&gt;&lt;/a&gt;ldconfig&lt;/h2&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ldconfig&lt;/span&gt; -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ldconfig&lt;/code&gt;是一个动态链接库管理命令，为了让动态链接库为系统所共享,还需运行动态链接 库的管理命令&lt;code&gt;--ldconfig ldconfig&lt;/code&gt; 命令的用途,主要是在默认搜寻目录(&lt;code&gt;/lib&lt;/code&gt;和&lt;code&gt;/usr/lib&lt;/code&gt;)以及动态库配置文件&lt;code&gt;/etc/ld.so.conf&lt;/code&gt;内所列的目录下,搜索出可共享的动态 链接库(格式如前介绍,&lt;code&gt;lib*.so*&lt;/code&gt;),进而创建出动态装入程序(&lt;code&gt;ld.so&lt;/code&gt;)所需的连接和缓存文件.缓存文件默认为 &lt;code&gt;/etc/ld.so.cache&lt;/code&gt;,此文件保存已排好序的动态链接库名字列表. 他的存在是为了程序可以更快的load相关的lib，相当于一个cache&lt;/p&gt;
&lt;h2 id=&quot;chkconfig&quot;&gt;&lt;a href=&quot;#chkconfig&quot; class=&quot;headerlink&quot; title=&quot;chkconfig&quot;&gt;&lt;/a&gt;chkconfig&lt;/h2&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shgao&lt;span class=&quot;variable&quot;&gt;@shgao&lt;/span&gt;-virtual-&lt;span class=&quot;symbol&quot;&gt;machine:&lt;/span&gt;~&lt;span class=&quot;regexp&quot;&gt;/workplace/&lt;/span&gt;Firmware/EXSeriesVPN&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;chkconfig --list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;acpi-support              &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:on&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:on&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:on&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:on&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;acpid                     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alsa-restore              &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alsa-store                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;anacron                   &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apparmor                  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:off&lt;/span&gt;  &lt;span class=&quot;symbol&quot;&gt;S:&lt;/span&gt;on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;–add   新增所指定的系统服务&lt;/li&gt;
&lt;li&gt;–del 删除所指定的系统服务&lt;/li&gt;
&lt;li&gt;–level 指定该系统服务要在哪个执行等级中开启或关闭&lt;/li&gt;
&lt;li&gt;–list   列出当前可从&lt;code&gt;chkconfig&lt;/code&gt;指令管理的所有系统服务和等级代号&lt;/li&gt;
&lt;li&gt;on/off/reset   在指定的执行登记,开启/关闭/重置该系统服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;表示重复一次或多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt; 中的字符不需要转义，就表示本义&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?:&lt;/code&gt; 告诉引擎匹配前导字符0次或一次。事实上是表示前导字符是可选的。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;+:&lt;/code&gt; 告诉引擎匹配前导字符1次或多次 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;*:&lt;/code&gt; 告诉引擎匹配前导字符0次或多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{}:&lt;/code&gt; 表示前导字符重复的次数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;():&lt;/code&gt; 组（向后引用）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; 匹配任意字符（除了\n）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\b&lt;/code&gt; 匹配单词边界&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\B&lt;/code&gt; 匹配非单词边界&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; 与 &lt;code&gt;cat|dog&lt;/code&gt;，与&lt;code&gt;[]&lt;/code&gt;相似，但是&lt;code&gt;[]&lt;/code&gt;只能匹配一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\w&lt;/code&gt; 匹配一个单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\W&lt;/code&gt; 匹配任何非单词的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(?&amp;gt;正则表达式)&lt;/code&gt; ：阻止海量回溯&lt;/li&gt;
&lt;li&gt;正则表达式具有贪婪性，可以用在&lt;code&gt;?,+,*,{}&lt;/code&gt;之后加一个?来实现这一点，或者靠取反：&lt;code&gt;&amp;lt;[^&amp;gt;]+&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在字符集&lt;code&gt;[]&lt;/code&gt;中， 除了&lt;code&gt;]\^-&lt;/code&gt;需要转义，其他都不用转义，当然转义也不会错&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;向后引用：&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grep -&lt;span class=&quot;keyword&quot;&gt;E&lt;/span&gt;  &#39;(\w)\1&#39; /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 rrrr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135 nnn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Grep&quot;&gt;&lt;a href=&quot;#Grep&quot; class=&quot;headerlink&quot; title=&quot;Grep&quot;&gt;&lt;/a&gt;Grep&lt;/h3&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; -En &lt;span class=&quot;string&quot;&gt;&quot;\-j&quot;&lt;/span&gt; Makefile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; -En &lt;span class=&quot;string&quot;&gt;&#39;\-j&#39;&lt;/span&gt; Makefile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; -Ev &lt;span class=&quot;string&quot;&gt;&#39; ps [0-9a-z]* Debug 3 &#39;&lt;/span&gt; ap_ps.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; &amp;gt; ap_ps_rip_debug3.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;双引号会先解析其中的变量和命令&lt;/li&gt;
&lt;li&gt;单引号是原样匹配&lt;/li&gt;
&lt;li&gt;\ 转义，不要记错…&lt;/li&gt;
&lt;li&gt;-A 5 向后5行&lt;/li&gt;
&lt;li&gt;-B 5 向前5行&lt;/li&gt;
&lt;li&gt;-C 5 前后各5行&lt;/li&gt;
&lt;li&gt;-H 显示文件名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; 取反&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;awk&quot;&gt;&lt;a href=&quot;#awk&quot; class=&quot;headerlink&quot; title=&quot;awk&quot;&gt;&lt;/a&gt;awk&lt;/h3&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;awk -F&#39; &#39; &#39;&lt;span class=&quot;variable&quot;&gt;$5&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ap&quot;&lt;/span&gt; &amp;#123;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; NR &lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt; $(NF) &amp;#125;&#39; /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;/aventail/access_servers.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;awk &#39;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(NF&amp;gt;=6)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i=5;i&amp;lt;=NF;i++)printf(&lt;span class=&quot;string&quot;&gt;&quot;%s &quot;&lt;/span&gt;, &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;);printf &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;#125;&amp;#125;&#39; tmp.&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//输出第六列之后所有列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;-F 表示分隔符&lt;/li&gt;
&lt;li&gt;$5 表示第五个&lt;/li&gt;
&lt;li&gt;NR 表示行号，内嵌&lt;/li&gt;
&lt;li&gt;NF 表示每行有几个分割域&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h3&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sed ‘s/^[A-Z]*/&lt;span class=&quot;keyword&quot;&gt;replace&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt;’&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;g 表示global&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;strace&quot;&gt;&lt;a href=&quot;#strace&quot; class=&quot;headerlink&quot; title=&quot;strace&quot;&gt;&lt;/a&gt;strace&lt;/h2&gt;&lt;p&gt;记录命令的系统调用，例如&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#strace echo “abc”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;execve&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/bin/echo&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;echo&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;aa&quot;&lt;/span&gt;], [/* &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt; vars */])&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;brk&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;                                  = 0&lt;span class=&quot;title&quot;&gt;x882000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/etc/ld.so.nohwcap&quot;&lt;/span&gt;, F_OK)&lt;/span&gt;      = -1 ENOENT &lt;span class=&quot;params&quot;&gt;(No such file or directory)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3275000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/etc/ld.so.preload&quot;&lt;/span&gt;, R_OK)&lt;/span&gt;      = -1 ENOENT &lt;span class=&quot;params&quot;&gt;(No such file or directory)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/etc/ld.so.cache&quot;&lt;/span&gt;, O_RDONLY|O_CLOEXEC)&lt;/span&gt; = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fstat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &amp;#123;st_mode=S_IFREG|&lt;span class=&quot;number&quot;&gt;0644&lt;/span&gt;, st_size=&lt;span class=&quot;number&quot;&gt;66284&lt;/span&gt;, ...&amp;#125;)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;66284&lt;/span&gt;, PROT_READ, MAP_PRIVATE, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3264000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;                                = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/etc/ld.so.nohwcap&quot;&lt;/span&gt;, F_OK)&lt;/span&gt;      = -1 ENOENT &lt;span class=&quot;params&quot;&gt;(No such file or directory)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;&lt;/span&gt;, O_RDONLY|O_CLOEXEC)&lt;/span&gt; = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\200\30\2\0\0\0\0\0&quot;&lt;/span&gt;..., &lt;span class=&quot;number&quot;&gt;832&lt;/span&gt;)&lt;/span&gt; = 832&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fstat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &amp;#123;st_mode=S_IFREG|&lt;span class=&quot;number&quot;&gt;0755&lt;/span&gt;, st_size=&lt;span class=&quot;number&quot;&gt;1811128&lt;/span&gt;, ...&amp;#125;)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;3925208&lt;/span&gt;, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca2c96000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mprotect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca2e4b000, &lt;span class=&quot;number&quot;&gt;2093056&lt;/span&gt;, PROT_NONE)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca304a000, &lt;span class=&quot;number&quot;&gt;24576&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x1b4000)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca304a000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca3050000, &lt;span class=&quot;number&quot;&gt;17624&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3050000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;                                = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3263000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3262000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3261000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;arch_prctl&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ARCH_SET_FS, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca3262700)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mprotect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca304a000, &lt;span class=&quot;number&quot;&gt;16384&lt;/span&gt;, PROT_READ)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mprotect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x605000, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ)&lt;/span&gt;     = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mprotect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca3277000, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;munmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca3264000, &lt;span class=&quot;number&quot;&gt;66284&lt;/span&gt;)&lt;/span&gt;           = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;brk&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;                                  = 0&lt;span class=&quot;title&quot;&gt;x882000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;brk&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x8a3000)&lt;/span&gt;                           = 0&lt;span class=&quot;title&quot;&gt;x8a3000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;/usr/lib/locale/locale-archive&quot;&lt;/span&gt;, O_RDONLY|O_CLOEXEC)&lt;/span&gt; = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fstat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &amp;#123;st_mode=S_IFREG|&lt;span class=&quot;number&quot;&gt;0644&lt;/span&gt;, st_size=&lt;span class=&quot;number&quot;&gt;7220736&lt;/span&gt;, ...&amp;#125;)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;7220736&lt;/span&gt;, PROT_READ, MAP_PRIVATE, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca25b3000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;                                = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fstat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;#123;st_mode=S_IFCHR|&lt;span class=&quot;number&quot;&gt;0620&lt;/span&gt;, st_rdev=makedev(&lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;), ...&amp;#125;)&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;mmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(NULL, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;x7f2ca3274000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;aa\n&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;aa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;                     = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;                                = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;munmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x7f2ca3274000, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;)&lt;/span&gt;            = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;                                = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;exit_group&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;                           = ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;各种重定向&quot;&gt;&lt;a href=&quot;#各种重定向&quot; class=&quot;headerlink&quot; title=&quot;各种重定向&quot;&gt;&lt;/a&gt;各种重定向&lt;/h2&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmlread &lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;xxx&lt;span class=&quot;regexp&quot;&gt;/abc/&lt;/span&gt;xml &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;find&lt;/span&gt; . -type d -depth &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; | xargs -I % tar cvzf %.tar.gz %&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar cvf - &lt;span class=&quot;regexp&quot;&gt;/dir | tar xvf - -C /&lt;/span&gt;somewhere&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;gt; new_file &amp;lt;&amp;lt; fuckend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;write&lt;/span&gt; something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;blabla&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fuckend&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;update-alternatives&quot;&gt;&lt;a href=&quot;#update-alternatives&quot; class=&quot;headerlink&quot; title=&quot;update-alternatives&quot;&gt;&lt;/a&gt;update-alternatives&lt;/h2&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root&lt;span class=&quot;variable&quot;&gt;@shgao-virtual-machine:&lt;/span&gt;~# update-alternatives  --config nc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;There are &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; choices for the alternative nc (providing /bin/nc).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Selection    Path                 Priority   Status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;            /bin/nc.openbsd       &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;        auto mode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;            /bin/nc.openbsd       &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;        manual mode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;            /bin/nc.traditional   &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;        manual mode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Press enter to keep the current choice[*], or type selection &lt;span class=&quot;attribute&quot;&gt;number&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;update-alternatives&lt;/span&gt;: using /bin/nc.traditional to provide /bin/nc (nc) in manual mode.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Network-Tools&quot;&gt;&lt;a href=&quot;#Network-Tools&quot; class=&quot;headerlink&quot; title=&quot;Network Tools&quot;&gt;&lt;/a&gt;Network Tools&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;netcat&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;li&gt;ngrep&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;解决windows下编辑文件结尾有-M问题&quot;&gt;&lt;a href=&quot;#解决windows下编辑文件结尾有-M问题&quot; class=&quot;headerlink&quot; title=&quot;解决windows下编辑文件结尾有^M问题&quot;&gt;&lt;/a&gt;解决windows下编辑文件结尾有^M问题&lt;/h2&gt;&lt;p&gt;&lt;code&gt;^M&lt;/code&gt; 实际上就是&lt;code&gt;\r&lt;/code&gt;, 如果键盘输入要用&lt;code&gt;C-v&lt;/code&gt;，&lt;code&gt;C-m&lt;/code&gt;来输入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决方法一：安装一个dos2unix，可以转换文本&lt;/li&gt;
&lt;li&gt;解决方法二：source insight 中Preference-&amp;gt;Files设置文件结尾    &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Grub-rescue&quot;&gt;&lt;a href=&quot;#Grub-rescue&quot; class=&quot;headerlink&quot; title=&quot;Grub rescue&quot;&gt;&lt;/a&gt;Grub rescue&lt;/h2&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grub rescue&amp;gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; root=(hd1,msdos1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub &lt;span class=&quot;comment&quot;&gt;rescue&amp;gt;set prefix=(hd1,msdos1)&lt;/span&gt;/boot/&lt;span class=&quot;comment&quot;&gt;grub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub &lt;span class=&quot;comment&quot;&gt;rescue&amp;gt;insmod&lt;/span&gt; /boot/&lt;span class=&quot;comment&quot;&gt;grub&lt;/span&gt;/i386-pc/&lt;span class=&quot;comment&quot;&gt;normal.mod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub &lt;span class=&quot;comment&quot;&gt;rescue&amp;gt;normal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//之后进入了grub&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub&amp;gt;linux /boot/&lt;span class=&quot;comment&quot;&gt;bzImage&lt;/span&gt; //加载&lt;span class=&quot;comment&quot;&gt;linux kernel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub&amp;gt;initrd /boot/&lt;span class=&quot;comment&quot;&gt;initrd.gz&lt;/span&gt; //加载启动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grub&amp;gt;boot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;grub vga=ask/ID 可以设置text terminal分辨率&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;重新创建xorg-conf&quot;&gt;&lt;a href=&quot;#重新创建xorg-conf&quot; class=&quot;headerlink&quot; title=&quot;重新创建xorg.conf&quot;&gt;&lt;/a&gt;重新创建xorg.conf&lt;/h2&gt;&lt;p&gt;有些时候xorg.conf的配置会别改坏，用如下方法可以生成一个新的xorg.conf&lt;/p&gt;
&lt;p&gt;1.switch to console mode: Alt+Ctrl+F1&lt;/p&gt;
&lt;p&gt;2.kill x server: sudo service lightdm stop&lt;/p&gt;
&lt;p&gt;3.generate new xorg.conf file: sudo X -configure – this will create xorg.conf.new file in your current dir&lt;/p&gt;
&lt;p&gt;4.rename and move: sudo mv xorg.conf.new /etc/X11/xorg.conf&lt;/p&gt;
&lt;p&gt;5.return to GUI: sudo start lightdm&lt;/p&gt;
&lt;h2 id=&quot;vnc4server&quot;&gt;&lt;a href=&quot;#vnc4server&quot; class=&quot;headerlink&quot; title=&quot;vnc4server&quot;&gt;&lt;/a&gt;vnc4server&lt;/h2&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# vnc4server :1 //启动一个vnc display&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# vnc4server -kill :1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;查看硬件状态&quot;&gt;&lt;a href=&quot;#查看硬件状态&quot; class=&quot;headerlink&quot; title=&quot;查看硬件状态&quot;&gt;&lt;/a&gt;查看硬件状态&lt;/h2&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lscpu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lshw -C &lt;span class=&quot;built_in&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//查看显卡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;网络配置&quot;&gt;&lt;a href=&quot;#网络配置&quot; class=&quot;headerlink&quot; title=&quot;网络配置&quot;&gt;&lt;/a&gt;网络配置&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ifconfig&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; 10&lt;span class=&quot;selector-class&quot;&gt;.103&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.250&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.11&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;netmask&lt;/span&gt; 255&lt;span class=&quot;selector-class&quot;&gt;.255&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.255&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;gw&lt;/span&gt; 10&lt;span class=&quot;selector-class&quot;&gt;.103&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.250&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;DNS 配置在 &lt;code&gt;/etc/resolv.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/hostname&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;echo&quot;&gt;&lt;a href=&quot;#echo&quot; class=&quot;headerlink&quot; title=&quot;echo&quot;&gt;&lt;/a&gt;echo&lt;/h2&gt;&lt;p&gt;echo -e 可以输出转义字符例如 &lt;code&gt;echo -e &amp;quot;abc\ndef&amp;quot;&amp;gt; file&lt;/code&gt;, 注意有些shell支持的不好，比如sh（会把-e 一同输出出去），bash支持良好，最好的办法还是用printf命令替代echo -e， 注意printf命令不支持浮点类型&lt;/p&gt;
&lt;h2 id=&quot;pipe&quot;&gt;&lt;a href=&quot;#pipe&quot; class=&quot;headerlink&quot; title=&quot;pipe&quot;&gt;&lt;/a&gt;pipe&lt;/h2&gt;&lt;p&gt;popen, pclose - pipe stream to or from a process&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;FILE *&lt;span class=&quot;title&quot;&gt;popen&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *command, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pclose&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FILE *stream)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;pipe 实际上是fork了一个子进程来运行，所以调用popen运行的命令和主程序share同一套文件描述符&lt;/p&gt;
&lt;p&gt;popen 打开的fp不能rewind(), 只有文件可以rewind 而pipe是一个流Stream&lt;/p&gt;
&lt;h2 id=&quot;xmllint&quot;&gt;&lt;a href=&quot;#xmllint&quot; class=&quot;headerlink&quot; title=&quot;xmllint&quot;&gt;&lt;/a&gt;xmllint&lt;/h2&gt;&lt;p&gt;xmllint是一个很方便的处理及验证xml的工具，linux下只要安装libxml2就可以使用这个命令，下面整理一些常用功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;–format 此参数用于格式化xml，使其具有良好的可读性。&lt;/li&gt;
&lt;li&gt;–noblanks 与–format相反，有时为了节省传输量，我们希望去掉xml中的空白，这时我们可以使用–noblanks命令&lt;/li&gt;
&lt;li&gt;–schema 使用scheam验证xml文件的正确性 &lt;code&gt;xmllint --schema person.xsd person.xml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;共享库的兼容问题&quot;&gt;&lt;a href=&quot;#共享库的兼容问题&quot; class=&quot;headerlink&quot; title=&quot;共享库的兼容问题&quot;&gt;&lt;/a&gt;共享库的兼容问题&lt;/h2&gt;&lt;p&gt;动态链接库一般以lib开头，形如libmymodule.so.1.0.0. 后面跟的三个版本号，从左到右的含义为：&lt;/p&gt;
&lt;p&gt;1) 大版本号，当接口变得和之前不兼容，则新增一个大版本号。&lt;br&gt;2) 一般增加了接口，不过旧的接口不变，则新增此版本号。&lt;br&gt;3) 接口不做任何变化，只是实现做了修改，则新增此版本号。&lt;/p&gt;
&lt;p&gt;可以用ldconfig来设置程序对应的lib版本&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nm policyserver &lt;span class=&quot;comment&quot;&gt;//查看导出符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;PATH&quot;&gt;&lt;a href=&quot;#PATH&quot; class=&quot;headerlink&quot; title=&quot;PATH&quot;&gt;&lt;/a&gt;PATH&lt;/h2&gt;&lt;p&gt;每个shell都有自己的PATH，从这个shell运行的程序共享这个shell的PATH, 如果需要永久性保存一个PATH，则需要在/etc/profile或者~/.bashrc_profile中加入&lt;code&gt;export PATH=/xxx/yyy:$PATH&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;openssl生成证书&quot;&gt;&lt;a href=&quot;#openssl生成证书&quot; class=&quot;headerlink&quot; title=&quot;openssl生成证书&quot;&gt;&lt;/a&gt;openssl生成证书&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;用户浏览器将其SSL版本号、加密设置参数、与session有关的数据以及其它一些必要信息发送到服务器。&lt;/li&gt;
&lt;li&gt;服务器将其SSL版本号、加密设置参数、与session有关的数据以及其它一些必要信息发送给浏览器，同时发给浏览器的还有服务器的证书。如果配置服务器的SSL需要验证用户身份，还要发出请求要求浏览器提供用户证书。&lt;/li&gt;
&lt;li&gt;客户端检查服务器证书，如果检查失败，提示不能建立SSL连接。如果成功，那么继续。&lt;/li&gt;
&lt;li&gt;客户端浏览器为本次会话生成div-master secret，并将其用服务器公钥加密后发送给服务器。&lt;/li&gt;
&lt;li&gt;如果服务器要求鉴别客户身份，客户端还要再对另外一些数据签名后并将其与客户端证书一起发送给服务器。&lt;/li&gt;
&lt;li&gt;如果服务器要求鉴别客户身份，则检查签署客户证书的CA是否可信。如果不在信任列表中，结束本次会话。如果检查通过，服务器用自己的私钥解密收到的div-master secret，并用它通过某些算法生成本次会话的master secret。&lt;/li&gt;
&lt;li&gt;客户端与服务器均使用此master secret生成本次会话的会话密钥(对称密钥)。在双方SSL握手结束后传递任何消息均使用此会话密钥。这样做的主要原因是对称加密比非对称加密的运算量低一个数量级以上，能够显著提高双方会话时的运算速度。&lt;/li&gt;
&lt;li&gt;客户端通知服务器此后发送的消息都使用这个会话密钥进行加密。并通知服务器客户端已经完成本次SSL握手。&lt;/li&gt;
&lt;li&gt;服务器通知客户端此后发送的消息都使用这个会话密钥进行加密。并通知客户端服务器已经完成本次SSL握手。&lt;/li&gt;
&lt;li&gt;本次握手过程结束，会话已经建立。双方使用同一个会话密钥分别对发送以及接受的信息进行加、解密。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成CA根证书及私钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir private crl certs newcerts #新建证书存放目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &lt;span class=&quot;string&quot;&gt;&#39;00&#39;&lt;/span&gt; &amp;gt; serial #新建serial文件并写入初始序列号&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch index&lt;span class=&quot;selector-class&quot;&gt;.txt&lt;/span&gt; #新建index.txt空文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out private/cakey&lt;span class=&quot;selector-class&quot;&gt;.pem&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; #生成CA根证书私钥&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl req -new -x509 -key private/cakey&lt;span class=&quot;selector-class&quot;&gt;.pem&lt;/span&gt;  -out cacert&lt;span class=&quot;selector-class&quot;&gt;.pem&lt;/span&gt; #生成CA根证书，注意如果不是-x509生成的是一个证书的request，还要自签名CA： openssl ca -selfsign xxxxxxxxxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成服务器证书私钥、证书，可用于https服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out private/server&lt;span class=&quot;selector-class&quot;&gt;.key&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl req -new -key private/server&lt;span class=&quot;selector-class&quot;&gt;.key&lt;/span&gt; -out crl/server&lt;span class=&quot;selector-class&quot;&gt;.csr&lt;/span&gt; #生成证书请求文件，可提供认证CA签核，或自签名。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl ca -&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; crl/server&lt;span class=&quot;selector-class&quot;&gt;.csr&lt;/span&gt; -out certs/server&lt;span class=&quot;selector-class&quot;&gt;.crt&lt;/span&gt; #自签名证书&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl pkcs12 -export -clcerts -&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; server&lt;span class=&quot;selector-class&quot;&gt;.crt&lt;/span&gt; -inkey server&lt;span class=&quot;selector-class&quot;&gt;.key&lt;/span&gt; -out server.p12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;PKCS#12包含私钥，所以在需要客户端验证的时候要用PKCS证书，而crt不包含私钥&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;证书通常包含三种，CA证书，server证书，client证书&lt;/li&gt;
&lt;li&gt;server和client证书（两者实际上可以互换）都是有CA签发的（应包含私钥），如果是crt格式其中是只有他的一个公共证书和公钥，PKCS#12可以包含私钥和公共证书&lt;/li&gt;
&lt;li&gt;也可以没有CA证书，server和client自签名自己的证书&lt;/li&gt;
&lt;li&gt;x509是一个证书格式，不是一个算法&lt;/li&gt;
&lt;li&gt;证书是一个链，包含从根CA到用户cert所有证书，验证的时候要逐一验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CA的类别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自签名 CA: 在自签名 CA 中，证书中的公钥和用于验证证书的密钥是相同的。一些自签名 CA 是根 CA（参见第三项）。&lt;/li&gt;
&lt;li&gt;从属 CA: 在从属 CA 中，证书中的公钥和用于核实证书的密钥是不同的。一个 CA 向另一个 CA 颁发证书的过程叫做 交叉认证 。&lt;/li&gt;
&lt;li&gt;根 CA: 根 CA 是一种特殊的 CA，它受到客户无条件地信任，位于证书层次结构的最高层。所有证书链均终止于根 CA。根颁发机构必须对它自己的证书签名，因为在证书层次结构中再也没有更高的认证机构了。&lt;/li&gt;
&lt;li&gt;所有自签名 CA 都是根 CA，因为到自签名 CA 时证书链就终止了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;vino&quot;&gt;&lt;a href=&quot;#vino&quot; class=&quot;headerlink&quot; title=&quot;vino&quot;&gt;&lt;/a&gt;vino&lt;/h2&gt;&lt;p&gt;No security type 问题解决方法&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gsettings &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; org.gnome.Vino &lt;span class=&quot;comment&quot;&gt;require-encryption false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;UNIX-socket上限&quot;&gt;&lt;a href=&quot;#UNIX-socket上限&quot; class=&quot;headerlink&quot; title=&quot;UNIX socket上限&quot;&gt;&lt;/a&gt;UNIX socket上限&lt;/h2&gt;&lt;p&gt;在使用Nginx+gunicorn+web.py unix socket方式时候，发现nginx会报&lt;code&gt;“connect() to unix:/dev/shm/fcgi.sock failed (11: Resource temporarily unavailable) while connecting to upstream”&lt;/code&gt; 原因是需要修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &lt;span class=&quot;regexp&quot;&gt;/proc/&lt;/span&gt;sys&lt;span class=&quot;regexp&quot;&gt;/net/&lt;/span&gt;core&lt;span class=&quot;regexp&quot;&gt;/somaxconn /&lt;/span&gt;/默认是&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;，定义了系统中每一个端口最大的监听队列的长度，这是个全局的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt; &amp;gt; &lt;span class=&quot;regexp&quot;&gt;/proc/&lt;/span&gt;sys&lt;span class=&quot;regexp&quot;&gt;/net/&lt;/span&gt;core&lt;span class=&quot;regexp&quot;&gt;/somaxconn /&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/放到/&lt;/span&gt;etc/rc.local中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://www.philsallee.com/mbsteg/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reference of /proc/sys/net/core&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;mv-tip&quot;&gt;&lt;a href=&quot;#mv-tip&quot; class=&quot;headerlink&quot; title=&quot;mv tip&quot;&gt;&lt;/a&gt;mv tip&lt;/h2&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; folder1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; folder2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch folder1/file1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch folder2/file2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv -f folder1 folder2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候folder1会成为folder2的一个子文件夹，而如果两个都是空文件夹的时候，才会是重命名到folder2&lt;/p&gt;
&lt;h2 id=&quot;僵尸进程&quot;&gt;&lt;a href=&quot;#僵尸进程&quot; class=&quot;headerlink&quot; title=&quot;僵尸进程&quot;&gt;&lt;/a&gt;僵尸进程&lt;/h2&gt;&lt;p&gt;It’s a process that is dead, but its parent was busy doing some other work, hence it could not collect the child’s exit status. &lt;/p&gt;
&lt;h2 id=&quot;environment&quot;&gt;&lt;a href=&quot;#environment&quot; class=&quot;headerlink&quot; title=&quot;environment&quot;&gt;&lt;/a&gt;environment&lt;/h2&gt;&lt;p&gt;系统启动时候加载/etc/environment, 登陆时加载/etc/profile，针对每个用户的加载~/.profile, 对于non-login-shell, 读取~/.bashrc&lt;/p&gt;
&lt;h2 id=&quot;exec&quot;&gt;&lt;a href=&quot;#exec&quot; class=&quot;headerlink&quot; title=&quot;exec&quot;&gt;&lt;/a&gt;exec&lt;/h2&gt;&lt;p&gt;使用现有shell运行程序, 而不是作为子进程&lt;/p&gt;
&lt;h2 id=&quot;sys-proc-tmpfs&quot;&gt;&lt;a href=&quot;#sys-proc-tmpfs&quot; class=&quot;headerlink&quot; title=&quot;sys, proc, tmpfs&quot;&gt;&lt;/a&gt;sys, proc, tmpfs&lt;/h2&gt;&lt;p&gt;The sysfs filesystem was mentioned briefly above. One may wonder how sysfs knows about the devices present on a system and what device numbers should be used for them. Drivers that have been compiled into the kernel directly register their objects with a sysfs (devtmpfs internally) as they are detected by the kernel. For drivers compiled as modules, this registration will happen when the module is loaded. Once the sysfs filesystem is mounted (on /sys), data which the drivers register with sysfs are available to userspace processes and to udevd for processing (including modifications to device nodes).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With the development of the unstable 2.5 kernel tree, later released as the 2.6 series of stable kernels, a new virtual filesystem called sysfs came to be. The job of sysfs is to export a view of the system’s hardware configuration to userspace processes. With this userspace-visible representation, the possibility of developing a userspace replacement for devfs became much more realistic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Driver&quot;&gt;&lt;a href=&quot;#Driver&quot; class=&quot;headerlink&quot; title=&quot;Driver&quot;&gt;&lt;/a&gt;Driver&lt;/h2&gt;&lt;p&gt;Linux的driver是根据一个设备ID来匹配kernel module的&lt;/p&gt;
&lt;h2 id=&quot;udev&quot;&gt;&lt;a href=&quot;#udev&quot; class=&quot;headerlink&quot; title=&quot;udev&quot;&gt;&lt;/a&gt;udev&lt;/h2&gt;&lt;p&gt;通常来说linux不能保证多个同样的设备每次在被创建文件的时候对应同一个文件名，所以我们可以在&lt;code&gt;/etc/udev/rules.d/&lt;/code&gt;中创建相关配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using the Udev method, only those devices which are detected by the kernel get device nodes created for them. Because these device nodes will be created each time the system boots, they will be stored on a devtmpfs file system (a virtual file system that resides entirely in system memory). Device nodes do not require much space, so the memory that is used is negligible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;交叉编译&quot;&gt;&lt;a href=&quot;#交叉编译&quot; class=&quot;headerlink&quot; title=&quot;交叉编译&quot;&gt;&lt;/a&gt;交叉编译&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;–with-sysroot=$LFS  For cross compilation, this tells the build system to look in $LFS for the target system libraries as needed.&lt;/li&gt;
&lt;li&gt;–target=$LFS_TGT Because the machine description in the LFS_TGT variable is slightly different than the value returned by the config.guess script, this switch will tell the configure script to adjust Binutil’s build system for building a cross linker&lt;/li&gt;
&lt;li&gt;binutil, gcc, glibc 是比较关键的交叉编译部件，需要制定LFS_TGT, 可以用现有平台的编译器编译出对方平台的编译器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cppblog.com/iuranus/archive/2011/07/22/151615.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reference of target, build, host&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;chroot&quot;&gt;&lt;a href=&quot;#chroot&quot; class=&quot;headerlink&quot; title=&quot;chroot&quot;&gt;&lt;/a&gt;chroot&lt;/h2&gt;&lt;p&gt;chroot之前要mount tmpfs proc 和 dev到新的root&lt;/p&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;strip 可以去掉程序中的调试用的符号等&lt;/li&gt;
&lt;li&gt;fuser 用来查谁用了哪个文件&lt;/li&gt;
&lt;li&gt;vmstat 查看磁盘内存吞吐&lt;/li&gt;
&lt;li&gt;free&lt;/li&gt;
&lt;li&gt;ifstat&lt;/li&gt;
&lt;li&gt;proc可以看到进程运行时的cmd和env&lt;/li&gt;
&lt;li&gt;管道中常用 ‘-’ 表示stdout或者stdin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cut -d “:” -f 2&lt;/code&gt; :分割的第二个&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cut -c 1-12&lt;/code&gt; 1-12个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strings&lt;/code&gt; 文件中打印字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar&lt;/code&gt; 通常不会使用-P, 这样会把/目录包含进来，在extract的时候-C会不起作用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpio&lt;/code&gt; 可以用来备份设备文件，不过要你指定每个文件，他不接受一个文件或者目录参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd if=xxx of=yyy bs=xbytes count=xxxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; 统计运行时间: &lt;code&gt;time [command] [args...]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tee&lt;/code&gt; stdin -&amp;gt; stdout, 也可以同时写入文件，叫双重重定向&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tr&lt;/code&gt; 可以替换或者删除字段&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Process-PID-PPID-SID-PGID&quot;&gt;&lt;a href=&quot;#Process-PID-PPID-SID-PGID&quot; class=&quot;headerlink&quot; title=&quot;Process PID PPID SID PGID&quot;&gt;&lt;/a&gt;Process PID PPID SID PGID&lt;/h2&gt;&lt;p&gt;查看这些可以用&lt;code&gt;ps -ao pid,ppid,sid,pgid,comm&lt;/code&gt;, PGID是父进程的PID号，但是父进程的结束并不影响PGID, 组中的所有进程还是沿用同一个PGID，程序中可以对一个进程组来群发信号，SID会有些不同，同一个shell下运行的程序都同属于一个Session，这个Session Leader挂了会导致所有session中的程序退出，所以根据这个我们可以再程序中使用setsid来新建一个新的session，这样程序就不会因为session leader的退出而退出，这也是daemon的基本原理&lt;/p&gt;
</content>
    
    <summary type="html">
    
      学习笔记：记录下Linux使用中不断遇到的命令
    
    </summary>
    
      <category term="Linux" scheme="http://matthewgao.github.io/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://matthewgao.github.io/tags/linux/"/>
    
      <category term="command" scheme="http://matthewgao.github.io/tags/command/"/>
    
      <category term="shell" scheme="http://matthewgao.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="http://matthewgao.github.io/docker/"/>
    <id>http://matthewgao.github.io/docker/</id>
    <published>2016-04-06T10:14:37.000Z</published>
    <updated>2016-04-06T10:14:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Docker-vs-Vagrant&quot;&gt;&lt;a href=&quot;#Docker-vs-Vagrant&quot; class=&quot;headerlink&quot; title=&quot;Docker vs Vagrant&quot;&gt;&lt;/a&gt;Docker vs Vagrant&lt;/h2&gt;&lt;p&gt;为了解决固件编译环境的种种问题，我们尝试了使用vagrant来创建一个编译环境的镜像，但是vagrant基于VM的实现导致了对于宿主机的要求很高，同时编译多个release耗费相当多的系统资源，并且严重拖慢编译速度。&lt;/p&gt;
&lt;p&gt;所以我考虑用Docker来替代vagrant，Docker提供了足够的隔离，所以可以像一个虚拟机一样运行，但是非常轻且高效，能满足所有编译环境的需求。&lt;/p&gt;
&lt;h2 id=&quot;Build-RBE-Image&quot;&gt;&lt;a href=&quot;#Build-RBE-Image&quot; class=&quot;headerlink&quot; title=&quot;Build RBE Image&quot;&gt;&lt;/a&gt;Build RBE Image&lt;/h2&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Build &lt;span class=&quot;literal&quot;&gt;a&lt;/span&gt; docker image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `mkdir docker-builder &amp;amp;&amp;amp; cd docker-builder`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `rsync -av this_Dockerfile .`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `docker build -t release_name .`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Run-It&quot;&gt;&lt;a href=&quot;#Run-It&quot; class=&quot;headerlink&quot; title=&quot;Run It&quot;&gt;&lt;/a&gt;Run It&lt;/h2&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Run this docker image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `docker &lt;span class=&quot;built_in&quot;&gt;run&lt;/span&gt; -itd -v tip_on_host:tip_on_container /bin/bash`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Access to the console&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `docker attach &amp;lt;CID &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&amp;gt;` &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; `docker exec -&lt;span class=&quot;keyword&quot;&gt;it&lt;/span&gt; &amp;lt;CID &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&amp;gt;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Util&quot;&gt;&lt;a href=&quot;#Util&quot; class=&quot;headerlink&quot; title=&quot;Util&quot;&gt;&lt;/a&gt;Util&lt;/h2&gt;&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# How to get the CID or name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `&lt;span class=&quot;javascript&quot;&gt;docker ps&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# List all the image which avaiable in your host&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `&lt;span class=&quot;javascript&quot;&gt;docker images&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Dockerfile&quot;&gt;&lt;a href=&quot;#Dockerfile&quot; class=&quot;headerlink&quot; title=&quot;Dockerfile&quot;&gt;&lt;/a&gt;Dockerfile&lt;/h2&gt;&lt;h3 id=&quot;FROM&quot;&gt;&lt;a href=&quot;#FROM&quot; class=&quot;headerlink&quot; title=&quot;FROM&quot;&gt;&lt;/a&gt;FROM&lt;/h3&gt;&lt;p&gt;指定base image&lt;/p&gt;
&lt;h3 id=&quot;MAINTAINER&quot;&gt;&lt;a href=&quot;#MAINTAINER&quot; class=&quot;headerlink&quot; title=&quot;MAINTAINER&quot;&gt;&lt;/a&gt;MAINTAINER&lt;/h3&gt;&lt;p&gt;Author信息&lt;/p&gt;
&lt;h3 id=&quot;LABEL&quot;&gt;&lt;a href=&quot;#LABEL&quot; class=&quot;headerlink&quot; title=&quot;LABEL&quot;&gt;&lt;/a&gt;LABEL&lt;/h3&gt;&lt;p&gt;描述性的，不重要&lt;/p&gt;
&lt;h3 id=&quot;RUN&quot;&gt;&lt;a href=&quot;#RUN&quot; class=&quot;headerlink&quot; title=&quot;RUN&quot;&gt;&lt;/a&gt;RUN&lt;/h3&gt;&lt;p&gt;运行一些命令&lt;/p&gt;
&lt;h3 id=&quot;CMD&quot;&gt;&lt;a href=&quot;#CMD&quot; class=&quot;headerlink&quot; title=&quot;CMD&quot;&gt;&lt;/a&gt;CMD&lt;/h3&gt;&lt;p&gt;每个container时候启动的，只能有一个&lt;/p&gt;
&lt;h3 id=&quot;ENV&quot;&gt;&lt;a href=&quot;#ENV&quot; class=&quot;headerlink&quot; title=&quot;ENV&quot;&gt;&lt;/a&gt;ENV&lt;/h3&gt;&lt;p&gt;设置环境变量&lt;/p&gt;
&lt;h2 id=&quot;Attach-or-Exec&quot;&gt;&lt;a href=&quot;#Attach-or-Exec&quot; class=&quot;headerlink&quot; title=&quot;Attach or Exec&quot;&gt;&lt;/a&gt;Attach or Exec&lt;/h2&gt;&lt;p&gt;我们有两种方式来attach到container的TTY&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker attach &amp;lt;CID &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker exec -&lt;span class=&quot;keyword&quot;&gt;it&lt;/span&gt; &amp;lt;CID&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Attach会有个问题是如果从container中exit，那么container会被结束，而exec不会，但是exec每次执行会返回一个exit code，因为他是stdout到了stdin来得到tty结果的&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Docker Note
    
    </summary>
    
    
      <category term="docker" scheme="http://matthewgao.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Makefile Notes</title>
    <link href="http://matthewgao.github.io/2014-9-26-makefile/"/>
    <id>http://matthewgao.github.io/2014-9-26-makefile/</id>
    <published>2016-01-27T06:56:41.000Z</published>
    <updated>2016-04-17T16:50:55.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;样板&quot;&gt;&lt;a href=&quot;#样板&quot; class=&quot;headerlink&quot; title=&quot;样板&quot;&gt;&lt;/a&gt;样板&lt;/h2&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CC=g++ -g &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LPTHREAD= -lpthread&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TARGET=main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OBJS=ThreadPool.o \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 main.o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;all : &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;TARGET)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	echo &lt;span class=&quot;string&quot;&gt;&quot;ALL Done&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#$^ 会一次返回所有结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#$&amp;lt; 一次返回一个结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;TARGET) : &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;OBJS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;CC) &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;LPTHREAD) -o &lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt;  &lt;span class=&quot;variable&quot;&gt;$^&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%.o : %.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;CC) -c &lt;span class=&quot;variable&quot;&gt;$&amp;lt;&lt;/span&gt; -o &lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#这部分可以保证对头文件的依赖性，不然会导致头文件更新，对应的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#cpp没有被更新的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%.dep : %.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;CC) -M &lt;span class=&quot;variable&quot;&gt;$&amp;lt;&lt;/span&gt; &amp;gt; &lt;span class=&quot;variable&quot;&gt;$@&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;BOOST_LIB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;OBJS:&lt;/span&gt;.o=.dep)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;TEST_OBJS:&lt;/span&gt;.o=.dep)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;clean:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rm -f *.o main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	echo &lt;span class=&quot;string&quot;&gt;&quot;Remove Done&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;在make中有四种方式对变量赋值：&quot;&gt;&lt;a href=&quot;#在make中有四种方式对变量赋值：&quot; class=&quot;headerlink&quot; title=&quot;在make中有四种方式对变量赋值：&quot;&gt;&lt;/a&gt;在make中有四种方式对变量赋值：&lt;/h2&gt;&lt;h3 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;:=运算符&quot;&gt;&lt;/a&gt;&lt;code&gt;:=&lt;/code&gt;运算符&lt;/h3&gt;&lt;p&gt;如&lt;code&gt;MAKE_DEPEND := $(CC) -M&lt;/code&gt; 这种方式叫做“简单展开”，因为在读到makefile中的这一行时等号右边就立即被展开了， 等号右边引用的所有变量（如例子中的CC）也会被立即展开。其行为与一般编程和脚本语言相同。当等号右边引用的变量（如例子中的CC）还没有被定义时，它被展开成空（nothing）而不是空格之类。&lt;/p&gt;
&lt;h3 id=&quot;运算符-1&quot;&gt;&lt;a href=&quot;#运算符-1&quot; class=&quot;headerlink&quot; title=&quot;=运算符&quot;&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;运算符&lt;/h3&gt;&lt;p&gt;如&lt;code&gt;MAKE_DEPEND = $(CC) -M&lt;/code&gt; 这种方式叫做“递归展开”，直到该变量被使用时等号右边的内容才会被展开，其实叫做“迟滞展开”更合适。神奇的是，这种展开方式可以不按顺序定义变量。比如：&lt;/p&gt;
&lt;figure class=&quot;highlight makefile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MAKE_DEPEND = &lt;span class=&quot;variable&quot;&gt;$(CC)&lt;/span&gt; -M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Some time later&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CC = gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要在此之前没有引用过MAKE_DEPEND就没问题。另外，不止是“迟滞展开”，事实上每次使用该变量，等号右边的内容都会被重新展开。&lt;/p&gt;
&lt;h3 id=&quot;运算符-2&quot;&gt;&lt;a href=&quot;#运算符-2&quot; class=&quot;headerlink&quot; title=&quot;?=运算符&quot;&gt;&lt;/a&gt;&lt;code&gt;?=&lt;/code&gt;运算符&lt;/h3&gt;&lt;p&gt;如&lt;code&gt;OUTPUT_DIR ?= $(PROJECT_DIR)/out&lt;/code&gt; 这种方式叫“条件展开”，只有当OUTPUT_DIR 还没有被定义过时才进行赋值，否则什么都不做。这种方式在处理环境变量是特别有用。&lt;/p&gt;
&lt;h3 id=&quot;运算符-3&quot;&gt;&lt;a href=&quot;#运算符-3&quot; class=&quot;headerlink&quot; title=&quot;+=运算符&quot;&gt;&lt;/a&gt;&lt;code&gt;+=&lt;/code&gt;运算符&lt;/h3&gt;&lt;p&gt;如&lt;code&gt;OUTPUT_DIR += $(PROJECT_DIR)/out&lt;/code&gt; “追加”方式。 其主要目的是给“递归展开”的变量追加内容。因为简单变量可以用&lt;code&gt;simple := $(simple) new stuff&lt;/code&gt;的方式来追加内容；而对于递归展开的变量，&lt;code&gt;recursive = $(recursive) new stuff&lt;/code&gt;会导致循环引用。这种情况只能用&lt;code&gt;+=&lt;/code&gt;运算符。 &lt;/p&gt;
&lt;h3 id=&quot;Pattern模式&quot;&gt;&lt;a href=&quot;#Pattern模式&quot; class=&quot;headerlink&quot; title=&quot;Pattern模式&quot;&gt;&lt;/a&gt;Pattern模式&lt;/h3&gt;&lt;p&gt;模式中的%大体上等效于shell中的*星号，他可以代表任意多个字符，不过模式中只能出现一次。&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;$$&quot;&gt;&lt;/a&gt;&lt;code&gt;$$&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Because dollar signs are used to start make variable references, if you really want a dollar sign in a target or prerequisite you must write two of them, ‘$$’ (see How to Use Variables). If you have enabled secondary expansion (see Secondary Expansion) and you want a literal dollar sign in the prerequisites list, you must actually write four dollar signs (‘$$$$’).&lt;/p&gt;
&lt;h2 id=&quot;define&quot;&gt;&lt;a href=&quot;#define&quot; class=&quot;headerlink&quot; title=&quot;define&quot;&gt;&lt;/a&gt;define&lt;/h2&gt;&lt;p&gt;还有一种设置变量值的方法是使用define关键字。使用define关键字设置变量的值可以有换行，这有利于定义一系列的命令（前面我们讲过“命令包”的技术就是利用这个关键字）。&lt;/p&gt;
&lt;p&gt;define指示符后面跟的是变量的名字，而重起一行定义变量的值，定义是以endef关键字结束。其工作方式和“=”操作符一样。变量的值可以包含函数、命令、文字，或是其它变量。因为命令需要以[Tab]键开头，所以如果你用define定义的命令变量中没有以[Tab]键开头，那么make就不会把其认为是命令。&lt;/p&gt;
&lt;p&gt;下面的这个示例展示了define的用法：&lt;/p&gt;
&lt;figure class=&quot;highlight puppet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;section&quot;&gt;two&lt;/span&gt;-lines&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $(bar)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endef&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;origin-function&quot;&gt;&lt;a href=&quot;#origin-function&quot; class=&quot;headerlink&quot; title=&quot;origin function&quot;&gt;&lt;/a&gt;origin function&lt;/h2&gt;&lt;p&gt;The origin function is unlike most other functions in that it does not operate on the values of variables; it tells you something about a variable. Specifically, it tells you where it came from.&lt;/p&gt;
&lt;p&gt;The syntax of the origin function is:&lt;/p&gt;
&lt;p&gt;$(origin variable)&lt;br&gt;Note that variable is the name of a variable to inquire about, not a reference to that variable. Therefore you would not normally use a ‘$’ or parentheses when writing it. (You can, however, use a variable reference in the name if you want the name not to be a constant.)&lt;/p&gt;
&lt;p&gt;The result of this function is a string telling you how the variable variable was defined:&lt;/p&gt;
&lt;p&gt;‘undefined’&lt;br&gt;if variable was never defined.&lt;/p&gt;
&lt;p&gt;‘default’&lt;br&gt;if variable has a default definition, as is usual with CC and so on. See Variables Used by Implicit Rules. Note that if you have redefined a default variable, the origin function will return the origin of the later definition.&lt;/p&gt;
&lt;p&gt;‘environment’&lt;br&gt;if variable was inherited from the environment provided to make.&lt;/p&gt;
&lt;p&gt;‘environment override’&lt;br&gt;if variable was inherited from the environment provided to make, and is overriding a setting for variable in the makefile as a result of the ‘-e’ option (see Summary of Options).&lt;/p&gt;
&lt;p&gt;‘file’&lt;br&gt;if variable was defined in a makefile.&lt;/p&gt;
&lt;p&gt;‘command line’&lt;br&gt;if variable was defined on the command line.&lt;/p&gt;
&lt;p&gt;‘override’&lt;br&gt;if variable was defined with an override directive in a makefile (see The override Directive).&lt;/p&gt;
&lt;p&gt;‘automatic’&lt;br&gt;if variable is an automatic variable defined for the execution of the recipe for each rule (see Automatic Variables).&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Makefile 学习笔记
    
    </summary>
    
      <category term="Dev Tool" scheme="http://matthewgao.github.io/categories/Dev-Tool/"/>
    
    
      <category term="makefile" scheme="http://matthewgao.github.io/tags/makefile/"/>
    
  </entry>
  
  <entry>
    <title>C\C++ Notes</title>
    <link href="http://matthewgao.github.io/2014-9-12-cpp-note/"/>
    <id>http://matthewgao.github.io/2014-9-12-cpp-note/</id>
    <published>2016-01-26T07:55:49.000Z</published>
    <updated>2016-01-26T07:55:49.000Z</updated>
    
    <content type="html">&lt;p&gt;##双重指针&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

int main(){

    char **p=NULL;
    printf(&amp;quot;2 level ptr is:%p\n&amp;quot;,&amp;amp;p);
    printf(&amp;quot;1 level ptr is:%p\n&amp;quot;,p);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出结果为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2 level ptr is:0x7fff2b440768
1 level ptr is:(nil)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分配地址传给子函数可行，指针传给子函数，让子函数分配地址回传不可行。&lt;/p&gt;
&lt;h2 id=&quot;数组指针&quot;&gt;&lt;a href=&quot;#数组指针&quot; class=&quot;headerlink&quot; title=&quot;数组指针&quot;&gt;&lt;/a&gt;数组指针&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;char addr[256];
memset(addr+4, 0,20);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样实际上是错误的，虽然说addr本质上是一个指针，但是在&lt;code&gt;addr+4&lt;/code&gt;还需要强制转换为&lt;code&gt;void*&lt;/code&gt;才可以。&lt;/p&gt;
&lt;h2 id=&quot;memset-memcpy&quot;&gt;&lt;a href=&quot;#memset-memcpy&quot; class=&quot;headerlink&quot; title=&quot;memset/memcpy&quot;&gt;&lt;/a&gt;memset/memcpy&lt;/h2&gt;&lt;p&gt;具体内容man&lt;/p&gt;
&lt;h2 id=&quot;GDB&quot;&gt;&lt;a href=&quot;#GDB&quot; class=&quot;headerlink&quot; title=&quot;GDB&quot;&gt;&lt;/a&gt;GDB&lt;/h2&gt;&lt;h3 id=&quot;检查core-dump&quot;&gt;&lt;a href=&quot;#检查core-dump&quot; class=&quot;headerlink&quot; title=&quot;检查core dump&quot;&gt;&lt;/a&gt;检查core dump&lt;/h3&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;thread&lt;/span&gt; apply &lt;span class=&quot;literal&quot;&gt;all&lt;/span&gt; bt &lt;span class=&quot;literal&quot;&gt;full&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;检查backtrace的每一层&quot;&gt;&lt;a href=&quot;#检查backtrace的每一层&quot; class=&quot;headerlink&quot; title=&quot;检查backtrace的每一层&quot;&gt;&lt;/a&gt;检查backtrace的每一层&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;up 向上一层&lt;/li&gt;
&lt;li&gt;down 向下一层&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;显示变量类型&quot;&gt;&lt;a href=&quot;#显示变量类型&quot; class=&quot;headerlink&quot; title=&quot;显示变量类型&quot;&gt;&lt;/a&gt;显示变量类型&lt;/h3&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;whatis (&lt;span class=&quot;name&quot;&gt;param&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;backtrace&lt;/code&gt; 显示程序中的当前位置和表示如何到达当前位置的栈跟踪（同义词：&lt;code&gt;where&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;breakpoint&lt;/code&gt; 在程序中设置一个断点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; 改变当前工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt; 删除刚才停止处的断点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commands&lt;/code&gt; 命中断点时，列出将要执行的命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;continue&lt;/code&gt; 从断点开始继续执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt; 删除一个断点或监测点；也可与其他命令一起使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display&lt;/code&gt; 程序停止时显示变量和表达时&lt;/li&gt;
&lt;li&gt;&lt;code&gt;down&lt;/code&gt; 下移栈帧，使得另一个函数成为当前函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame&lt;/code&gt; 选择下一条continue命令的帧&lt;/li&gt;
&lt;li&gt;&lt;code&gt;info&lt;/code&gt; 显示与该程序有关的各种信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jump&lt;/code&gt; 在源程序中的另一点开始运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill&lt;/code&gt; 异常终止在gdb 控制下运行的程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt; 列出相应于正在执行的程序的原文件内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; 执行下一个源程序行，从而执行其整体中的一个函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print&lt;/code&gt; 显示变量或表达式的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt; 显示当前工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pype&lt;/code&gt; 显示一个数据结构（如一个结构或C++类）的内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quit&lt;/code&gt; 退出gdb&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reverse-search&lt;/code&gt; 在源文件中反向搜索正规表达式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;run&lt;/code&gt; 执行该程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search&lt;/code&gt; 在源文件中搜索正规表达式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set variable&lt;/code&gt; 给变量赋值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signal&lt;/code&gt; 将一个信号发送到正在运行的进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;step&lt;/code&gt; 执行下一个源程序行，必要时进入下一个函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undisplay display&lt;/code&gt; 命令的反命令，不要显示表达式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;until&lt;/code&gt; 结束当前循环&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up&lt;/code&gt; 上移栈帧，使另一函数成为当前函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;watch&lt;/code&gt; 在程序中设置一个监测点(即数据断点)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他小诡计&quot;&gt;&lt;a href=&quot;#其他小诡计&quot; class=&quot;headerlink&quot; title=&quot;其他小诡计&quot;&gt;&lt;/a&gt;其他小诡计&lt;/h3&gt;&lt;p&gt;在程序中加&lt;code&gt;abort()&lt;/code&gt; 从而可以在想拿到东西的地方得到core dump&lt;/p&gt;
&lt;h2 id=&quot;Valgrind-Memory-leak-check-tool&quot;&gt;&lt;a href=&quot;#Valgrind-Memory-leak-check-tool&quot; class=&quot;headerlink&quot; title=&quot;Valgrind: Memory leak check tool&quot;&gt;&lt;/a&gt;Valgrind: Memory leak check tool&lt;/h2&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install valgrind&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valgrind (&lt;span class=&quot;name&quot;&gt;option&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt; option)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-cn-valgrind/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#0  &lt;span class=&quot;number&quot;&gt;0xb7fe1424&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; __kernel_vsyscall ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#1  &lt;span class=&quot;number&quot;&gt;0xb7d5c571&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; raise () from /lib/libc.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#2  &lt;span class=&quot;number&quot;&gt;0xb7d5dd72&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abort&lt;/span&gt; () from /lib/libc.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#3  &lt;span class=&quot;number&quot;&gt;0xb7f9352f&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; __gnu_cxx&lt;span class=&quot;type&quot;&gt;::__verbose_terminate_handler&lt;/span&gt;() () from /usr/lib/libstdc++.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#4  &lt;span class=&quot;number&quot;&gt;0xb7f90eb5&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; __cxxabiv1&lt;span class=&quot;type&quot;&gt;::__terminate&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; (*)()) () from /usr/lib/libstdc++.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#5  &lt;span class=&quot;number&quot;&gt;0xb7f90ef2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; std&lt;span class=&quot;type&quot;&gt;::terminate&lt;/span&gt;() () from /usr/lib/libstdc++.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#6  &lt;span class=&quot;number&quot;&gt;0xb7f92155&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; __cxa_pure_virtual () from /usr/lib/libstdc++.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;__cxa_pure_virtual() 调用虚函数，会导致一个runtime error， abort()&lt;/p&gt;
&lt;h2 id=&quot;dynamic-cast&quot;&gt;&lt;a href=&quot;#dynamic-cast&quot; class=&quot;headerlink&quot; title=&quot;dynamic_cast&quot;&gt;&lt;/a&gt;dynamic_cast&lt;/h2&gt;&lt;p&gt;转换失败会返回一个NULL指针，基本只限于对于引用和指针，从父类转子类 或者从子类转父类，所谓的downcast和upcast&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去&lt;code&gt;const&lt;/code&gt;属性用&lt;code&gt;const_cast&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;基本类型转换用&lt;code&gt;static_cast&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;多态类之间的类型转换用&lt;code&gt;dynamic_cast&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;不同类型的指针类型转换用&lt;code&gt;reinterpret_cast&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽量使用C++的新式装换，尽量不用老式转换&lt;/p&gt;
&lt;h2 id=&quot;switch-case&quot;&gt;&lt;a href=&quot;#switch-case&quot; class=&quot;headerlink&quot; title=&quot;switch-case&quot;&gt;&lt;/a&gt;switch-case&lt;/h2&gt;&lt;p&gt;case 在没有{}指定范围的时候在其中声明变量会导致编译时候crosses initialization of “XXX” 错误&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;case&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;...&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;//合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###Parameters&lt;/p&gt;
&lt;p&gt;####str&lt;br&gt;C string to truncate.&lt;br&gt;Notice that this string is modified by being broken into smaller strings (tokens).&lt;br&gt;Alternativelly, a null pointer may be specified, in which case the function continues scanning where a previous successful call to the function ended.&lt;/p&gt;
&lt;p&gt;####delimiters&lt;br&gt;C string containing the delimiter characters.&lt;br&gt;These can be different from one call to another.&lt;/p&gt;
&lt;p&gt;###Example&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* strtok example */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; str[] =&lt;span class=&quot;string&quot;&gt;&quot;- This, a sample string.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * pch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;Splitting string \&quot;%s\&quot; into tokens:\n&quot;&lt;/span&gt;,str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pch = strtok (str,&lt;span class=&quot;string&quot;&gt;&quot; ,.-&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (pch != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;,pch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pch = strtok (NULL, &lt;span class=&quot;string&quot;&gt;&quot; ,.-&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;##C99 支持可变长数组&lt;/p&gt;
&lt;p&gt;###基本用法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变长数组只能是局部变量，不能是静态变量和全局变量，因为这两者的长度是编译时决定的，而变长数组的长度要到运行时才能确定。变长数组是局部变量，所以是有生命周期的，其生命周期仅在当前域内，即&lt;code&gt;{}&lt;/code&gt;内。&lt;/li&gt;
&lt;li&gt;变长数组使用的内存是栈内存，所以需要注意数组长度不能太大超过栈内存大小限制。linux 上可以用 ulimit -s 查看栈大小，一般为 8M.&lt;/li&gt;
&lt;li&gt;同样适用于支持C99的C++程序&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[n];        &lt;span class=&quot;comment&quot;&gt;/*非法，VM类型不能具有文件作用域*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (*p)[n];      &lt;span class=&quot;comment&quot;&gt;/*非法，VM类型不能具有文件作用域*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[n];     &lt;span class=&quot;comment&quot;&gt;/*非法，a不是普通标识符*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (*p)[n];   &lt;span class=&quot;comment&quot;&gt;/*非法，p不是普通标识符*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main( &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; test1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[n];         &lt;span class=&quot;comment&quot;&gt;/*非法，a不是普通标识符*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (*p)[n];       &lt;span class=&quot;comment&quot;&gt;/*非法，a不是普通标识符*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[n];       &lt;span class=&quot;comment&quot;&gt;/*非法，VLA不能具有链接性*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b[n];        &lt;span class=&quot;comment&quot;&gt;/*非法，VLA不能具有静态存储周期*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c[n];             &lt;span class=&quot;comment&quot;&gt;/*合法，自动VLA*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d[m][n];          &lt;span class=&quot;comment&quot;&gt;/*合法，自动VLA*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (*p1)[n] = d;  &lt;span class=&quot;comment&quot;&gt;/*合法，静态VM指针*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       n = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; (*p2)[n] = d;  &lt;span class=&quot;comment&quot;&gt;/*未定义行为*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###作为形参&lt;br&gt;除了可以作为自动对象外，还可以作为函数的形参，下面几个函数原型声明是一样的：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void func( int a[&lt;span class=&quot;string&quot;&gt;m&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;n&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int a[&lt;span class=&quot;string&quot;&gt;*&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;n&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int a[&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;n&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int a[&lt;span class=&quot;string&quot;&gt;*&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;*&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int a[&lt;span class=&quot;string&quot;&gt; &lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;*&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int (&lt;span class=&quot;emphasis&quot;&gt;*a)[*&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###各种限定词&lt;br&gt;除了&lt;em&gt;标记外，形参中的数组还可以使用类型限定词const、volatile、restrict和static关键字。由于形参中的VLA被自动调整为等效的指针，因此这些类型限定词实际上限定的是一个指针，例如：`void func( int, int, int a[const][&lt;/em&gt;] );&lt;code&gt;等效于&lt;/code&gt;void func( int, int, int ( &lt;em&gt;const a )[&lt;/em&gt;] );` 它指出a是一个const对象，不能在func内部直接通过a修改其代表的对象。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void func( int, int, int a[&lt;span class=&quot;string&quot;&gt;const&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;*&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;……&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void func( int m, int n, int a[&lt;span class=&quot;string&quot;&gt;const m&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;n&lt;/span&gt;] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;       int b[m][n];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;       a = b;        /*错误，不能通过a修改其代表的对象*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;static表示传入的实参的值至少要跟其所修饰的长度表达式的值一样大。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void func( int, int, int a[&lt;span class=&quot;string&quot;&gt;const static 20&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;*&lt;/span&gt;] );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;……&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int m = 20, n = 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int a[&lt;span class=&quot;string&quot;&gt;m&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;n&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int b[&lt;span class=&quot;string&quot;&gt;n&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;m&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func( m, n, a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func( m, n, b );     /&lt;span class=&quot;emphasis&quot;&gt;*错误，b的第一维长度小于static 20*&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类型限定词和static关键字只能用于具有数组类型的函数形参的第一维中。这里的用词是数组类型，意味着它们不仅能用于VLA，也能用于一般数组形参。&lt;/p&gt;
&lt;p&gt;##const 函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常成员函数不能更新对象的数据成员 &lt;/li&gt;
&lt;li&gt;不能调用该类中没有const修饰的成员函数&lt;/li&gt;
&lt;li&gt;当类的实例为一个const object的时候只能调用const函数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;* obj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.func(); &lt;span class=&quot;comment&quot;&gt;//这里func必须为const函数 不然就不对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##友元 friend&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;友元函数可以访问其类中的成员，并且不受private protect的限制&lt;/li&gt;
&lt;li&gt;类也可以是友元，友元类可以访问其所在类的成员&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//声明友元&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	some code &lt;span class=&quot;comment&quot;&gt;//友元的定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;STL和boost&quot;&gt;&lt;a href=&quot;#STL和boost&quot; class=&quot;headerlink&quot; title=&quot;STL和boost&quot;&gt;&lt;/a&gt;STL和boost&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;make_pair(obj) 和 push_back(obj) 都会调用obj的拷贝构造函数，构造一个新函数，所以使用时要注意obj是否有一个合适的拷贝构造函数 &lt;/li&gt;
&lt;li&gt;Copy in, copy out.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;shared-ptr&quot;&gt;&lt;a href=&quot;#shared-ptr&quot; class=&quot;headerlink&quot; title=&quot;shared_ptr&quot;&gt;&lt;/a&gt;shared_ptr&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;注意循环引用（cycle）&lt;/li&gt;
&lt;li&gt;可以正确的在STL container中使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里bad()的使用方法会可能导致临时shared_ptr指向对象不会被正确释放（在exception case下）&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; p( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f( p, g() );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f( shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;( &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) ), g() );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; = make_shared&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;()&lt;span class=&quot;comment&quot;&gt;; //make_shared比用new更加高效，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这个函数会在传入时候复制一次shared_ptr，导致引用计数+1，之后return的时候又复制一次，导致引用计数又+1，但是这都会在函数执行后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//被正确释放掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt; func(shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//全程不会增加引用计数，但是要小心，如果这个shared_ptr的会被其他线程赋值，那么这可能会有问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;&amp;amp; func(shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这个时候job会被赋值，job所指的老的对象会被释放掉，job会继续跟踪这个新建对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;&amp;amp; func(shared_ptr&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt; = make_shared&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Job&lt;/span&gt;&amp;gt;()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果以引用传递shared_ptr参数，那么他不能操纵他自己，不然会编译报错&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Association&lt;/span&gt;::addToManager(shared_ptr&amp;lt;Association&amp;gt;&amp;amp; assoc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assoc-&amp;gt;&lt;span class=&quot;selector-tag&quot;&gt;addToManager&lt;/span&gt;(assoc);&lt;span class=&quot;comment&quot;&gt;// 这里addToManager无法接受一个assoc的引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;shared_ptr不能用static_cast等直接做转换，要用它提供的“&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;static_pointer_cast&lt;t&gt;&lt;/t&gt;&lt;/li&gt;
&lt;li&gt;const_pointer_cast&lt;t&gt;&lt;/t&gt;&lt;/li&gt;
&lt;li&gt;dynamic_pointer_cast&lt;t&gt;&lt;/t&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;91 Solution: Smart Pointer Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;string是否是有引用实现的&quot;&gt;&lt;a href=&quot;#string是否是有引用实现的&quot; class=&quot;headerlink&quot; title=&quot;string是否是有引用实现的&quot;&gt;&lt;/a&gt;string是否是有引用实现的&lt;/h3&gt;&lt;p&gt;如果是引用实现的，在多线程条件下，可能因为要加锁所以带来性能上的影响，但是如果非引用实现，每个对象都是独立的copy则无影响。&lt;/p&gt;
&lt;h3 id=&quot;vector-的增长&quot;&gt;&lt;a href=&quot;#vector-的增长&quot; class=&quot;headerlink&quot; title=&quot;vector 的增长&quot;&gt;&lt;/a&gt;vector 的增长&lt;/h3&gt;&lt;p&gt;vector的每次增长都会耗费一定时间去拷贝原有数据，所以如果能够预计大小，则预先reserve(size)会更好&lt;/p&gt;
&lt;h3 id=&quot;vector赋值&quot;&gt;&lt;a href=&quot;#vector赋值&quot; class=&quot;headerlink&quot; title=&quot;vector赋值&quot;&gt;&lt;/a&gt;vector赋值&lt;/h3&gt;&lt;p&gt;最快的是用assign，其次是copy，最后是赋值操作符&lt;/p&gt;
&lt;h3 id=&quot;STL容器&quot;&gt;&lt;a href=&quot;#STL容器&quot; class=&quot;headerlink&quot; title=&quot;STL容器&quot;&gt;&lt;/a&gt;STL容器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;迭代器(iterator) 实际上是一个指针所以&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;::iterator it = &amp;amp;svec[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是正确的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*iter; //返回迭代器所指元素的引用
c.push_back(str); //新元素的值为str的副本
c.begin()/end(); //返回的是迭代器（即指针）
c.front()/back(); //返回的是元素的引用
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;string可以看做为一个字符容器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Allocator&quot;&gt;&lt;a href=&quot;#Allocator&quot; class=&quot;headerlink&quot; title=&quot;Allocator&quot;&gt;&lt;/a&gt;Allocator&lt;/h3&gt;&lt;p&gt;虽然分配器的定制有所限制，但在许多情况下，仍需要用到自定义的分配器，而这一般是为封装对不同类型内存空间（如共享内存与已回收内存）的访问方式，或在使用内存池进行内存分配时提高性能而为。除此以外，从内存占用和运行时间的角度看，在频繁进行少量内存分配的程序中，若引入为之专门定制的分配器，也会获益良多。&lt;/p&gt;
&lt;p&gt;任意满足分配器使用需求的C++类都可作分配器使用。具体来说，当一个类（在此设为类A）有为一个特定类型（在此设为类型T）的对象分配内存的能力时，该类就必须提供以下类型的定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A::pointer 指针&lt;/li&gt;
&lt;li&gt;A::const_pointer 常量指针&lt;/li&gt;
&lt;li&gt;A::reference 引用&lt;/li&gt;
&lt;li&gt;A::const_reference 常量引用&lt;/li&gt;
&lt;li&gt;A::value_type 值类型&lt;/li&gt;
&lt;li&gt;A::size_type 所用内存大小的类型，表示类A所定义的分配模型中的单个对象最大尺寸的无符号整型&lt;/li&gt;
&lt;li&gt;A::difference_type 指针差值的类型，为带符号整型，用于表示分配模型内的两个指针的差异值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###map, unordered_map&lt;br&gt;如果key是一个对象，那么需要对此对象定义一个hash function&lt;/p&gt;
&lt;p&gt;###STL TIP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用&lt;code&gt;empty()&lt;/code&gt;去检查是否是空，而不是用&lt;code&gt;size()==0&lt;/code&gt;检查&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Vector&amp;lt;bool&amp;gt;&lt;/code&gt;会变成bitset&lt;/li&gt;
&lt;li&gt;巧用swap()可以出去vector中的多余容量&lt;/li&gt;
&lt;li&gt;vector extend长度很耗时，可以事前&lt;code&gt;reserve()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;std-function与std-bind-函数指针&quot;&gt;&lt;a href=&quot;#std-function与std-bind-函数指针&quot; class=&quot;headerlink&quot; title=&quot;std::function与std::bind 函数指针&quot;&gt;&lt;/a&gt;std::function与std::bind 函数指针&lt;/h3&gt;&lt;p&gt;function模板类和bind模板函数，使用它们可以实现类似函数指针的功能，但却却比函数指针更加灵活，特别是函数指向类 的非静态成员函数时。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::function&lt;/code&gt;可以绑定到全局函数/类静态成员函数(类静态成员函数与全局函数没有区别),如果要绑定到类的非静态成员函数，则需要使用&lt;code&gt;std::bind&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ()&amp;gt; fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;g_fun&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;g_fun()&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A_fun_static&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;A_fun_static()&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A_fun&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;A_fun()&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A_fun_int&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;A_fun_int() &quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//非静态类成员，因为含有this指针，所以需要使用bind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fp fp1=&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::bind(&amp;amp;A::A_fun,this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fp1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&amp;gt; fpi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//对于参数要使用占位符 std::placeholders::_1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fpi f=&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::bind(&amp;amp;A::A_fun_int,this,std::placeholders::_1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//绑定到全局函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fp f2=fp(&amp;amp;g_fun);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//绑定到类静态成员函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fp f1=fp(&amp;amp;A::A_fun_static);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A().init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A().init2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时，&lt;code&gt;std::bind&lt;/code&gt;绑定到虚函数时会表现出多态行为。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ()&amp;gt; fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;A::f()&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//std::bind可以表现出多态行为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fp f=&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::bind(&amp;amp;A::f,this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B:&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;B::f()&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A* pa=new B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pa-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;预处理注释代码&quot;&gt;&lt;a href=&quot;#预处理注释代码&quot; class=&quot;headerlink&quot; title=&quot;预处理注释代码&quot;&gt;&lt;/a&gt;预处理注释代码&lt;/h2&gt;&lt;p&gt;&lt;code&gt;#if 0&lt;/code&gt;可以用作注释一段代码，因为&lt;code&gt;/* */&lt;/code&gt;不支持迭代，所以有时候用预处理方式更好&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;new-operator-和-operator-new&quot;&gt;&lt;a href=&quot;#new-operator-和-operator-new&quot; class=&quot;headerlink&quot; title=&quot;new operator 和 operator new&quot;&gt;&lt;/a&gt;new operator 和 operator new&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new operator&lt;/code&gt; 就是我们经常在用的new，他会分配地址，构造对象，这个不能重构。（等同于&lt;code&gt;operator new&lt;/code&gt;，之后调用构造函数）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator new&lt;/code&gt; 只分配内存，不构造对象，功能和malloc一样，可以重构。&lt;/li&gt;
&lt;li&gt;placement new 在已有的空间上，构造对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;operator重载&quot;&gt;&lt;a href=&quot;#operator重载&quot; class=&quot;headerlink&quot; title=&quot;operator重载&quot;&gt;&lt;/a&gt;operator重载&lt;/h2&gt;&lt;p&gt;重载有两种方法，一种是在类中对于类的操作符重载，另外一种是全局重载，全局重载有一个条件，就是参数至少有一个是自定义类型，这个是C++标准特别限制的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;b.operator+(a)&lt;/code&gt;等同于&lt;code&gt;b+a&lt;/code&gt;, 等同于operator+(b,a)&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;+(Factor &amp;amp;lhs, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rhs)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lhs.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;() + rhs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//下面的方法是错误的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;+(Int lhs, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rhs)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lhs + rhs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类中重载的例子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cls&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;+(cls &amp;amp;rhs)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + rhs;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;解决-static-属性的初始化赋值问题&quot;&gt;&lt;a href=&quot;#解决-static-属性的初始化赋值问题&quot; class=&quot;headerlink&quot; title=&quot;解决 static 属性的初始化赋值问题&quot;&gt;&lt;/a&gt;解决 static 属性的初始化赋值问题&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c1&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; const size_t &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;//此种方法是通常不允许的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以采用以下workaround&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c1&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; const size_t &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const size_t c1::&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c1&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;操作符&quot;&gt;&lt;a href=&quot;#操作符&quot; class=&quot;headerlink&quot; title=&quot;操作符&quot;&gt;&lt;/a&gt;操作符&lt;/h2&gt;&lt;h3 id=&quot;operator-char-const&quot;&gt;&lt;a href=&quot;#operator-char-const&quot; class=&quot;headerlink&quot; title=&quot;operator char() const&quot;&gt;&lt;/a&gt;operator char() const&lt;/h3&gt;&lt;p&gt;这是一个类型转换的操作符&lt;/p&gt;
&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Misc&quot;&gt;&lt;/a&gt;Misc&lt;/h2&gt;&lt;h3 id=&quot;inline函数不一定inline&quot;&gt;&lt;a href=&quot;#inline函数不一定inline&quot; class=&quot;headerlink&quot; title=&quot;inline函数不一定inline&quot;&gt;&lt;/a&gt;inline函数不一定inline&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;他只是给编译器的一个建议，inline函数中不建议有循环指令&lt;/li&gt;
&lt;li&gt;在类的声明中实现的类（头文件中），默认就为inline函数&lt;/li&gt;
&lt;li&gt;不建议inline 和 static 一起使用，因为会造成大量internal副本。最新版本的C++编译器已经修复此问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;尽量以引用和指针方式传参&quot;&gt;&lt;a href=&quot;#尽量以引用和指针方式传参&quot; class=&quot;headerlink&quot; title=&quot;尽量以引用和指针方式传参&quot;&gt;&lt;/a&gt;尽量以引用和指针方式传参&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;这样可以减少对象被构造和解析的过程&lt;/li&gt;
&lt;li&gt;尽量推迟变量声明的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;itr-和-itr&quot;&gt;&lt;a href=&quot;#itr-和-itr&quot; class=&quot;headerlink&quot; title=&quot;itr++ 和 ++itr&quot;&gt;&lt;/a&gt;itr++ 和 ++itr&lt;/h3&gt;&lt;p&gt;在不考虑返回值的时候&lt;code&gt;++itr&lt;/code&gt;效率更高，因为他不需要做一次数据拷贝，对于基本类型可以忽略，对于Class和迭代器，尽量使用前置自增（减）&lt;br&gt;所以++++itr合法，而itr++++不合法&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//前置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPInt&amp;amp; UPInt::&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;++()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;+= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//后置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPInt&amp;amp; UPInt::&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;++(int)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UPInt oldValue = *&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	++(*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; oldValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;using&quot;&gt;&lt;a href=&quot;#using&quot; class=&quot;headerlink&quot; title=&quot;using&quot;&gt;&lt;/a&gt;using&lt;/h3&gt;&lt;p&gt;如果子类中的属性或者局部变量的名称与父类的重名，可以用using指定使用哪个&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; base::m_attr;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;纯虚函数可以有实现&quot;&gt;&lt;a href=&quot;#纯虚函数可以有实现&quot; class=&quot;headerlink&quot; title=&quot;纯虚函数可以有实现&quot;&gt;&lt;/a&gt;纯虚函数可以有实现&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;base&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vitural bool &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool base::&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;derived&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;base&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;derived* d = new derived();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d-&amp;gt;base::&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//调用纯虚函数的默认实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;mutable-作用&quot;&gt;&lt;a href=&quot;#mutable-作用&quot; class=&quot;headerlink&quot; title=&quot;mutable 作用&quot;&gt;&lt;/a&gt;mutable 作用&lt;/h3&gt;&lt;p&gt;mutable修饰过的属性，即便在const函数中也可以被修改。另外我们也有另一种办法来实现，就是通过一个fake this指针，在const函数中，把const this指针cast成 this，这样就可以通过这个fake this指针做赋值操作了&lt;/p&gt;
&lt;h3 id=&quot;const-调用规则&quot;&gt;&lt;a href=&quot;#const-调用规则&quot; class=&quot;headerlink&quot; title=&quot;const 调用规则&quot;&gt;&lt;/a&gt;const 调用规则&lt;/h3&gt;&lt;p&gt;类中二函数都存在的情况下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;const对象默认调用const成员函数，非const对象默认调用非const成员函数；&lt;/li&gt;
&lt;li&gt;若非const对象想调用const成员函数，则需显式转化，如(const Student&amp;amp;)obj.getAge();&lt;/li&gt;
&lt;li&gt;若const对象想调用非const成员函数，同理const_cast&lt;student&amp;&gt;(constObj).getAge();(注意：constObj要加括号)&lt;/student&amp;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类中只有一函数存在的情况下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非const对象可以调用const成员函数或非const成员函数；&lt;/li&gt;
&lt;li&gt;const对象只能调用const成员函数,直接调用非const函数时编译器会报错；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;指针和引用&quot;&gt;&lt;a href=&quot;#指针和引用&quot; class=&quot;headerlink&quot; title=&quot;指针和引用&quot;&gt;&lt;/a&gt;指针和引用&lt;/h3&gt;&lt;p&gt;引用不可以为空，如果变量需要为空，则要用指针，如果希望不为空则尽量用引用，避免了不必要的验NULL检查&lt;/p&gt;
&lt;h3 id=&quot;绝对不要以多态（Polymorphically）方式处理数组&quot;&gt;&lt;a href=&quot;#绝对不要以多态（Polymorphically）方式处理数组&quot; class=&quot;headerlink&quot; title=&quot;绝对不要以多态（Polymorphically）方式处理数组&quot;&gt;&lt;/a&gt;绝对不要以多态（Polymorphically）方式处理数组&lt;/h3&gt;&lt;p&gt;数组的基本原理是依靠数组下标来寻找对应的对象，所以在多态情况下，跳过的指针偏移不一样，所以用Base指正来使用Derived类数组会有错误。&lt;/p&gt;
&lt;h3 id=&quot;避免类中Implicit的类型装换函数&quot;&gt;&lt;a href=&quot;#避免类中Implicit的类型装换函数&quot; class=&quot;headerlink&quot; title=&quot;避免类中Implicit的类型装换函数&quot;&gt;&lt;/a&gt;避免类中Implicit的类型装换函数&lt;/h3&gt;&lt;p&gt;Implicit的类型转换（或者重载操作符），如果出现任何问题会非常难调试，所以尽量显示的进行类型转换，比如&lt;code&gt;o.asInt()&lt;/code&gt;, &lt;code&gt;o.asDouble()&lt;/code&gt;这样输出。或者以explicit修饰构造函数。&lt;/p&gt;
&lt;h3 id=&quot;复合操作符（-）&quot;&gt;&lt;a href=&quot;#复合操作符（-）&quot; class=&quot;headerlink&quot; title=&quot;复合操作符（+=）&quot;&gt;&lt;/a&gt;复合操作符（+=）&lt;/h3&gt;&lt;p&gt;复合操作符（+=）比单独操作符效率要高，不需要产生临时变量&lt;/p&gt;
&lt;h3 id=&quot;size-t&quot;&gt;&lt;a href=&quot;#size-t&quot; class=&quot;headerlink&quot; title=&quot;size_t&quot;&gt;&lt;/a&gt;size_t&lt;/h3&gt;&lt;p&gt;size_t 解决了在不同系统32、64位系统上 strlen类型大小的问题， 32bit系统strlen返回4字节的值，而64是8字节&lt;/p&gt;
&lt;h3 id=&quot;全局符号&quot;&gt;&lt;a href=&quot;#全局符号&quot; class=&quot;headerlink&quot; title=&quot;全局符号&quot;&gt;&lt;/a&gt;全局符号&lt;/h3&gt;&lt;p&gt;全局符号&lt;code&gt;::&lt;/code&gt;表示调用global的变量或者方法，也适用于如下情况&lt;br&gt;&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;如果test类重构了operator &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;，则`&lt;span class=&quot;javascript&quot;&gt;::&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;`表示使用默认的&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;构造，而不是重构之后的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test t = ::&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; test();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;fork-execl&quot;&gt;&lt;a href=&quot;#fork-execl&quot; class=&quot;headerlink&quot; title=&quot;fork execl&quot;&gt;&lt;/a&gt;fork execl&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;fork 会复制父进程的所有资源，包括文件描述符，会建立一个全新的pid，他的文件描述符复制父进程的&lt;/li&gt;
&lt;li&gt;execl 会开始一个全新的程序全面覆盖父进程，但是他的pid依旧是是他父进程的pid，他也会继续share父进程已经打开的文件描述符，popen实际上就是调用了这个来运行一个新的程序。execl一旦运行 execl后面的code将不会被执行了，因为已经被覆盖掉了&lt;/li&gt;
&lt;li&gt;vfork 父子空间共享内存空间，使得由子函数调用vfork创建的子进程（架设子进程为先执行函数的进程）调用其它函数或运行其他程序后会，父进程会出现段错误，&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dup-dup2&quot;&gt;&lt;a href=&quot;#dup-dup2&quot; class=&quot;headerlink&quot; title=&quot;dup dup2&quot;&gt;&lt;/a&gt;dup dup2&lt;/h2&gt;&lt;p&gt;使newfd指向fd的文件&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;newfd = dup(&lt;span class=&quot;name&quot;&gt;fd&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dup(&lt;span class=&quot;name&quot;&gt;fd&lt;/span&gt;,newfd)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;strncpy-and-snprintf&quot;&gt;&lt;a href=&quot;#strncpy-and-snprintf&quot; class=&quot;headerlink&quot; title=&quot;strncpy and snprintf&quot;&gt;&lt;/a&gt;strncpy and snprintf&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;strncpy：如果字符串超过 size n， 那么他不会再字符串结尾加上\0&lt;/li&gt;
&lt;li&gt;snprintf: 如果字符串超出 n，他会在最后一个字符加上\0， 所以这个更安全&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strncat(char *dest, const char *src, size_t n)&lt;/code&gt;: 最多从源中拷贝n个字符到目标串中，并在后面加一个0；也就是说，最多会有n+1个字符被写进dest。如果dest的容量为n，那么将会dest将会溢出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;execl与execlp的区别&quot;&gt;&lt;a href=&quot;#execl与execlp的区别&quot; class=&quot;headerlink&quot; title=&quot;execl与execlp的区别&quot;&gt;&lt;/a&gt;execl与execlp的区别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;execl只当前路径（不是当前路径必须加绝对路径）&lt;/li&gt;
&lt;li&gt;execlp使用系统的搜索路径&lt;/li&gt;
&lt;li&gt;带l的exec函数：execl,execlp,execle，表示后边的参数以可变参数的形式给出且都以一个空指针结束。&lt;/li&gt;
&lt;li&gt;带 p的exec函数：execlp,execvp，表示第一个参数path不用输入完整路径，只有给出命令名即可，它会在环境变量PATH当中查找命令&lt;/li&gt;
&lt;li&gt;不带l的exec函数：execv,execvp表示命令所需的参数以char *arg[]形式给出且arg最后一个元素必须是NULL&lt;/li&gt;
&lt;li&gt;带e的exec函数：execle表示，将环境变量传递给需要替换的进程&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;system&quot;&gt;&lt;a href=&quot;#system&quot; class=&quot;headerlink&quot; title=&quot;system()&quot;&gt;&lt;/a&gt;system()&lt;/h3&gt;&lt;p&gt;system函数对返回值的处理，涉及3个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阶段1：创建子进程等准备工作。如果失败，返回-1。&lt;/li&gt;
&lt;li&gt;阶段2：调用/bin/sh拉起shell脚本,如果拉起失败或者shell未正常执行结束，原因值被写入到status的低8~15比特位中。system的man中只说明了会写了127这个值, 但实测发现还会写126等值。&lt;/li&gt;
&lt;li&gt;阶段3：如果shell脚本正常执行结束，将shell返回值填到status的低8~15比特位中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;判断一个system函数调用shell脚本是否正常结束的方法应该是如下3个条件同时成立：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;-1 != status&lt;/li&gt;
&lt;li&gt;WIFEXITED(status)为真&lt;/li&gt;
&lt;li&gt;0 == WEXITSTATUS(status)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;setbuf&quot;&gt;&lt;a href=&quot;#setbuf&quot; class=&quot;headerlink&quot; title=&quot;setbuf()&quot;&gt;&lt;/a&gt;setbuf()&lt;/h2&gt;&lt;p&gt;函数setbuf()用于将指定缓冲区与特定的文件流相关联，实现操作缓冲区时直接操作文件流的功能。其原型如下：&lt;br&gt;    &lt;code&gt;void setbuf(FILE * stream, char * buf);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;##unlink()&lt;br&gt;&lt;code&gt;unlink(char* filename)&lt;/code&gt;用于删除link，如果没有任何link，且所有操作这个文件的fd已经关闭，unlink会删除文件&lt;/p&gt;
&lt;h2 id=&quot;unordered-map-和-map&quot;&gt;&lt;a href=&quot;#unordered-map-和-map&quot; class=&quot;headerlink&quot; title=&quot;unordered_map 和 map&quot;&gt;&lt;/a&gt;unordered_map 和 map&lt;/h2&gt;&lt;p&gt;unordered_map 要比 map更快，同样是唯一键值，如果只关心键值，可以使用unordered_set&lt;/p&gt;
&lt;h2 id=&quot;多态和类型转换&quot;&gt;&lt;a href=&quot;#多态和类型转换&quot; class=&quot;headerlink&quot; title=&quot;多态和类型转换&quot;&gt;&lt;/a&gt;多态和类型转换&lt;/h2&gt;&lt;p&gt;考虑如下程序&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A::f()\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//printf(&quot;A::g(), %d\n&quot;,a);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A::g()\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A::g(), %d\n&quot;&lt;/span&gt;,a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//printf(&quot;A::g()\n&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        g();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A::h()\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         f(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         g(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//virtual&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~A()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;destruct A\n&quot;&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; B: &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; A::g; \\ &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; C++&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;keyword can make the derived &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; call a redefinited base &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;B::f()\n&quot;&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;B::g()\n&quot;&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;B::h()\n&quot;&lt;/span&gt;);g();f();&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;B::u()\n&quot;&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//virtual&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~B()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;destruct B\n&quot;&lt;/span&gt;);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    B b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//b.g(1);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A * p=&amp;amp;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A* p1 = new B();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p-&amp;gt;h();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p-&amp;gt;g();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p-&amp;gt;g(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A *a = &lt;span class=&quot;keyword&quot;&gt;dynamic_cast&lt;/span&gt;&amp;lt;A*&amp;gt;(&amp;amp;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a-&amp;gt;h();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a-&amp;gt;g();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a-&amp;gt;g(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//a-&amp;gt;u();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    B* pb = &amp;amp;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pb-&amp;gt;g(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pb-&amp;gt;g();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; p1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应输出为：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;A::h()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::f()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A::g(), 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A::h()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::f()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A::g(), 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A::g(), 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B::g()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;destruct A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;destruct B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;destruct A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结论&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果不是虚函数，指针类型的转换会导致调用对应类型的种的函数，即不为多态&lt;/li&gt;
&lt;li&gt;如果是虚函数则，按照多态显示&lt;/li&gt;
&lt;li&gt;如果是虚函数调用所在子类的非虚函数或者虚函数，则调用的都是子类中的函数，即便是非虚函数也不会调用到父类中的对应函数&lt;/li&gt;
&lt;li&gt;如果Base指针去访问一个子类中的非虚函数，则编译报错 &lt;/li&gt;
&lt;li&gt;如果子类有父类的同名函数（不论是否是虚函数），则父类的所有同名的函数都被redefine（不同参数的），&lt;code&gt;using&lt;/code&gt;keyword可以改进这个问题，&lt;code&gt;using A::g()&lt;/code&gt;可以使B调用到&lt;code&gt;A::g()&lt;/code&gt;，但是如果B已经有了g()，则无效&lt;/li&gt;
&lt;li&gt;如果不是new出的对象不用考虑析构问题，系统可以很好的析构父类和子类&lt;/li&gt;
&lt;li&gt;如果是new，需要虚析构函数，以保证父类指针也能正常析构一个指向子类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;C-11&quot;&gt;&lt;a href=&quot;#C-11&quot; class=&quot;headerlink&quot; title=&quot;C++11&quot;&gt;&lt;/a&gt;C++11&lt;/h2&gt;&lt;h3 id=&quot;auto&quot;&gt;&lt;a href=&quot;#auto&quot; class=&quot;headerlink&quot; title=&quot;auto&quot;&gt;&lt;/a&gt;auto&lt;/h3&gt;&lt;p&gt;注意auto使用不当会导致vector被复制，而不是被引用&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; v = &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;i : v) &lt;span class=&quot;comment&quot;&gt;// access by const reference&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; i : v) &lt;span class=&quot;comment&quot;&gt;// access by value, the type of i is int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt;&amp;amp;&amp;amp; i : v) &lt;span class=&quot;comment&quot;&gt;// access by reference, the type of i is int&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n : &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;) &lt;span class=&quot;comment&quot;&gt;// the initializer may be a braced-init-list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Range-based-for-loop&quot;&gt;&lt;a href=&quot;#Range-based-for-loop&quot; class=&quot;headerlink&quot; title=&quot;Range-based for loop&quot;&gt;&lt;/a&gt;Range-based for loop&lt;/h3&gt;&lt;p&gt;此方法常用语STL中内容的遍历，注意使用不当会导致容器中对象被复制 最佳用法是 &lt;code&gt;for (auto&amp;amp; elem : range)&lt;/code&gt;， 对于性能这和手动写的没什么区别。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;for (auto elem : range)&lt;/code&gt; is very tempting and very bad. It produces &lt;code&gt;auto elem = *__begin;&lt;/code&gt; (see 6.5.4 [stmt.ranged]/1), which copies each element, which is bad because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It might not compile - for example, unique_ptr elements aren’t copyable. This is problematic both for users who won’t understand the resulting compiler errors, and for users writing generic code that’ll happily compile until someone instantiates it for movable-only elements.&lt;/li&gt;
&lt;li&gt;It might misbehave at runtime - for example, “elem = val;” will modify the copy, but not the original element in the range. Additionally, &amp;amp;elem will be invalidated after each iteration.&lt;/li&gt;
&lt;li&gt;It might be inefficient - for example, unnecessarily copying std::string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;重写-重载&quot;&gt;&lt;a href=&quot;#重写-重载&quot; class=&quot;headerlink&quot; title=&quot;重写 重载&quot;&gt;&lt;/a&gt;重写 重载&lt;/h2&gt;&lt;p&gt;如果父类定义了一个g(int)，子类定义了一个g()，那么用子类的对象访问g(int)那么会编译出错，因为子类定义的g()函数覆盖了g(int)所以子类不能访问。&lt;br&gt;如果父类定义了一个virtual g(int)，子类定义了一个virtualg()，那么用子类的对象访问(用.访问)virtual g(int)那么会编译出错，因为子类定义的virtual g()函数覆盖了virtual g(int)所以子类不能访问， 但是如果用指针（-&amp;gt;）访问则会得到预期结果&lt;br&gt;override-&amp;gt;重写(=覆盖)、overload-&amp;gt;重载、polymorphism -&amp;gt; 多态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重定义（redefining）也叫隐藏，子类重新定义父类中的非虚函数，屏蔽了父类的同名函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子类和父类的函数名称相同，但参数不同，此时不管父类函数是不是virtual函数，都将被隐藏(如果不用父类指针访问的话)。&lt;/li&gt;
&lt;li&gt;子类和父类的函数名称相同，参数也相同，但是父类函数不是virtual函数，父类的函数将被隐藏。&lt;/li&gt;
&lt;li&gt;using Base::f 可以手动指定使用哪个函数（子类父类会保留下来）子类和父类冲突时，保留父类的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重写（override）也称为覆盖，子类重新定义父类中有相同名称和参数的虚函数，主要在继承关系中出现。&lt;/li&gt;
&lt;li&gt;重载（overload）函数有同样的名称，但是参数列表不相同的情形，这样的同名不同参数的函数之间，互相称之为重载函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;NOTICE&lt;/em&gt; 除了赋值运算符重载函数以外，所有的运算符重载函数都可以被派生类继承。也就是说复制运算操作符不能被继承&lt;/p&gt;
&lt;h2 id=&quot;attribute-constructor&quot;&gt;&lt;a href=&quot;#attribute-constructor&quot; class=&quot;headerlink&quot; title=&quot;attribute ((constructor))&quot;&gt;&lt;/a&gt;&lt;strong&gt;attribute&lt;/strong&gt; ((constructor))&lt;/h2&gt;&lt;p&gt; gcc为函数提供了几种类型的属性，其中包含：构造函数(constructors)和析构函数(destructors)。&lt;br&gt;程序员应当使用类似下面的方式来指定这些属性：&lt;br&gt;    static void start(void) &lt;strong&gt;attribute&lt;/strong&gt; ((constructor));&lt;br&gt;    static void stop(void) &lt;strong&gt;attribute&lt;/strong&gt; ((destructor));&lt;br&gt;带有”构造函数”属性的函数将在main()函数之前或者动态库被load之前被执行，而声明为”析构函数”属性的函数则将在main()或者动态库unload的时候退出时执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reference：&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html#Common-Function-Attributes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html#Common-Function-Attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;多线程&quot;&gt;&lt;a href=&quot;#多线程&quot; class=&quot;headerlink&quot; title=&quot;多线程&quot;&gt;&lt;/a&gt;多线程&lt;/h2&gt;&lt;h3 id=&quot;互斥量&quot;&gt;&lt;a href=&quot;#互斥量&quot; class=&quot;headerlink&quot; title=&quot;互斥量&quot;&gt;&lt;/a&gt;互斥量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;注意互斥量的粒度，通常来讲对于一个变量就要对应一个互斥量，这是最优方案，另外可以增加粒度比如多个变量对应同一个互斥量，这样会影响效率，如果允许可以这样&lt;/li&gt;
&lt;li&gt;互斥量尽量存在于基类中，这样对于使用者是透明的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;pthread-attr-setscope&quot;&gt;&lt;a href=&quot;#pthread-attr-setscope&quot; class=&quot;headerlink&quot; title=&quot;pthread_attr_setscope&quot;&gt;&lt;/a&gt;pthread_attr_setscope&lt;/h3&gt;&lt;p&gt;pthread_attr_setscope函数的作用是设置线程的在什么范围内竞争CPU资源，可以取值PTHREAD_SCOPE_SYSTEM或PTHREAD_SCOPE_PROCESS，前者表示在整个系统内竞争CPU资源，后者表示在同一进程内竞争CPU资源，默认为前者，原型如下：&lt;br&gt;&lt;code&gt;int pthread_attr_setscope(pthread_attr_t *attr, int scope);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;pthread-attr-setstacksize&quot;&gt;&lt;a href=&quot;#pthread-attr-setstacksize&quot; class=&quot;headerlink&quot; title=&quot;pthread_attr_setstacksize&quot;&gt;&lt;/a&gt;pthread_attr_setstacksize&lt;/h3&gt;&lt;p&gt;设置线程栈的大小, 单位是字节，在默认情况下线程的栈是比较大的&lt;/p&gt;
&lt;h3 id=&quot;pthread-attr-setdetachstate&quot;&gt;&lt;a href=&quot;#pthread-attr-setdetachstate&quot; class=&quot;headerlink&quot; title=&quot;pthread_attr_setdetachstate&quot;&gt;&lt;/a&gt;pthread_attr_setdetachstate&lt;/h3&gt;&lt;p&gt;pthread_attr_setdetachstate函数的作用是设置线程的detachedstate属性，可以取值PTHREAD_CREATE_JOINABLE和PTHREAD_CREATE_DETACHED，前者是默认值，表示其他线程可以使用pthread_join函数等待本线程结束，后者表示其他线程不可以对本线程使用pthread_join&lt;/p&gt;
&lt;h3 id=&quot;pthread-attr-setschedpolicy&quot;&gt;&lt;a href=&quot;#pthread-attr-setschedpolicy&quot; class=&quot;headerlink&quot; title=&quot;pthread_attr_setschedpolicy&quot;&gt;&lt;/a&gt;pthread_attr_setschedpolicy&lt;/h3&gt;&lt;p&gt;pthread_attr_setschedpolicy函数的作用是设置schedpolicy属性，即线程调度算法。schedpolicy属性值可以是SCHED_RR、SCHED_FIFO、SCHED_OTHER，其中SCHED_RR表示轮训调度，SCHED_FIFO表示先进先出调度，SCHED_OTHER表示其他。拥有管理员权限的进程才可以创建具有SCHED_RR或SCHED_FIFO调度算法的线程，一般线程的默认调度算法都是SCHED_OTHER。&lt;/p&gt;
&lt;h3 id=&quot;pthread-once&quot;&gt;&lt;a href=&quot;#pthread-once&quot; class=&quot;headerlink&quot; title=&quot;pthread_once&quot;&gt;&lt;/a&gt;pthread_once&lt;/h3&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;pthread.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pthread_once(pthread_once_t *once_control, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*init_routine)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_once_t once_control = PTHREAD_ONCE_INIT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The first call to pthread_once() by any thread in a process, with a given once_control, will call the init_routine() with no arguments. Subsequent calls of pthread_once() with the same once_control will not call the init_routine(). On return from pthread_once(), it is guaranteed that init_routine() has completed. The once_control parameter is used to determine whether the associated initialisation routine has been called.&lt;br&gt;The function pthread_once() is not a cancellation point. However, if init_routine() is a cancellation point and is canceled, the effect on once_control is as if pthread_once() was never called.&lt;/p&gt;
&lt;p&gt;The constant PTHREAD_ONCE_INIT is defined by the header &lt;pthread.h&gt;.&lt;/pthread.h&gt;&lt;/p&gt;
&lt;p&gt;The behaviour of pthread_once() is undefined if once_control has automatic storage duration or is not initialised by PTHREAD_ONCE_INIT.&lt;/p&gt;
&lt;h3 id=&quot;pthread-cond-signal&quot;&gt;&lt;a href=&quot;#pthread-cond-signal&quot; class=&quot;headerlink&quot; title=&quot;pthread_cond_signal()&quot;&gt;&lt;/a&gt;pthread_cond_signal()&lt;/h3&gt;&lt;p&gt;也要配合mutex来使用，不然会可能丢失signal，考虑如下：&lt;/p&gt;
&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Process A                             Process B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_mutex_lock(&lt;span class=&quot;name&quot;&gt;&amp;amp;mutex&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while (&lt;span class=&quot;name&quot;&gt;condition&lt;/span&gt; == FALSE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      condition = TRUE&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      pthread_cond_signal(&lt;span class=&quot;name&quot;&gt;&amp;amp;cond&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_cond_wait(&lt;span class=&quot;name&quot;&gt;&amp;amp;cond&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;&amp;amp;mutex&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果刚好是这个情形，那么由于B没加锁，那么本来符合条件的A也再次被阻塞&lt;/p&gt;
&lt;h3 id=&quot;fseek-线程不安全&quot;&gt;&lt;a href=&quot;#fseek-线程不安全&quot; class=&quot;headerlink&quot; title=&quot;fseek 线程不安全&quot;&gt;&lt;/a&gt;fseek 线程不安全&lt;/h3&gt;&lt;p&gt;可考虑用pread，替代fseek和fread组合&lt;/p&gt;
&lt;h3 id=&quot;strtok&quot;&gt;&lt;a href=&quot;#strtok&quot; class=&quot;headerlink&quot; title=&quot;strtok()&quot;&gt;&lt;/a&gt;strtok()&lt;/h3&gt;&lt;p&gt;strtok是一个线程不安全的函数，他的安全版本是strtok_r()&lt;/p&gt;
&lt;h2 id=&quot;网络和进程通信&quot;&gt;&lt;a href=&quot;#网络和进程通信&quot; class=&quot;headerlink&quot; title=&quot;网络和进程通信&quot;&gt;&lt;/a&gt;网络和进程通信&lt;/h2&gt;&lt;h3 id=&quot;readv-和writev&quot;&gt;&lt;a href=&quot;#readv-和writev&quot; class=&quot;headerlink&quot; title=&quot;readv()和writev()&quot;&gt;&lt;/a&gt;readv()和writev()&lt;/h3&gt;&lt;p&gt;这两个函数类似于read和write，不过readv和writev允许单个系统调用读入到或写出自一个或多个缓冲区。这些操作分别称为分散读（scatter read）和集中写（gather write），因为来自读操作的输入数据被分散到多个应用缓冲区中，而来自应用缓冲区的输出数据则被集中提供给单个写操作。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;sys/uio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; readv(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; filedes, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; iovec *iov, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; iovcnt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; writev(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; filedes, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; iovec *iov, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; iovcnt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; iovec &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;     *iov_base;       &lt;span class=&quot;comment&quot;&gt;/* starting address of buffer */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;    iov_len;        &lt;span class=&quot;comment&quot;&gt;/* size of buffer */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###TCP&lt;br&gt;当服务器close了一个连接之后，如果client接着发送数据，会收到一个RST相应，client再发送数据时，就会收到一个SIGPIPE给进程，默认动作是结束client进程，我们可以使用如下方法来指定信号的处理&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signal(SIGPIPE, SIG_IGN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signal(SIGCHLD, SIG_IGN);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;read-and-write&quot;&gt;&lt;a href=&quot;#read-and-write&quot; class=&quot;headerlink&quot; title=&quot;read and write&quot;&gt;&lt;/a&gt;read and write&lt;/h3&gt;&lt;p&gt;他们有不同的buffer，所以是全双工运行， &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;read返回0：表示连接关闭，或者说EOF&lt;/li&gt;
&lt;li&gt;read返回&amp;lt;0: 表示发生错误，check errno&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DNS-Lookup&quot;&gt;&lt;a href=&quot;#DNS-Lookup&quot; class=&quot;headerlink&quot; title=&quot;DNS Lookup&quot;&gt;&lt;/a&gt;DNS Lookup&lt;/h3&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hostent&lt;/span&gt;&lt;/span&gt; *gethostbyname(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; gethostbyname_r(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hostent&lt;/span&gt;&lt;/span&gt; *ret, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *buf, size_t buflen,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hostent&lt;/span&gt;&lt;/span&gt; **result, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *h_errnop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hostent&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;  *h_name;            &lt;span class=&quot;comment&quot;&gt;/* official name of host */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; **h_aliases;         &lt;span class=&quot;comment&quot;&gt;/* alias list */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    h_addrtype;        &lt;span class=&quot;comment&quot;&gt;/* host address type */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    h_length;          &lt;span class=&quot;comment&quot;&gt;/* length of address */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; **h_addr_list;       &lt;span class=&quot;comment&quot;&gt;/* list of addresses */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;gethostbyname_r&lt;/code&gt;线程安全，&lt;code&gt;gethostbyname&lt;/code&gt;不是线程安全的。&lt;/p&gt;
&lt;h3 id=&quot;Network-Address-Convert&quot;&gt;&lt;a href=&quot;#Network-Address-Convert&quot; class=&quot;headerlink&quot; title=&quot;Network Address Convert&quot;&gt;&lt;/a&gt;Network Address Convert&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;const char *inet_ntop(int af, const void *src,
                         char *dst, socklen_t size);
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;This function converts the network address structure src in the af address family into a character string.  The resulting string is copied to the buffer pointed to by dst, which must be a non-NULL pointer.  The caller specifies the number of bytes available in this  buffer in the argument size.&lt;/li&gt;
&lt;li&gt;与此相似的还有&lt;code&gt;inet_ntoa&lt;/code&gt;, 但是他是线程不安全的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; af, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *src, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *dst)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反向转换&lt;/p&gt;
&lt;h3 id=&quot;多种sockaddr&quot;&gt;&lt;a href=&quot;#多种sockaddr&quot; class=&quot;headerlink&quot; title=&quot;多种sockaddr&quot;&gt;&lt;/a&gt;多种sockaddr&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;struct sockaddr&lt;/li&gt;
&lt;li&gt;struct sockaddr_in&lt;/li&gt;
&lt;li&gt;struct sockaddr_storage&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网络字节序&quot;&gt;&lt;a href=&quot;#网络字节序&quot; class=&quot;headerlink&quot; title=&quot;网络字节序&quot;&gt;&lt;/a&gt;网络字节序&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;htons&lt;/li&gt;
&lt;li&gt;ntohs&lt;/li&gt;
&lt;li&gt;htonl&lt;/li&gt;
&lt;li&gt;ntohl&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;类内初始化和初始化列表&quot;&gt;&lt;a href=&quot;#类内初始化和初始化列表&quot; class=&quot;headerlink&quot; title=&quot;类内初始化和初始化列表&quot;&gt;&lt;/a&gt;类内初始化和初始化列表&lt;/h2&gt;&lt;p&gt;好像C++11之后就支持类内初始化了，在之前类内初始化是不允许的&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//C++98允许&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//C++11允许，而98不允许&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;如果两者同时出现 那么初始化列表会覆盖类内初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##虚继承&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;B&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:public&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;A&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;B&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上例子如果我们使用c.print就会出现二义性的问题，采用虚继承可以解决这个问题&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt;:&lt;span class=&quot;title&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;()&lt;span class=&quot;comment&quot;&gt;//可以指定使用哪个版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;c&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;B&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##Deamon&lt;br&gt;一个守护进程需要fork两次，并且调用setsid()，两次是为了摆脱终端对于程序生命周期的控制，使其成为init 1进程的子进程，setsid会设置一个新的回话，不然进程会随着本回话的退出而结束。&lt;br&gt;The second fork(2) is there to ensure that the new process is not a session leader。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      记录下C\C++开发过程中不断学到的新东西:C++11, STL, Boost, 多线程
    
    </summary>
    
      <category term="C/C++" scheme="http://matthewgao.github.io/categories/C-C/"/>
    
    
      <category term="c" scheme="http://matthewgao.github.io/tags/c/"/>
    
      <category term="c++" scheme="http://matthewgao.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Python Notes</title>
    <link href="http://matthewgao.github.io/python-notes/"/>
    <id>http://matthewgao.github.io/python-notes/</id>
    <published>2016-01-08T08:51:09.000Z</published>
    <updated>2016-01-08T08:51:09.000Z</updated>
    
    <content type="html">&lt;p&gt;##Pypi镜像&lt;br&gt;解决国内访问pypi速度慢的问题，注意要加上&lt;code&gt;--trusted-host pypi.mirrors.ustc.edu.cn&lt;/code&gt; 因为有些不提供安全连接，或者证书不可信&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//pypi.douban.com/simple  豆瓣&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//pypi.hustunique.com/simple  华中理工大学&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//pypi.sdutlinux.org/simple 山东理工大学&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//pypi.mirrors.ustc.edu.cn/simple 中国科学技术大学&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3.4 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -i &lt;span class=&quot;keyword&quot;&gt;http&lt;/span&gt;://pypi.mirrors.ustc.edu.cn/simple &lt;span class=&quot;comment&quot;&gt;--trusted-host pypi.mirrors.ustc.edu.cn  flask-restful&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h2&gt;&lt;h3 id=&quot;from-import&quot;&gt;&lt;a href=&quot;#from-import&quot; class=&quot;headerlink&quot; title=&quot;from import&quot;&gt;&lt;/a&gt;from import&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果module1中有变量X，module2用from来导入module1，则在赋值X的时候并不会改动module1中的X，而用import可以。&lt;/li&gt;
&lt;li&gt;from会导致reload失效，因为from导入的模块拿的只是一个被reload的引用，必须在reload之后再执行一次from import&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;类&quot;&gt;&lt;a href=&quot;#类&quot; class=&quot;headerlink&quot; title=&quot;类&quot;&gt;&lt;/a&gt;类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;子类并不会自动调用父类的构造函数，需要显示的调用。&lt;/li&gt;
&lt;li&gt;类的赋值操作并不会查询搜索树。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;init&lt;/strong&gt; 函数不支持重载，因为python支持可变参数&lt;/li&gt;
&lt;li&gt;两个下划线开头的是伪私有类属性, 他会变成_ClassName__X&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;内建属性&quot;&gt;&lt;a href=&quot;#内建属性&quot; class=&quot;headerlink&quot; title=&quot;内建属性&quot;&gt;&lt;/a&gt;内建属性&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;__class__&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 返回类名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__base__ &lt;span class=&quot;comment&quot;&gt;# 父类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__dict__ &lt;span class=&quot;comment&quot;&gt;# 属性字典，dir()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__slot__ &lt;span class=&quot;comment&quot;&gt;# 禁止生成dict树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__getattr__ &lt;span class=&quot;comment&quot;&gt;# X.undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__getattribute__ &lt;span class=&quot;comment&quot;&gt;# X.any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__contain__ &lt;span class=&quot;comment&quot;&gt;# item in X&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__call__ &lt;span class=&quot;comment&quot;&gt;# 可以直接这样使用 class_object_name()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;委托&quot;&gt;&lt;a href=&quot;#委托&quot; class=&quot;headerlink&quot; title=&quot;委托&quot;&gt;&lt;/a&gt;委托&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Super&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.action() &lt;span class=&quot;comment&quot;&gt;#action需要被实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Super)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;in provider.action&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;h3 id=&quot;闭包&quot;&gt;&lt;a href=&quot;#闭包&quot; class=&quot;headerlink&quot; title=&quot;闭包&quot;&gt;&lt;/a&gt;闭包&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _x = &lt;span class=&quot;string&quot;&gt;&quot;attr&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(_x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; printf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Decorator&quot;&gt;&lt;a href=&quot;#Decorator&quot; class=&quot;headerlink&quot; title=&quot;Decorator&quot;&gt;&lt;/a&gt;Decorator&lt;/h2&gt;&lt;h3 id=&quot;Singleton&quot;&gt;&lt;a href=&quot;#Singleton&quot; class=&quot;headerlink&quot; title=&quot;Singleton&quot;&gt;&lt;/a&gt;Singleton&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cls, *args, **kw)&lt;/span&gt;:&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _instance = &amp;#123;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cls &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _instance:   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _instance[cls] = cls(*args, **kw)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _instance[cls]      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; wrapper                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@singleton &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(gentoo.LXRPClientHandler)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;缺点是MyClass实际上是一个函数（wrapper），所以不能直接通过MyClass取类中属性&lt;/li&gt;
&lt;li&gt;&lt;p&gt;且&lt;code&gt;m = MyClass(); n = MyClass(); o = type(n)(); then m == n &amp;amp;&amp;amp; m != o &amp;amp;&amp;amp; n != o&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;@staticmethod&lt;/code&gt;不需要表示自身对象的self和自身类的cls参数，就跟使用函数一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@classmethod&lt;/code&gt;也不需要self参数，但第一个参数需要是表示自身类的cls参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;规范&quot;&gt;&lt;a href=&quot;#规范&quot; class=&quot;headerlink&quot; title=&quot;规范&quot;&gt;&lt;/a&gt;规范&lt;/h2&gt;&lt;h3 id=&quot;命名规则&quot;&gt;&lt;a href=&quot;#命名规则&quot; class=&quot;headerlink&quot; title=&quot;命名规则&quot;&gt;&lt;/a&gt;命名规则&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Type&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Public&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Internal&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Modules&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_lower_with_under&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Packages&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Classes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;CapWords&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_CapWords&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Exceptions&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;CapWords&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Functions&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_lower_with_under()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Global/Class Constants&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;CAPS_WITH_UNDER&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_CAPS_WITH_UNDER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Global/Class Variables&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_lower_with_under&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Instance Variables&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_lower_with_under (protected) or __lower_with_under (private)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Method Names&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under()&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;_lower_with_under() (protected) or __lower_with_under() (private)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Function/Method Parameters&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Local Variables&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lower_with_under&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;single_trailing_underscore_&lt;/code&gt; : used by convention to avoid conflicts with Python keyword, e.g.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Tkinter.Toplevel(master, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;ClassName&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;__double_leading_underscore&lt;/code&gt; : when naming a class attribute, invokes name mangling (inside class FooBar, &lt;strong&gt;boo becomes _FooBar&lt;/strong&gt;boo).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;__double_leading_and_trailing_underscore__&lt;/code&gt; : “magic” objects or attributes that live in user-controlled namespaces. E.g. &lt;strong&gt;init&lt;/strong&gt; , &lt;strong&gt;import&lt;/strong&gt; or &lt;strong&gt;file&lt;/strong&gt; . Never invent such names; only use them as documented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_single_leading_underscore&lt;/code&gt; : weak “internal use” indicator. E.g. from M import * does not import objects whose name starts with an underscore.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;编程规范&quot;&gt;&lt;a href=&quot;#编程规范&quot; class=&quot;headerlink&quot; title=&quot;编程规范&quot;&gt;&lt;/a&gt;编程规范&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;每行80字符，注释72字符&lt;/li&gt;
&lt;li&gt;参数多的时候要换行，少数情况下要用&lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;if not alist&lt;/code&gt; 检查是否为空，而不是用&lt;code&gt;if len(alist) == 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;import顺序&quot;&gt;&lt;a href=&quot;#import顺序&quot; class=&quot;headerlink&quot; title=&quot;import顺序&quot;&gt;&lt;/a&gt;import顺序&lt;/h3&gt;&lt;p&gt;不要一行import多个包&lt;/p&gt;
&lt;p&gt;Imports should be grouped in the following order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;standard library imports&lt;/li&gt;
&lt;li&gt;related third party imports&lt;/li&gt;
&lt;li&gt;local application/library specific imports&lt;/li&gt;
&lt;li&gt;Wildcard imports ( from &lt;module&gt; import * ) should be avoided&lt;/module&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;类设计&quot;&gt;&lt;a href=&quot;#类设计&quot; class=&quot;headerlink&quot; title=&quot;类设计&quot;&gt;&lt;/a&gt;类设计&lt;/h3&gt;&lt;p&gt;如果在不确定函数或者属性是public还是non-public，尽量还是先声明为non-public，从non到public很容易，反过来则很难&lt;/p&gt;
&lt;h3 id=&quot;Programming-Recommendations&quot;&gt;&lt;a href=&quot;#Programming-Recommendations&quot; class=&quot;headerlink&quot; title=&quot;Programming Recommendations&quot;&gt;&lt;/a&gt;Programming Recommendations&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Yes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;No:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The first form means that the name of the resulting function object is specifically ‘f’ instead of the generic ‘&lt;lambda&gt;‘. This is more useful for tracebacks and string representations in general. The use of the assignment statement eliminates the sole benefit a lambda expression can offer over an explicit def statement (i.e. that it can be embedded inside a larger expression)&lt;/lambda&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use exception chaining appropriately. In Python 3, “raise X from Y” should be used to indicate explicit replacement without losing the original traceback.&lt;/li&gt;
&lt;li&gt;Derive exceptions from Exception rather than BaseException . Direct inheritance from BaseException is reserved for exceptions where catching them is almost always the wrong thing to do.&lt;/li&gt;
&lt;li&gt;Additionally, for all try/except clauses, limit the try clause to the absolute minimum amount of code necessary. Again, this avoids masking bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Yes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = collection[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except KeyError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; key_not_found(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; handle_value(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;No:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Too broad!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; handle_value(collection[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except KeyError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Will also &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; KeyError raised &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; handle_value()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; key_not_found(key)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Object type comparisons should always use isinstance() instead of comparing types directly.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Yes&lt;/span&gt;: if isinstance(obj, int):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;elm&quot;&gt;&lt;span class=&quot;type&quot;&gt;No&lt;/span&gt;:  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;(obj) is &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;(1):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;For sequences, (strings, lists, tuples), use the fact that empty sequences are false.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Yes&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;seq&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;seq&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;No&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(&lt;span class=&quot;built_in&quot;&gt;seq&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; len(&lt;span class=&quot;built_in&quot;&gt;seq&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Don’t compare boolean values to True or False using == .&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Yes:&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;greeting:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;No:&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; greeting == &lt;span class=&quot;string&quot;&gt;True:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Worse:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; greeting is &lt;span class=&quot;string&quot;&gt;True:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Class-继承&quot;&gt;&lt;a href=&quot;#Class-继承&quot; class=&quot;headerlink&quot; title=&quot;Class 继承&quot;&gt;&lt;/a&gt;Class 继承&lt;/h2&gt;&lt;p&gt;当一个类被设计为基类的时候，要考虑到那些方法是要被子类覆盖的，那些是给子类用的（subclass API），那些只是基类用的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公共属性，前面不应该有一个下划线&lt;/li&gt;
&lt;li&gt;如果你的属性名与keyword或者其他什么的冲突，则可以考虑在尾部加一个下划线&lt;/li&gt;
&lt;li&gt;对于简单的公共属性，直接用属性名访问，而不要像jave一样定义一些accessor/mutator methods，如果之后需要对于这个属性进行额外处理， 那么可以使用&lt;code&gt;@property&lt;/code&gt;来强化这个属性（防止用property来计算复杂属性）&lt;/li&gt;
&lt;li&gt;如果你的类可能被继承，则把那些不想被子类使用的属性和方法用两个下划线开头&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;super-还是-BaseClass&quot;&gt;&lt;a href=&quot;#super-还是-BaseClass&quot; class=&quot;headerlink&quot; title=&quot;super() 还是 BaseClass()&quot;&gt;&lt;/a&gt;super() 还是 BaseClass()&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Base&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&quot;Base&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sub&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Base)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#Base.__init__(self)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super().__init__()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两种方法都可以用作调用父类初始化函数，但是super()更好，不会在菱形继承中导致一些重复初始化的问题&lt;/p&gt;
&lt;p&gt;为了弄清它的原理，我们需要花点时间解释下Python是如何实现继承的。对于你定义的每一个类而已，Python会计算出一个所谓的方法解析顺序(MRO)列表。 这个MRO列表就是一个简单的所有基类的线性顺序表。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C.__mro__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;__main__.C&#39;&lt;/span&gt;&amp;gt;, &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;__main__.A&#39;&lt;/span&gt;&amp;gt;, &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;__main__.B&#39;&lt;/span&gt;&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;__main__.Base&#39;&lt;/span&gt;&amp;gt;, &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了实现继承，Python会在MRO列表上从左到右开始查找基类，直到找到第一个匹配这个属性的类为止。&lt;/p&gt;
&lt;p&gt;而这个MRO列表的构造是通过一个C3线性化算法来实现的。 我们不去深究这个算法的数学原理，它实际上就是合并所有父类的MRO列表并遵循如下三条准则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子类会先于父类被检查&lt;/li&gt;
&lt;li&gt;多个父类会根据它们在列表中的顺序被检查&lt;/li&gt;
&lt;li&gt;如果对下一个类存在两个合法的选择，选择第一个父类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你使用 &lt;code&gt;super()&lt;/code&gt; 函数时，Python会在MRO列表上继续搜索下一个类。 只要每个重定义的方法统一使用 &lt;code&gt;super()&lt;/code&gt; 并只调用它一次， 那么控制流最终会遍历完整个MRO列表，每个方法也只会被调用一次。 &lt;/p&gt;
&lt;p&gt;我们来看下super的实现，可以发现他在找这个列表里后一个class&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cls, inst)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mro = inst.__class__mro()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mro[mro.index(cls)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Base&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&quot;Base&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = Base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(a.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.name = &lt;span class=&quot;string&quot;&gt;&quot;Base c&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(a.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(Base.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;--------&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sub&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Base)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Base.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;property name&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(Base.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Base.name = &lt;span class=&quot;string&quot;&gt;&#39;abc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(super(Sub,self).name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = Sub()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(b.__dict__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(Base.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;--------&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sub2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Sub)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Base.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(super(Sub, self).name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = Sub2()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(c.__class__.mro())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果是：&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Base c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;Base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;property name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;property name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;[&amp;lt;class &#39;__main__.Sub2&#39;&amp;gt;, &amp;lt;class &#39;__main__.Sub&#39;&amp;gt;, &amp;lt;class &#39;__main__.Base&#39;&amp;gt;, &amp;lt;class &#39;object&#39;&amp;gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;weakref&quot;&gt;&lt;a href=&quot;#weakref&quot; class=&quot;headerlink&quot; title=&quot;weakref&quot;&gt;&lt;/a&gt;weakref&lt;/h2&gt;&lt;p&gt;List和Dict不支持weakref，但是他们的子类可以&lt;/p&gt;
&lt;h2 id=&quot;Unicode&quot;&gt;&lt;a href=&quot;#Unicode&quot; class=&quot;headerlink&quot; title=&quot;Unicode&quot;&gt;&lt;/a&gt;Unicode&lt;/h2&gt;&lt;p&gt;为了解决多国语言的问题，ASCII显然已经不适合，他是用一个字节代表一个字符，这远远不够世界各种语言使用，Unicode是一个更大的集合，他包含了ASCII，因此他是一个变长的编码方式&lt;br&gt;我们有两种方式来声明一个str&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;str&lt;/span&gt; = ‘abcd’ # 这是一个str&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;uni&lt;/span&gt; = u‘Hi \u2119\u2602’ # 这是一个unicode类型&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unicode.encode(‘UTF-8’) -&amp;gt; bytes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bytes.decode(‘UTF-8’) -&amp;gt; unicode&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;u&#39;abcd&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;ascii&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;replace&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#不能被encode就会变成一个`?`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;u&#39;abcd&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;ascii&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;xmlcharrefreplace&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#produces an HTML/XML character entity reference&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;u&#39;abcd&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;ascii&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;ignore&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#ignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Python 2 will automatically decode the byte string to produce a second unicode string, then will complete the operation with the two unicode strings.&lt;/li&gt;
&lt;li&gt;So “str” in Python 2 is now called “bytes,” and “unicode” in Python 2 is now called “str”. This makes more sense than the Python 2 names, since Unicode is how you want all text stored, and byte strings are only for when you are dealing with bytes.&lt;br&gt;[Pragmatic Unicode][&lt;a href=&quot;http://nedbatchelder.com/text/unipain.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nedbatchelder.com/text/unipain.html&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;元类&quot;&gt;&lt;a href=&quot;#元类&quot; class=&quot;headerlink&quot; title=&quot;元类&quot;&gt;&lt;/a&gt;元类&lt;/h2&gt;&lt;p&gt;##TIP&lt;/p&gt;
&lt;h3 id=&quot;in&quot;&gt;&lt;a href=&quot;#in&quot; class=&quot;headerlink&quot; title=&quot;in&quot;&gt;&lt;/a&gt;in&lt;/h3&gt;&lt;p&gt;&lt;code&gt;if elem in alist&lt;/code&gt; 用来检查元素是否在列表里，但是注意这里的elem必须是一个元素，不能是alist列表中的一个子集，他是不能够检查子集的。&lt;/p&gt;
&lt;h3 id=&quot;yeild&quot;&gt;&lt;a href=&quot;#yeild&quot; class=&quot;headerlink&quot; title=&quot;yeild&quot;&gt;&lt;/a&gt;yeild&lt;/h3&gt;&lt;p&gt;generator可以包含一个return语句，但是他会导致generator不再能返回任何结果，而且return不能有返回值，&lt;code&gt;return 5&lt;/code&gt;会报一个syntax error&lt;/p&gt;
&lt;h3 id=&quot;占位符&quot;&gt;&lt;a href=&quot;#占位符&quot; class=&quot;headerlink&quot; title=&quot;_ 占位符&quot;&gt;&lt;/a&gt;_ 占位符&lt;/h3&gt;&lt;p&gt;可以像Haskell一样有个占位符&lt;code&gt;_&lt;/code&gt; 来表示不关心的内容&lt;/p&gt;
&lt;h2 id=&quot;Flask&quot;&gt;&lt;a href=&quot;#Flask&quot; class=&quot;headerlink&quot; title=&quot;Flask&quot;&gt;&lt;/a&gt;Flask&lt;/h2&gt;&lt;h3 id=&quot;获得message-body&quot;&gt;&lt;a href=&quot;#获得message-body&quot; class=&quot;headerlink&quot; title=&quot;获得message body&quot;&gt;&lt;/a&gt;获得message body&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request&lt;span class=&quot;selector-class&quot;&gt;.form&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request&lt;span class=&quot;selector-class&quot;&gt;.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request.headers&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##Functional programming&lt;/p&gt;
&lt;h3 id=&quot;generator-expression-and-list-comprehensions&quot;&gt;&lt;a href=&quot;#generator-expression-and-list-comprehensions&quot; class=&quot;headerlink&quot; title=&quot;generator expression and list comprehensions&quot;&gt;&lt;/a&gt;generator expression and list comprehensions&lt;/h3&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Generator expression -- returns iterator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stripped_iter = (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.strip() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; line_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# List comprehension -- returns list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stripped_list = [&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.strip() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; line_list]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;List comprehension 会一次性返回所有的值，而generator expression返回一个可迭代的对象，他不会一次性返回所有值，只会根据需要获取，适合处理无限长度的数据。&lt;/p&gt;
&lt;p&gt;###Passing values into a generator&lt;br&gt;In Python 2.4 and earlier, generators only produced output. Once a generator’s code was invoked to create an iterator, there was no way to pass any new information into the function when its execution is resumed. You could hack together this ability by making the generator look at a global variable or by passing in some mutable object that callers then modify, but these approaches are messy.&lt;br&gt;In Python 2.5 there’s a simple way to pass values into a generator. yield became an expression, returning a value that can be assigned to a variable or otherwise operated on:&lt;/p&gt;
&lt;figure class=&quot;highlight fsharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; = (&lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;I recommend that you always put parentheses around a yield expression when you’re doing something with the returned value, as in the above example. The parentheses aren’t always necessary, but it’s easier to always add them instead of having to remember when they’re needed.&lt;/p&gt;
&lt;p&gt;(PEP 342 explains the exact rules, which are that a yield-expression must always be parenthesized except when it occurs at the top-level expression on the right-hand side of an assignment. This means you can write val = yield i but have to use parentheses when there’s an operation, as in val = (yield i) + 12.)&lt;/p&gt;
&lt;p&gt;Values are sent into a generator by calling its send(value) method. This method resumes the generator’s code and the yield expression returns the specified value. If the regular next() method is called, the yield returns None.&lt;/p&gt;
&lt;p&gt;Here’s a simple counter that increments by 1 and allows changing the value of the internal counter.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(maximum)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; maximum:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        val = (&lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# If value provided, change counter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; val &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i = val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And here’s an example of changing the counter:&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; it = counter(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print it.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print it.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print it.send(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print it.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print it.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;t.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print it.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopIteration&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Because yield will often be returning None, you should always check for this case. Don’t just use its value in expressions unless you’re sure that the send() method will be the only method used to resume your generator function.&lt;/p&gt;
&lt;p&gt;In addition to send(), there are two other new methods on generators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;throw(type, value=None, traceback=None) is used to raise an exception inside the generator; the exception is raised by the yield expression where the generator’s execution is paused.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;close() raises a GeneratorExit exception inside the generator to terminate the iteration. On receiving this exception, the generator’s code must either raise GeneratorExit or StopIteration; catching the exception and doing anything else is illegal and will trigger a RuntimeError. close() will also be called by Python’s garbage collector when the generator is garbage-collected.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need to run cleanup code when a GeneratorExit occurs, I suggest using a try: … finally: suite instead of catching GeneratorExit.&lt;/p&gt;
&lt;p&gt;The cumulative effect of these changes is to turn generators from one-way producers of information into both producers and consumers.&lt;/p&gt;
&lt;p&gt;Generators also become coroutines, a more generalized form of subroutines. Subroutines are entered at one point and exited at another point (the top of the function, and a return statement), but coroutines can be entered, exited, and resumed at many different points (the yield statements).&lt;/p&gt;
&lt;h2 id=&quot;getattr&quot;&gt;&lt;a href=&quot;#getattr&quot; class=&quot;headerlink&quot; title=&quot;getattr&quot;&gt;&lt;/a&gt;getattr&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;getattr(object, name[, default])&lt;br&gt;Return the value of the named attribute of object. name must be a string. If the string is the name of one of the object’s attributes, the result is the value of that attribute. For example, &lt;code&gt;getattr(x, &amp;#39;foobar&amp;#39;)&lt;/code&gt; is equivalent to &lt;code&gt;x.foobar&lt;/code&gt;. If the named attribute does not exist, default is returned if provided, otherwise AttributeError is raised.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;class-type-object&quot;&gt;&lt;a href=&quot;#class-type-object&quot; class=&quot;headerlink&quot; title=&quot;class type(object)&quot;&gt;&lt;/a&gt;class type(object)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;class type(object)&lt;/li&gt;
&lt;li&gt;class type(name, bases, dict)&lt;br&gt;With one argument, return the type of an object. The return value is a type object and generally the same object as returned by object.&lt;strong&gt;class&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The isinstance() built-in function is recommended for testing the type of an object, because it takes subclasses into account.&lt;/p&gt;
&lt;p&gt;With three arguments, return a new type object. This is essentially a dynamic form of the class statement. The name string is the class name and becomes the &lt;strong&gt;name&lt;/strong&gt; attribute; the bases tuple itemizes the base classes and becomes the &lt;strong&gt;bases&lt;/strong&gt; attribute; and the dict dictionary is the namespace containing definitions for class body and becomes the &lt;strong&gt;dict&lt;/strong&gt; attribute. For example, the following two statements create identical type objects:&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;X&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; X = type(&lt;span class=&quot;string&quot;&gt;&#39;X&#39;&lt;/span&gt;, (object,), dict(a=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##monkey patch&lt;br&gt;monkey patch指的是在运行时动态替换,一般是在startup的时候.&lt;/p&gt;
&lt;p&gt;用过gevent就会知道,会在最开头的地方gevent.monkey.patch_all();把标准库中的thread/socket等给替换掉.这样我们在后面使用socket的时候可以跟平常一样使用,无需修改任何代码,但是它变成非阻塞的了. 之前做的一个游戏服务器,很多地方用的import json,后来发现ujson比自带json快了N倍,于是问题来了,难道几十个文件要一个个把import json改成import ujson as json吗? 其实只需要在进程startup的地方monkey patch就行了.是影响整个进程空间的.&lt;/p&gt;
&lt;p&gt;同一进程空间中一个module只会被运行一次.&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ujson&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;monkey_patch_json&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  json.__name__ = &lt;span class=&quot;string&quot;&gt;&#39;ujson&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  json.dumps = ujson.dumps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  json.loads = ujson.loads&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;monkey_patch_json()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;main.py&#39;&lt;/span&gt;,json.__name__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;sub.py&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;sub.py&#39;&lt;/span&gt;,json.__name__&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;##with&lt;br&gt;如下情况 with一旦结束，那么as后面的对象就会被清除，即便是赋值给了c.response，那只是一个引用，除非用deepcopy&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;with urllib&lt;span class=&quot;selector-class&quot;&gt;.request&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.urlopen&lt;/span&gt;(c&lt;span class=&quot;selector-class&quot;&gt;.request&lt;/span&gt;, context=context) as response:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c&lt;span class=&quot;selector-class&quot;&gt;.response&lt;/span&gt; = response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#print(c&lt;span class=&quot;selector-class&quot;&gt;.response&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.read&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#return&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;pdb&quot;&gt;&lt;a href=&quot;#pdb&quot; class=&quot;headerlink&quot; title=&quot;pdb&quot;&gt;&lt;/a&gt;pdb&lt;/h2&gt;&lt;p&gt;可以通过代用&lt;code&gt;set_trace()&lt;/code&gt;来设置一个断点，然后运行的时候就会自动进入pdb，然后就可以调试啦&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; inspect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;:&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hell&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(inspect.getmodule(self))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.hell()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__call__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cc = self.c()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pdb.set_trace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cc.guess()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;##函数式编程&lt;/p&gt;
&lt;p&gt;###map&lt;br&gt;从python3开始map变得lazy，如果你不主动调用next或者使用它 它是不会马上返回结果的，跟Haskell一样&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Test：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	def __init__(self, &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;(Test, [&lt;span class=&quot;string&quot;&gt;&#39;ggg&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;rrr&#39;&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;//return only a map object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list(x)&lt;span class=&quot;comment&quot;&gt;// will get a result.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PEP 0008 – Style Guide for Python Code&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      Python 相关笔记
    
    </summary>
    
      <category term="Python" scheme="http://matthewgao.github.io/categories/Python/"/>
    
    
      <category term="python" scheme="http://matthewgao.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript Note</title>
    <link href="http://matthewgao.github.io/javascript/"/>
    <id>http://matthewgao.github.io/javascript/</id>
    <published>2015-12-21T12:28:26.000Z</published>
    <updated>2015-12-21T12:28:26.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;作用域和声明提前&quot;&gt;&lt;a href=&quot;#作用域和声明提前&quot; class=&quot;headerlink&quot; title=&quot;作用域和声明提前&quot;&gt;&lt;/a&gt;作用域和声明提前&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Javascript并不被作用域&lt;code&gt;{}&lt;/code&gt;所控制，所以函数内声明的变量在所有的函数内的scope里都是可见的，因此可以把函数所有的变量都放在最开始声明&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scope = &lt;span class=&quot;string&quot;&gt;&quot;global&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(scope)&lt;span class=&quot;comment&quot;&gt;// undefine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scope = &lt;span class=&quot;string&quot;&gt;&quot;local&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(scope) &lt;span class=&quot;comment&quot;&gt;// &quot;local&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;没初始化的变量默认为undefined&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;NaN-Infinity&quot;&gt;&lt;a href=&quot;#NaN-Infinity&quot; class=&quot;headerlink&quot; title=&quot;##NaN Infinity&quot;&gt;&lt;/a&gt;##NaN Infinity&lt;/h2&gt;&lt;p&gt;不能够用&lt;code&gt;x == NaN&lt;/code&gt; 判断是否是NaN或者Infinity，可以使用&lt;code&gt;isNaN()&lt;/code&gt;或者&lt;code&gt;isInfinity()&lt;/code&gt;来判断&lt;/p&gt;
&lt;h2 id=&quot;属性的四个特性&quot;&gt;&lt;a href=&quot;#属性的四个特性&quot; class=&quot;headerlink&quot; title=&quot;##属性的四个特性&quot;&gt;&lt;/a&gt;##属性的四个特性&lt;/h2&gt;&lt;p&gt;###数据属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;writable&lt;/li&gt;
&lt;li&gt;enumerable&lt;/li&gt;
&lt;li&gt;configurable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###存取器属性&lt;br&gt;不具有value和writable特性，写特性是由有没有setter方法决定的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get&lt;/li&gt;
&lt;li&gt;set&lt;/li&gt;
&lt;li&gt;enumerable&lt;/li&gt;
&lt;li&gt;configurable&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Object.getOwnPropertyDescriptor(&amp;#123;&lt;span class=&quot;string&quot;&gt;x:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//return &amp;#123;value:1, writable:true, enumerable:true, configurable:true&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Object.defineProperty(obj, &lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;value:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;writable:&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;enumerable:&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;configurable:&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;//设置属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不能修改继承属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;this&quot;&gt;&lt;a href=&quot;#this&quot; class=&quot;headerlink&quot; title=&quot;##this&quot;&gt;&lt;/a&gt;##this&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在构造函数中的this指向所创建的对象&lt;/li&gt;
&lt;li&gt;一般的this指向他的上下文&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意他并不遵循 lexical scope, 只是表示上下文（context）&lt;/p&gt;
&lt;p&gt;###建议不要使用this&lt;br&gt;You actually don’t want to access this in particular, but the object it refers to. That’s why an easy solution is to simply create a new variable that also refers to that object. The variable can have any name, but common ones are self and that.&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyConstructor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(data, transport)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.data = data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transport.on(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(self.data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###使用bind&lt;/p&gt;
&lt;p&gt;####Explicitly set this of the callback&lt;br&gt;It might look like you have no control over the value of this, because its value is set automatically, but that is actually not the case.&lt;/p&gt;
&lt;p&gt;Every function has the method .bind [docs], which returns a new function with this bound to a value. The function has exactly the same behavior as the one you called .bind on, only that this was set by you. No matter how or when that function is called, this will always refer to the passed value.&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function MyConstructor(&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;, transport) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; boundFunction = (function() &amp;#123; &lt;span class=&quot;comment&quot;&gt;// parenthesis are not necessary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;);             &lt;span class=&quot;comment&quot;&gt;// but might improve readability&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;).bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// &amp;lt;- here we are calling `.bind()` &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transport.on(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;, boundFunction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In this case, we are binding the callback’s this to the value of MyConstructor’s this.&lt;/p&gt;
&lt;p&gt;####Set this of the callback - part 2&lt;br&gt;Some functions/methods which accept callbacks also accept a value to which the callback’s this should refer to. This is basically the same as binding it yourself, but the function/method does it for you. Array#map [docs] is such a method. Its signature is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;array.map(callback[, thisArg])&lt;/code&gt;&lt;br&gt;The first argument is the callback and the second argument is the value this should refer to. Here is a contrived example:&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;multiplier: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_arr = arr.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; v * &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.multiplier;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, obj); &lt;span class=&quot;comment&quot;&gt;// &amp;lt;- here we are passing `obj` as second argument&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SmaApi.prototype.trigger_all = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; propNames = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.getOwnPropertyNames(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    propNames.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.trigger(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##argument&lt;br&gt;函数会有一个argument属性对应于他的实参&lt;/p&gt;
&lt;h3 id=&quot;callee和caller属性&quot;&gt;&lt;a href=&quot;#callee和caller属性&quot; class=&quot;headerlink&quot; title=&quot;callee和caller属性&quot;&gt;&lt;/a&gt;callee和caller属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;callee 正在执行的函数&lt;/li&gt;
&lt;li&gt;caller 调用它的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;##函数&quot;&gt;&lt;/a&gt;##函数&lt;/h2&gt;&lt;h3 id=&quot;prototype属性&quot;&gt;&lt;a href=&quot;#prototype属性&quot; class=&quot;headerlink&quot; title=&quot;prototype属性&quot;&gt;&lt;/a&gt;prototype属性&lt;/h3&gt;&lt;p&gt;每个函数都有一个prototype属性，这个属性是一个对象的引用，每个函数都包含不同的原型对象&lt;/p&gt;
&lt;h3 id=&quot;call方法和apply方法&quot;&gt;&lt;a href=&quot;#call方法和apply方法&quot; class=&quot;headerlink&quot; title=&quot;call方法和apply方法&quot;&gt;&lt;/a&gt;call方法和apply方法&lt;/h3&gt;&lt;p&gt;他可以用来绑定一个函数func到任意对象obj&lt;/p&gt;
&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(obj, args...)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(obj, [args...])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;bind&quot;&gt;&lt;a href=&quot;#bind&quot; class=&quot;headerlink&quot; title=&quot;bind&quot;&gt;&lt;/a&gt;bind&lt;/h3&gt;&lt;p&gt;它和apply和call的不同是，bind返回的是一个函数&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; func2 = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(obj, args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Function-构造函数&quot;&gt;&lt;a href=&quot;#Function-构造函数&quot; class=&quot;headerlink&quot; title=&quot;Function() 构造函数&quot;&gt;&lt;/a&gt;Function() 构造函数&lt;/h3&gt;&lt;p&gt;Function()创建的函数并不使用词法作用于，所以他作为嵌套函数的时候不能捕获上层函数的对象&lt;/p&gt;
&lt;h3 id=&quot;不完全函数&quot;&gt;&lt;a href=&quot;#不完全函数&quot; class=&quot;headerlink&quot; title=&quot;不完全函数&quot;&gt;&lt;/a&gt;不完全函数&lt;/h3&gt;&lt;p&gt;把一个函数调用拆成，若干个子调用&lt;code&gt;f(1,2,3,4,5)=&amp;gt;f(1,2)(3,4)(5)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;类&quot;&gt;&lt;a href=&quot;#类&quot; class=&quot;headerlink&quot; title=&quot;类&quot;&gt;&lt;/a&gt;类&lt;/h2&gt;&lt;p&gt;类包含一个构造函数，一个prototype，对于prototype相同的对象是属于一类的。&lt;/p&gt;
&lt;p&gt;Javascript里面的类实际上感觉就是用对象构造对象，他没有其他OO中类的概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构造函数中的属性是等同于static&lt;/li&gt;
&lt;li&gt;而prototype的等同于方法/属性&lt;/li&gt;
&lt;li&gt;构造函数并不是生成对象的主体，主体是prototype，构造函数只能作为类似静态方法的方式操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;TIP&quot;&gt;&lt;a href=&quot;#TIP&quot; class=&quot;headerlink&quot; title=&quot;TIP&quot;&gt;&lt;/a&gt;TIP&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;使用分号&lt;/li&gt;
&lt;li&gt;不区分整数和浮点&lt;/li&gt;
&lt;li&gt;如果没使用var声明一个变量，那么他会默认变成全局的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a = a || a.func()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;JSON.stringify and JSON.parse&lt;/li&gt;
&lt;li&gt;Javascript 相等运算符比较对象时，比较的是引用而不是值，可以用&lt;code&gt;equals()&lt;/code&gt;来做完整比较&lt;/li&gt;
&lt;li&gt;代码质量检查 jslint.com&lt;/li&gt;
&lt;li&gt;let 声明块级作用域的变量&lt;/li&gt;
&lt;li&gt;const 声明常量 v &amp;gt;1.8&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      莫名我就喜欢上了JS....
    
    </summary>
    
      <category term="Javascript" scheme="http://matthewgao.github.io/categories/Javascript/"/>
    
    
      <category term="Javascript" scheme="http://matthewgao.github.io/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS</title>
    <link href="http://matthewgao.github.io/NodeJS/"/>
    <id>http://matthewgao.github.io/NodeJS/</id>
    <published>2015-12-08T06:29:50.000Z</published>
    <updated>2015-12-21T14:26:54.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Unit-test&quot;&gt;&lt;a href=&quot;#Unit-test&quot; class=&quot;headerlink&quot; title=&quot;Unit test&quot;&gt;&lt;/a&gt;Unit test&lt;/h2&gt;&lt;h3 id=&quot;mocha&quot;&gt;&lt;a href=&quot;#mocha&quot; class=&quot;headerlink&quot; title=&quot;mocha&quot;&gt;&lt;/a&gt;mocha&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;describe可以嵌套&lt;/li&gt;
&lt;li&gt;it不能嵌套&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;####时序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;describe里地it的非异步部分按它们定义的顺序执行，它们所触发的回调的注册顺序也遵从it的注册顺序&lt;/li&gt;
&lt;li&gt;不被describe包裹的部分执行顺序的优先级最高&lt;/li&gt;
&lt;li&gt;同一层次的describe执行顺序遵从它们的定义顺序&lt;/li&gt;
&lt;li&gt;外层describe的所有it执行优先级高于嵌套的describe&lt;/li&gt;
&lt;li&gt;describe内所有函数全部是non-block的，所以不能再其中指望以顺序的方式传递变量什么的&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;处理异步单元测试&quot;&gt;&lt;a href=&quot;#处理异步单元测试&quot; class=&quot;headerlink&quot; title=&quot;处理异步单元测试&quot;&gt;&lt;/a&gt;处理异步单元测试&lt;/h4&gt;&lt;p&gt;尤其在需要发出请求，处理返回的时候，由于NodeJs是全异步的，所以describe不会捕捉到返回结果，所以需要在it的callback中给一个done，并在异步调用结束后调用&lt;code&gt;done()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同时它的几个hook也接受使用done的异步调用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      NodeJS Note
    
    </summary>
    
    
      <category term="javascript" scheme="http://matthewgao.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Vagrant</title>
    <link href="http://matthewgao.github.io/vagrant/"/>
    <id>http://matthewgao.github.io/vagrant/</id>
    <published>2015-12-08T06:29:14.000Z</published>
    <updated>2015-12-08T06:29:14.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装和启动&quot;&gt;&lt;a href=&quot;#安装和启动&quot; class=&quot;headerlink&quot; title=&quot;安装和启动&quot;&gt;&lt;/a&gt;安装和启动&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;首先安装如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VirutalBox&lt;/li&gt;
&lt;li&gt;Vagrant&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init [an &lt;span class=&quot;built_in&quot;&gt;image&lt;/span&gt; path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant up &lt;span class=&quot;meta&quot;&gt;# start that image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh &lt;span class=&quot;meta&quot;&gt;# ssh to that host&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant destroy &lt;span class=&quot;meta&quot;&gt;#删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;要点&quot;&gt;&lt;a href=&quot;#要点&quot; class=&quot;headerlink&quot; title=&quot;要点&quot;&gt;&lt;/a&gt;要点&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;文件共享&quot;&gt;&lt;a href=&quot;#文件共享&quot; class=&quot;headerlink&quot; title=&quot;文件共享&quot;&gt;&lt;/a&gt;文件共享&lt;/h3&gt;&lt;p&gt;默认vagrant会连接到本地的一个/vagrant目录，所以要小心不要删除了host上的文件&lt;/p&gt;
&lt;h3 id=&quot;Isolate&quot;&gt;&lt;a href=&quot;#Isolate&quot; class=&quot;headerlink&quot; title=&quot;Isolate&quot;&gt;&lt;/a&gt;Isolate&lt;/h3&gt;&lt;p&gt;每个vagrant都会共享同一个base image，但是他们并不会修改那个image，所以可以放心使用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Vagrant Notes
    
    </summary>
    
      <category term="automation" scheme="http://matthewgao.github.io/categories/automation/"/>
    
    
      <category term="Vagrant" scheme="http://matthewgao.github.io/tags/Vagrant/"/>
    
  </entry>
  
  <entry>
    <title>A NodeJS Issue</title>
    <link href="http://matthewgao.github.io/nodejs-promise-issue/"/>
    <id>http://matthewgao.github.io/nodejs-promise-issue/</id>
    <published>2015-12-06T07:39:28.000Z</published>
    <updated>2015-12-06T07:52:38.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;在《深入浅出NodeJS》一书中的第四章，给出了一个promise/deferred的一个简单实现，但是读来读去总觉得有些问题，所以拿来作者的代码做了个实验&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Code in Github][&lt;a href=&quot;https://github.com/JacksonTian/diveintonode_examples/tree/master/04/promise_a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/JacksonTian/diveintonode_examples/tree/master/04/promise_a&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验代码&quot;&gt;&lt;a href=&quot;#实验代码&quot; class=&quot;headerlink&quot; title=&quot;实验代码&quot;&gt;&lt;/a&gt;实验代码&lt;/h2&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; util = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;util&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;http&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; EventEmitter = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;events&#39;&lt;/span&gt;).EventEmitter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Deferred = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &lt;span class=&quot;string&quot;&gt;&#39;unfulfilled&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deferred.prototype.resolve = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &lt;span class=&quot;string&quot;&gt;&#39;fulfilled&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.promise.emit(&lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;emit success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deferred.prototype.reject = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &lt;span class=&quot;string&quot;&gt;&#39;failed&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.promise.emit(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;emit error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deferred.prototype.progress = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.promise.emit(&lt;span class=&quot;string&quot;&gt;&#39;progress&#39;&lt;/span&gt;, data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;emit progress&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deferred.prototype.all = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;promises&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count = promises.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; that = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  promises.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;promise&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    promise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      count--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        that.resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      that.reject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.promise;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  EventEmitter.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;util.inherits(&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;, EventEmitter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.prototype.then = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;fulfilledHandler, errorHandler, progressHandler&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; fulfilledHandler === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 利用once方法，保证成功回调只执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.once(&lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;, fulfilledHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;register success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; errorHandler === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 利用once方法，保证异常回调只执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.once(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;, errorHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;register error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; progressHandler === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.on(&lt;span class=&quot;string&quot;&gt;&#39;progress&#39;&lt;/span&gt;, progressHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;register progress&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; client = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; options = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hostname:&lt;span class=&quot;string&quot;&gt;&#39;103.249.252.29&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path:&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method: &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; deferred = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Deferred();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; req = http.request(options, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.setEncoding(&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;callback called&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//必须consume这个data不然会一直保持下去，直到内存满了，所以可以晚点注册这个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.on(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;chunk&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data += chunk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;res.on(&#39;data&#39;)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deferred.progress(chunk);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.on(&lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;res.on(&#39;end&#39;)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deferred.resolve(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    req.on(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deferred.reject(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    req.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;request sended&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; deferred.promise;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = client();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Going to call then1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// c.then1(function(data)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     // console.log(&#39;请求完成&#39;, data);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     console.log(&#39;请求完成&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#125;, function(err)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     console.log(&#39;访问错误&#39;, err);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#125;, function(chunk)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     // console.log(&#39;正在读取&#39;, chunk);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     console.log(&#39;正在读取&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//console.log(&#39;请求完成&#39;, data);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;请求完成&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;访问错误&#39;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;chunk&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//console.log(&#39;正在读取&#39;, chunk);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;正在读取&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们在最后setTimeout中设置10ms之后执行，那么then函数注册的三个callback可以正常处理response，结果如下&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request sended&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Going &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt; then1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;callback called&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在读取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在读取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正在读取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请求完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit success&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出register callback发生在emit之前，这大概是网络IO速度比较慢造成的，那我们加大setTimeout延迟的时间到1000ms&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request sended&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Going &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt; then1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;callback called&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emit success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register progress&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到emit发生在register callback之前，所以then注册的callback并没有执行&lt;/p&gt;
&lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;这实际上就是一个巧合，因为IO的低速导致了register callback之前，这种promise方式并不能保证then每次都能拿到结果&lt;/p&gt;
</content>
    
    <summary type="html">
    
      在读《深入浅出NodeJS》的时候发现的一个小问题
    
    </summary>
    
    
      <category term="Node.js" scheme="http://matthewgao.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Note</title>
    <link href="http://matthewgao.github.io/mysql/"/>
    <id>http://matthewgao.github.io/mysql/</id>
    <published>2015-11-20T09:50:08.000Z</published>
    <updated>2015-11-20T09:50:08.000Z</updated>
    
    <content type="html">&lt;p&gt;##基本命名和约束规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表字符集选择UTF8 ，如果需要存储emoj表情，需要使用UTF8mb4(MySQL 5.5.3以后支持)&lt;/li&gt;
&lt;li&gt;存储引擎使用InnoDB&lt;/li&gt;
&lt;li&gt;变长字符串尽量使用varchar varbinary&lt;/li&gt;
&lt;li&gt;不在数据库中存储图片、文件等&lt;/li&gt;
&lt;li&gt;单表数据量控制在1亿以下&lt;/li&gt;
&lt;li&gt;库名、表名、字段名不使用保留字&lt;/li&gt;
&lt;li&gt;库名、表名、字段名、索引名使用小写字母，以下划线分割 ，需要见名知意&lt;/li&gt;
&lt;li&gt;库表名不要设计过长，尽可能用最少的字符表达出表的用途&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##字段规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有字段均定义为NOT NULL ，除非你真的想存Null&lt;/li&gt;
&lt;li&gt;字段类型在满足需求条件下越小越好，使用UNSIGNED存储非负整数 ，实际使用时候存储负数场景不多&lt;/li&gt;
&lt;li&gt;使用TIMESTAMP存储时间&lt;/li&gt;
&lt;li&gt;使用varchar存储变长字符串 ，当然要注意varchar(M)里的M指的是字符数不是字节数；使用UNSIGNED INT存储IPv4 地址而不是CHAR(15) ，这种方式只能存储IPv4，存储不了IPv6&lt;/li&gt;
&lt;li&gt;使用DECIMAL存储精确浮点数，用float有的时候会有问题&lt;/li&gt;
&lt;li&gt;少用blob text&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于为什么定义不使用Null的原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浪费存储空间，因为InnoDB需要有额外一个字节存储&lt;/li&gt;
&lt;li&gt;表内默认值Null过多会影响优化器选择执行计划&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##索引规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单个索引字段数不超过5，单表索引数量不超过5，索引设计遵循B+ Tree索引最左前缀匹配原则&lt;/li&gt;
&lt;li&gt;选择区分度高的列作为索引&lt;/li&gt;
&lt;li&gt;建立的索引能覆盖80%主要的查询，不求全，解决问题的主要矛盾&lt;/li&gt;
&lt;li&gt;DML和order by和group by字段要建立合适的索引&lt;/li&gt;
&lt;li&gt;避免索引的隐式转换&lt;/li&gt;
&lt;li&gt;避免冗余索引&lt;/li&gt;
&lt;li&gt;关于索引规范，一定要记住索引这个东西是一把双刃剑，在加速读的同时也引入了很多额外的写入和锁，降低写入能力，这也是为什么要控制索引数原因。之前看到过不少人给表里每个字段都建了索引，其实对查询可能起不到什么作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;冗余索引例子&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;idx_abc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a,b,c)&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;idx_a&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a)&lt;/span&gt;&lt;/span&gt; 冗余 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;idx_ab&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a,b)&lt;/span&gt;&lt;/span&gt; 冗余&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;隐式转换例子&lt;/p&gt;
&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;字段:remark varchar(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; Null &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MySQL&amp;gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id, gift_code &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; gift &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deal_id = &lt;span class=&quot;number&quot;&gt;640&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; remark=&lt;span class=&quot;number&quot;&gt;115127&lt;/span&gt;; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.14&lt;/span&gt; sec) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MySQL&amp;gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id, gift_code &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; pool_gift WHEREdeal_id = &lt;span class=&quot;number&quot;&gt;640&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; remark=‘&lt;span class=&quot;number&quot;&gt;115127&lt;/span&gt;’; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.005&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;字段定义为varchar，但传入的值是个int，就会导致全表扫描，要求程序端要做好类型检查&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##SQL类规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量不使用存储过程、触发器、函数等&lt;/li&gt;
&lt;li&gt;避免使用大表的JOIN，MySQL优化器对join优化策略过于简单&lt;/li&gt;
&lt;li&gt;避免在数据库中进行数学运算和其他大量计算任务&lt;/li&gt;
&lt;li&gt;SQL合并，主要是指的DML时候多个value合并，减少和数据库交互&lt;/li&gt;
&lt;li&gt;合理的分页，尤其大分页&lt;br&gt;UPDATE、DELETE语句不使用LIMIT ，容易造成主从不一致&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      MySQL 优化
    
    </summary>
    
      <category term="Database" scheme="http://matthewgao.github.io/categories/Database/"/>
    
    
      <category term="MySQL" scheme="http://matthewgao.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>SHELL Command/Script Notes</title>
    <link href="http://matthewgao.github.io/2014-9-2-shell-note/"/>
    <id>http://matthewgao.github.io/2014-9-2-shell-note/</id>
    <published>2015-10-14T08:17:13.000Z</published>
    <updated>2015-10-14T08:17:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;$&quot;&gt;&lt;/a&gt;$&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$$&lt;/code&gt; 返回PID， $是个内部变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$?&lt;/code&gt; 表示上一个指令的返回值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$0&lt;/code&gt; 表示函数或者shell的第一个参数，后面类推&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; 返回所有参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;set-unset&quot;&gt;&lt;a href=&quot;#set-unset&quot; class=&quot;headerlink&quot; title=&quot;set unset&quot;&gt;&lt;/a&gt;set unset&lt;/h2&gt;&lt;p&gt;设置程序自定义变量（只对本shell）&lt;/p&gt;
&lt;h2 id=&quot;export&quot;&gt;&lt;a href=&quot;#export&quot; class=&quot;headerlink&quot; title=&quot;export&quot;&gt;&lt;/a&gt;export&lt;/h2&gt;&lt;p&gt;设置为全局环境变量&lt;/p&gt;
&lt;h2 id=&quot;declare&quot;&gt;&lt;a href=&quot;#declare&quot; class=&quot;headerlink&quot; title=&quot;declare&quot;&gt;&lt;/a&gt;declare&lt;/h2&gt;&lt;p&gt;将环境变量转成自定义变量&lt;/p&gt;
&lt;h2 id=&quot;查找历史命令并执行&quot;&gt;&lt;a href=&quot;#查找历史命令并执行&quot; class=&quot;headerlink&quot; title=&quot;查找历史命令并执行&quot;&gt;&lt;/a&gt;查找历史命令并执行&lt;/h2&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;keyword&quot;&gt;history&lt;/span&gt; | &lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; -E &lt;span class=&quot;string&quot;&gt;&#39;^ +1148&#39;&lt;/span&gt; | awk -F&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;$1=&quot;&quot;;print&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##参数扩展&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;${param:-default}&lt;/code&gt; 如果param为空，就把他设置成default&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${ #param}&lt;/code&gt; 给出param长度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${var:-string}&lt;/code&gt;: 若变量var为空，则用在命令行中用string来替换&lt;code&gt;${var:-string}&lt;/code&gt;，否则变量var不为空时，则用变量var的值来替换&lt;code&gt;${var:-string}&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${var:=string}&lt;/code&gt;: 替换规则和&lt;code&gt;${var:-string}&lt;/code&gt;是一样的，所不同之处是&lt;code&gt;${var:=string}&lt;/code&gt;若var为空时，用string替换&lt;code&gt;${var:=string}&lt;/code&gt;的同时，把string赋给变量var：&lt;code&gt;${var:=string}&lt;/code&gt;很常用的一种用法是，判断某个变量是否赋值，没有的话则给它赋上一个默认值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${var:+string}&lt;/code&gt;的替换规则和上面的相反，即只有当var不是空的时候才替换成string，若var为空时则不替换或者说是替换成变量 var的值，即空值。(因为变量var此时为空，所以这两种说法是等价的) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;${var:?string}&lt;/code&gt;替换规则为：若变量var不为空，则用变量var的值来替换&lt;code&gt;${var:?string}&lt;/code&gt;；若变量var为空，则把string输出到标准错误中，并从脚本中退出。我们可利用此特性来检查是否设置了变量的值。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      SHELL学习笔记
    
    </summary>
    
      <category term="Linux" scheme="http://matthewgao.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://matthewgao.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text &amp; Plugin</title>
    <link href="http://matthewgao.github.io/sublime-and-its-plugin/"/>
    <id>http://matthewgao.github.io/sublime-and-its-plugin/</id>
    <published>2015-10-09T08:59:06.000Z</published>
    <updated>2015-10-09T08:59:06.000Z</updated>
    
    <content type="html">&lt;p&gt;##没记住的快捷键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl+G 跳转到相应的行&lt;/li&gt;
&lt;li&gt;Ctrl+J 合并行（已选择需要合并的多行时）&lt;/li&gt;
&lt;li&gt;Ctrl+L 选择整行（按住-继续选择下行）&lt;/li&gt;
&lt;li&gt;Shift+鼠标右键（或使用鼠标中键）可以用鼠标进行竖向多行选择&lt;/li&gt;
&lt;li&gt;Ctrl+Shift+L 鼠标选中多行（按下快捷键），即可同时编辑这些行&lt;/li&gt;
&lt;li&gt;Ctrl+T 词互换&lt;/li&gt;
&lt;li&gt;Ctrl+U 软撤销&lt;/li&gt;
&lt;li&gt;Ctrl+Y 恢复撤销&lt;/li&gt;
&lt;li&gt;Ctrl+K Backspace 从光标处删除至行首&lt;/li&gt;
&lt;li&gt;Ctrl+Shift+K 删除整行&lt;/li&gt;
&lt;li&gt;Ctrl+K+B 开启/关闭侧边栏&lt;/li&gt;
&lt;li&gt;Ctrl+KK 从光标处删除至行尾&lt;/li&gt;
&lt;li&gt;Ctrl+K+U 改为大写&lt;/li&gt;
&lt;li&gt;Ctrl+K+L 改为小写&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ctrl+Tab 当前窗口中的标签页切换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Shift+F2 上一个书签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;F2 下一个书签&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ctrl+F2 设置/取消书签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ctrl+Shift+↑可以移动此行代码，与上行互换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Ctrl+Shift+↓可以移动此行代码，与下行互换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##来写一个插件&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sublime, sublime_plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FileHeaderCreatorCommand&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sublime_plugin.TextCommand)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, edit)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(self.view.settings().get(&quot;author&quot;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.view.size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.check_file_type(edit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_file_type&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, edit)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file_path = self.view.file_name()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pos = file_path.rfind(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; pos == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        suffix = file_path[pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        token = &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sublime.platform() == &lt;span class=&quot;string&quot;&gt;&#39;windows&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            token = &lt;span class=&quot;string&quot;&gt;&#39;\\&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file_name_pos = file_path.rfind(token)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; file_name_pos == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file_name = file_path[file_name_pos+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        header = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; suffix == &lt;span class=&quot;string&quot;&gt;&#39;py&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            header = self._python(file_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; suffix == &lt;span class=&quot;string&quot;&gt;&#39;cpp&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            header = self._cpp(file_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; suffix == &lt;span class=&quot;string&quot;&gt;&#39;h&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            header = self._h(file_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; suffix == &lt;span class=&quot;string&quot;&gt;&#39;hs&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            header = self._haskell(file_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.insert(edit, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, header)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_h&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        author = self.view.settings().get(&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; author &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            author = &lt;span class=&quot;string&quot;&gt;&quot;Anonymous&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        company = self.view.settings().get(&lt;span class=&quot;string&quot;&gt;&quot;company&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; company &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            company = &lt;span class=&quot;string&quot;&gt;&quot;Anonymous&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string = &lt;span class=&quot;string&quot;&gt;&quot;/*\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * &quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * Created By: &quot;&lt;/span&gt; + author + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * &quot;&lt;/span&gt; + company + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * Created Time: &quot;&lt;/span&gt; + datetime.date.today().isoformat() + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; */\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;#ifndef _&quot;&lt;/span&gt; + name.replace(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;_&#39;&lt;/span&gt;).upper() + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;#define _&quot;&lt;/span&gt; + name.replace(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;_&#39;&lt;/span&gt;).upper() + &lt;span class=&quot;string&quot;&gt;&quot;\n\n\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;#endif&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_python&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        author = self.view.settings().get(&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; author &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            author = &lt;span class=&quot;string&quot;&gt;&quot;Anonymous&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string = &lt;span class=&quot;string&quot;&gt;&quot;#!/usr/bin/env python3\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;# coding=utf-8\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;# Created Time: &quot;&lt;/span&gt; + datetime.date.today().isoformat() + &lt;span class=&quot;string&quot;&gt;&quot;\n\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot;__author__ = &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;\&#39;&quot;&lt;/span&gt; + author + &lt;span class=&quot;string&quot;&gt;&quot;\&#39;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_cpp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        author = self.view.settings().get(&lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; author &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            author = &lt;span class=&quot;string&quot;&gt;&quot;Anonymous&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        company = self.view.settings().get(&lt;span class=&quot;string&quot;&gt;&quot;company&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; company &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            company = &lt;span class=&quot;string&quot;&gt;&quot;Anonymous&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string = &lt;span class=&quot;string&quot;&gt;&quot;/*\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * &quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * Created By: &quot;&lt;/span&gt; + author + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * &quot;&lt;/span&gt; + company + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; * Created Time: &quot;&lt;/span&gt; + datetime.date.today().isoformat() + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string += &lt;span class=&quot;string&quot;&gt;&quot; */\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_haskell&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FileHeaderCreator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sublime_plugin.EventListener)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;on_load&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, view)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;FileHeaderCreator on_load invoked&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        view.run_command(&lt;span class=&quot;string&quot;&gt;&quot;file_header_creator&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;on_post_save&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, view)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;FileHeaderCreator on_post_save invoked&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        view.run_command(&lt;span class=&quot;string&quot;&gt;&quot;file_header_creator&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      Sublime Hot key &amp; How to write a Sublime plugin
    
    </summary>
    
      <category term="IDE" scheme="http://matthewgao.github.io/categories/IDE/"/>
    
    
      <category term="editor" scheme="http://matthewgao.github.io/tags/editor/"/>
    
      <category term="sublime" scheme="http://matthewgao.github.io/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>Multiple Thread &amp; Thread Safety</title>
    <link href="http://matthewgao.github.io/thread-safe/"/>
    <id>http://matthewgao.github.io/thread-safe/</id>
    <published>2015-09-22T13:59:58.000Z</published>
    <updated>2015-10-08T07:03:15.000Z</updated>
    
    <content type="html">&lt;p&gt;##Multiple Thread&lt;/p&gt;
&lt;p&gt;###pthread_mutex&lt;/p&gt;
&lt;p&gt;有两种方式创建一个mutex一种是静态方法，一种是动态方法，似乎静态方法不需要Destroy???&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_mutex_t &lt;span class=&quot;keyword&quot;&gt;lock&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_mutex_init (&amp;amp;&lt;span class=&quot;keyword&quot;&gt;lock&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;###pthread_cancel&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pthread_cancel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(pthread_t thread)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pthread_setcancelstate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; state, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *oldstate)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pthread_setcanceltype&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *oldtype)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pthread_testcancel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;; [Option End]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cancel，用来取消一个线程，但是按照默认的配置他是不会立刻退出的，会在cancelpoint选择退出。取消点是在程序在运行的时候检测是否收到取消请求，是否允许允许操作执行的点。下面的POSIX线程函数就是取消点：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pthread_join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_cond_wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_cond_timedwait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pthread_testcancel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sem_wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sigwait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;pthread-setcancelstate&quot;&gt;&lt;a href=&quot;#pthread-setcancelstate&quot; class=&quot;headerlink&quot; title=&quot;pthread_setcancelstate&quot;&gt;&lt;/a&gt;pthread_setcancelstate&lt;/h4&gt;&lt;p&gt;设置状态，有两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PTHREAD_CANCEL_ENABLE （default）&lt;/li&gt;
&lt;li&gt;PTHREAD_CANCEL_DISABLE&lt;br&gt;Enable表示线程支持cancel&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;pthread-setcanceltype&quot;&gt;&lt;a href=&quot;#pthread-setcanceltype&quot; class=&quot;headerlink&quot; title=&quot;pthread_setcanceltype&quot;&gt;&lt;/a&gt;pthread_setcanceltype&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;PTHREAD_CANCEL_DEFERRED： 默认值，他不会马上结束，会在下一个cancelpoint结束&lt;/li&gt;
&lt;li&gt;PTHREAD_CANCEL_ASYNCHRONOUS： 马上结束&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;pthread-cleanup-push-amp-pthread-cleanup-pop&quot;&gt;&lt;a href=&quot;#pthread-cleanup-push-amp-pthread-cleanup-pop&quot; class=&quot;headerlink&quot; title=&quot;pthread_cleanup_push &amp;amp; pthread_cleanup_pop&quot;&gt;&lt;/a&gt;pthread_cleanup_push &amp;amp; pthread_cleanup_pop&lt;/h3&gt;&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void pthread_cleanup_push(void &lt;span class=&quot;comment&quot;&gt;(*routine)(void *)&lt;/span&gt;, void *arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void pthread_cleanup_pop(int execute);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##Thread Safety&lt;/p&gt;
&lt;p&gt;###对象构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要在构造函数中注册毁掉&lt;/li&gt;
&lt;li&gt;不要过早的把this传给其他线程的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两段式构造，是个有效的解决方案&lt;/p&gt;
&lt;p&gt;###对象析构&lt;br&gt;尽管我们会用互斥量来保证线程安全，但是还是难免会碰到如下情况&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; shared_ptr&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt; = make_shared&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt; p1(&lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; going out of scope&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在这种情况下，直接使用互斥量就很难保证不会出问题，所以使用一个RAII构建的mutex是一个解决方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MutexGuard &lt;span class=&quot;keyword&quot;&gt;lock&lt;/span&gt;(mtx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//operate the ptr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;..When&lt;/span&gt; it&#39;&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt; going out of the scope, the &lt;span class=&quot;keyword&quot;&gt;lock&lt;/span&gt; object will &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; to protect it until ptr destroyed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用如下方法，p1和p2都是栈上对象，所以没有析构问题。&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; shared_ptr&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt; = make_shared&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt; p1(&lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use p1 &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; operate object &lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt; pointed &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shared_ptr&lt;span class=&quot;symbol&quot;&gt;&amp;lt;Job&amp;gt;&lt;/span&gt; p2(&lt;span class=&quot;keyword&quot;&gt;ptr&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use p2 &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; operate object&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;另外一个解决方法是可以用另外一个线程专门管理这些对象的析构，相当于维护一个对象池&lt;/li&gt;
&lt;li&gt;或者考虑使用atomic来保护对象&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###不要使用递归mutex&lt;/p&gt;
&lt;p&gt;###每个对象保证自身的数据安全&lt;br&gt;对于数据的访问给予互斥量保护，这个时候要留心析构的问题，因为内部互斥量无法保证析构，如果两个线程同时在做析构（在使用shared_ptr的时候），那么会有双重释放的问题，一个符合RAII标准的mutexlock能够派上用场，因为他可以保护析构，在析构结束前lock不会析构。&lt;/p&gt;
&lt;p&gt;###TCP作为进程间通信的方法&lt;br&gt;TCP是一个相对普适的方法来处理进程间通信，他甚至可以扩展到主机间通信，所以是个非常好的选择&lt;/p&gt;
</content>
    
    <summary type="html">
    
      各种线程安全问题
    
    </summary>
    
      <category term="C/C++" scheme="http://matthewgao.github.io/categories/C-C/"/>
    
    
      <category term="Boost" scheme="http://matthewgao.github.io/tags/Boost/"/>
    
      <category term="C/C++" scheme="http://matthewgao.github.io/tags/C-C/"/>
    
      <category term="multi-thread" scheme="http://matthewgao.github.io/tags/multi-thread/"/>
    
  </entry>
  
  <entry>
    <title>Vim on OSX</title>
    <link href="http://matthewgao.github.io/Vim-on-OSX/"/>
    <id>http://matthewgao.github.io/Vim-on-OSX/</id>
    <published>2015-08-24T02:58:41.000Z</published>
    <updated>2015-09-11T09:54:41.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;p&gt;已经实现了一个非常基本的自动化脚本，可以输入如下命令进行自动化安装，如果是OSX，需要提前安装brew：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruby &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后运行：&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -qO- http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//raw.github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/matthewgao/MyVim/master/setup.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; | &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当所有安装完成，就得到了一个包含如下插件的Vim：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bundle&lt;/li&gt;
&lt;li&gt;FuzzyFinder&lt;/li&gt;
&lt;li&gt;L9&lt;/li&gt;
&lt;li&gt;tagslist&lt;/li&gt;
&lt;li&gt;ctags&lt;/li&gt;
&lt;li&gt;NERDtree&lt;/li&gt;
&lt;li&gt;NERD-Commenter&lt;/li&gt;
&lt;li&gt;Auto-pair&lt;/li&gt;
&lt;li&gt;Ctrlp&lt;/li&gt;
&lt;li&gt;ctrlp-funky&lt;/li&gt;
&lt;li&gt;airline&lt;/li&gt;
&lt;li&gt;powerline&lt;/li&gt;
&lt;li&gt;translate&lt;/li&gt;
&lt;li&gt;vim chinese doc&lt;/li&gt;
&lt;li&gt;calendar&lt;/li&gt;
&lt;li&gt;molokai colorscheme&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目托管在github上 &lt;a href=&quot;https://github.com/matthewgao/MyVim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MyVim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自动安装包含如下过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查系统，yum or apt-get or brew&lt;/li&gt;
&lt;li&gt;安装组件&lt;/li&gt;
&lt;li&gt;安装MyVim&lt;/li&gt;
&lt;li&gt;复制vim到.vim&lt;/li&gt;
&lt;li&gt;复制vimrc到.vimrc&lt;/li&gt;
&lt;li&gt;安装Bundle&lt;/li&gt;
&lt;li&gt;执行BundleInstall&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Powerline-font&quot;&gt;&lt;a href=&quot;#Powerline-font&quot; class=&quot;headerlink&quot; title=&quot;Powerline font&quot;&gt;&lt;/a&gt;Powerline font&lt;/h2&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;https&lt;/span&gt;://github.com/powerline/fonts.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fonts/install.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##安装中文Help doc&lt;/p&gt;
&lt;p&gt;下载vimdoc包&lt;a href=&quot;http://vimcdoc.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;猛击下载&lt;/a&gt;，下载的 tar.gz 包括所有翻译过的 vim 文档 (.cnx 文件) 先将其解压缩：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf vimcdoc-&amp;lt;version&amp;gt;&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后进入 vimcdoc- 目录并执行&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./vimcdoc.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; -&lt;span class=&quot;built_in&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以了。该安装程序会自动识别 Vim 的安装路径，将中文的文档拷贝 到相应的地方。原有的英文文档不受影响。&lt;/p&gt;
&lt;h2 id=&quot;插件简介&quot;&gt;&lt;a href=&quot;#插件简介&quot; class=&quot;headerlink&quot; title=&quot;插件简介&quot;&gt;&lt;/a&gt;插件简介&lt;/h2&gt;&lt;h3 id=&quot;NERDtree&quot;&gt;&lt;a href=&quot;#NERDtree&quot; class=&quot;headerlink&quot; title=&quot;NERDtree&quot;&gt;&lt;/a&gt;NERDtree&lt;/h3&gt;&lt;p&gt;在nerdtree窗口常用操作：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x......&lt;span class=&quot;selector-class&quot;&gt;.Close&lt;/span&gt; the current nodes parent收起当前目录树&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R......&lt;span class=&quot;selector-class&quot;&gt;.Recursively&lt;/span&gt; refresh the current root刷新根目录树&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r......&lt;span class=&quot;selector-class&quot;&gt;.Recursively&lt;/span&gt; refresh the current directory刷新当前目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;P......&lt;span class=&quot;selector-class&quot;&gt;.Jump&lt;/span&gt; to the root node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;......&lt;span class=&quot;selector-class&quot;&gt;.Jump&lt;/span&gt; to current nodes parent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;K......&lt;span class=&quot;selector-class&quot;&gt;.Jump&lt;/span&gt; up inside directories at the current tree depth  到同目录第一个节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;J......&lt;span class=&quot;selector-class&quot;&gt;.Jump&lt;/span&gt; down inside directories at the current tree depth 最后一个节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o......&lt;span class=&quot;selector-class&quot;&gt;.Open&lt;/span&gt; files, directories and bookmarks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;......&lt;span class=&quot;selector-class&quot;&gt;.Open&lt;/span&gt; selected file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; split window上下分屏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s......&lt;span class=&quot;selector-class&quot;&gt;.Open&lt;/span&gt; selected file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; new vsplit左右分屏&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置解析&quot;&gt;&lt;a href=&quot;#配置解析&quot; class=&quot;headerlink&quot; title=&quot;配置解析&quot;&gt;&lt;/a&gt;配置解析&lt;/h2&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; nocompatible               &lt;span class=&quot;comment&quot;&gt;&quot; be iMproved&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;shell&lt;/span&gt;=/bin/&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; tabstop=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; softtabstop=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;shiftwidth&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; FIXME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; expandtab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; autoindent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;nu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; ruler&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;colorscheme&lt;/span&gt; molokai&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; showcmd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; 高亮搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; hlsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; 跟随搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; incsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; mouse=&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; linebreak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; mousemodel=&lt;span class=&quot;keyword&quot;&gt;popup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; autowrite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; cmdheight=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; 去掉输入错的提示音&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; noeb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; ignorecase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; wildmenu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot;FIXME 允许backspace和光标跨越行边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; backspace=eol,start,&lt;span class=&quot;built_in&quot;&gt;indent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; whichwrap+=&amp;lt;,&amp;gt;,h,&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; linespace=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; wildmenu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; completeopt=preview,&lt;span class=&quot;keyword&quot;&gt;menu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; completeopt=longest,&lt;span class=&quot;keyword&quot;&gt;menu&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;&quot;tab替换成空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;&amp;gt;=&lt;span class=&quot;number&quot;&gt;603&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; helplang=&lt;span class=&quot;keyword&quot;&gt;cn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; encoding=utf-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;filetype&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;filetype&lt;/span&gt; plugin &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;filetype&lt;/span&gt; plugin &lt;span class=&quot;built_in&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;&quot; required!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;syntax&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;syntax&lt;/span&gt; enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; rtp+=~/.&lt;span class=&quot;keyword&quot;&gt;vim&lt;/span&gt;/bundle/vundle/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt; vundle#rc()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; let Vundle manage Vundle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; required! &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot;这是vundle本身的设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;gmarik/vundle&#39;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot; My Bundles here:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot;这里是设置你自己自定义的插件的设置vundle设置，注意：下载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot;的插件git为：https://github.com/godlygeek/tabular.git，则设置为Bundle &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot;&#39;godlygeek/tabular&#39;;https://github.com/gmarik/vundle.git设置则为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot; Bundle &#39;gmarik/vundle&#39;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot; original repos on github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;godlygeek/tabular&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot; vim-scripts repos，vim-scripts的访问地址，格式则如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;L9&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;FuzzyFinder&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&quot; non github repos ，非git的访问地址的，格式如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;git://git.wincent.com/command-t.git&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;Auto-Pairs&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bundle &lt;span class=&quot;string&quot;&gt;&#39;The-NERD-Commenter&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot;Bundle &#39;ctrlp.vim&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Plugin &lt;span class=&quot;string&quot;&gt;&#39;ctrlp.vim&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Plugin &lt;span class=&quot;string&quot;&gt;&#39;scrooloose/nerdtree&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; Brief help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; :BundleList          - list configured bundles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; :BundleInstall(!)    - install(update) bundles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; :BundleSearch(!) foo - search(or refresh cache first) for foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; see :h vundle for more details or wiki for FAQ&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; comments after Bundle command are not allowed..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;nmap&lt;/span&gt; tt :%s/\t/    /g&lt;span class=&quot;symbol&quot;&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;F3&amp;gt;&lt;/span&gt; :NERDTreeToggle&lt;span class=&quot;symbol&quot;&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;F3&amp;gt;&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt; :NERDTreeToggle&lt;span class=&quot;symbol&quot;&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;F9&amp;gt;&lt;/span&gt; :TlistToggle &lt;span class=&quot;symbol&quot;&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; Tlist_Auto_Open=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; Tlist_Exit_OnlyWindow=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; Tlist_Use_Right_Window=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; NERDTreeIgnore=[&lt;span class=&quot;string&quot;&gt;&#39;\.pyc&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&quot; crtlp setting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; wildignore+=*/tmp/*,*.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;,*.swp,*.zip,*.pyc,*.png,*.jpg,*.gif   &lt;span class=&quot;comment&quot;&gt;&quot; Mac/Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      实现一个自动化配置Vim脚本。刚刚加入OSX大军，继续使用Vim作为编辑器，尝试配置，发现和Linux区别不大，所以打算把它写成一个脚本可以在各个系统上自动配置，并且详细研究了下各个配置和插件的用例
    
    </summary>
    
      <category term="OSX" scheme="http://matthewgao.github.io/categories/OSX/"/>
    
    
      <category term="linux" scheme="http://matthewgao.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://matthewgao.github.io/tags/shell/"/>
    
      <category term="vim" scheme="http://matthewgao.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>异步IO与协程框架</title>
    <link href="http://matthewgao.github.io/coroutine/"/>
    <id>http://matthewgao.github.io/coroutine/</id>
    <published>2015-07-20T05:44:13.000Z</published>
    <updated>2015-07-20T06:00:12.000Z</updated>
    
    <content type="html">&lt;p&gt;##基于就绪通知的协程框架&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先需要包装read/write，在发生read的时候检查返回。如果是EAGAIN，那么将当前协程标记为阻塞在对应fd上，然后执行调度函数。&lt;/li&gt;
&lt;li&gt;调度函数需要执行epoll(或者从上次的返回结果缓存中取数据，减少内核陷入次数)，从中读取一个就绪的fd。如果没有，上下文应当被阻塞到至少有一个fd就绪。&lt;/li&gt;
&lt;li&gt;查找这个fd对应的协程上下文对象，并调度过去。&lt;/li&gt;
&lt;li&gt;当某个协程被调度到时，他多半应当在调度器返回的路上——也就是read/write读不到数据的时候。因此应当再重试读取，失败的话返回1。&lt;/li&gt;
&lt;li&gt;如果读取到数据了，直接返回。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样，异步的数据读写动作，在我们的想像中就可以变为同步的。而我们知道同步模型会极大降低我们的编程负担。&lt;/p&gt;
&lt;p&gt;##异步IO&lt;/p&gt;
&lt;h3 id=&quot;Linux-AIO&quot;&gt;&lt;a href=&quot;#Linux-AIO&quot; class=&quot;headerlink&quot; title=&quot;Linux AIO&quot;&gt;&lt;/a&gt;Linux AIO&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Blocking&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Non-Blocking&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Synchronous&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Read/Write&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Read/Write(O_NONBLOCK)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Asynchronous&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;IO Multiplexing&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AIO&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;基本方法：&lt;/p&gt;
&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_read( &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *aiocbp );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_error( &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *aiocbp );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssize_t aio_return( &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *aiocbp );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_write( &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *aiocbp );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_suspend( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; cblist[], &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timespec&lt;/span&gt;&lt;/span&gt; *timeout );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_cancel( &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *aiocbp );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; lio_listio( &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mode, &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aiocb&lt;/span&gt;&lt;/span&gt; *list[], &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nent, &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sigevent&lt;/span&gt;&lt;/span&gt; *sig );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;保存上下文的块：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; aiocb &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_fildes;               &lt;span class=&quot;comment&quot;&gt;// File Descriptor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aio_lio_opcode;           &lt;span class=&quot;comment&quot;&gt;// Valid only for lio_listio (r/w/nop)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *aio_buf;       &lt;span class=&quot;comment&quot;&gt;// Data Buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; aio_nbytes;            &lt;span class=&quot;comment&quot;&gt;// Number of Bytes in Data Buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sigevent aio_sigevent; &lt;span class=&quot;comment&quot;&gt;// Notification Structure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Internal fields */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Libeio&quot;&gt;&lt;a href=&quot;#Libeio&quot; class=&quot;headerlink&quot; title=&quot;Libeio&quot;&gt;&lt;/a&gt;Libeio&lt;/h3&gt;&lt;p&gt;##Libevent&lt;/p&gt;
</content>
    
    <summary type="html">
    
      一种协程的实现思路，异步IO...
    
    </summary>
    
      <category term="Networking" scheme="http://matthewgao.github.io/categories/Networking/"/>
    
    
      <category term="async I/O" scheme="http://matthewgao.github.io/tags/async-I-O/"/>
    
      <category term="Networking" scheme="http://matthewgao.github.io/tags/Networking/"/>
    
  </entry>
  
  <entry>
    <title>HTTP Notes</title>
    <link href="http://matthewgao.github.io/http-notes/"/>
    <id>http://matthewgao.github.io/http-notes/</id>
    <published>2015-07-13T07:18:09.000Z</published>
    <updated>2015-09-07T09:41:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Transfer-Encoding&quot;&gt;&lt;a href=&quot;#Transfer-Encoding&quot; class=&quot;headerlink&quot; title=&quot;Transfer-Encoding&quot;&gt;&lt;/a&gt;Transfer-Encoding&lt;/h2&gt;&lt;p&gt;通常来说，HTTP 1.0 默认都不是持续连接，这使得判断HTTP包结束变得非常容易，只要连接关闭了，就可以作为结束的标志。但是这会带来很多额外的开销。所以HTTP 1.1把&lt;code&gt;keep-alive&lt;/code&gt;作为了默认项，所以通常我们需要一个&lt;code&gt;Content-Length&lt;/code&gt;来表示包的长度，以便于正确的判断包的边界，这样带来的问题是，如果一个文件非常大，那么只有能所有的文件都被下载完成才会开始显示给用户，这样延迟可能非常大，所以采用了另外一种办法&lt;code&gt;Transfer-Encoding&lt;/code&gt;，与之相类似的还有&lt;code&gt;Content-Encoding&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transfer-Encoding: 对于传输的定义，目前只有&lt;code&gt;chunked&lt;/code&gt;一种类型，表示分块&lt;/li&gt;
&lt;li&gt;Content-Encoding：对于内容的编码，比如压缩什么的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果使用了&lt;code&gt;chunked&lt;/code&gt;方式，那么HTTP报文要遵循如下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在头部加入 Transfer-Encoding: chunked 之后，就代表这个报文采用了分块编码。&lt;/li&gt;
&lt;li&gt;报文中的实体需要改为用一系列分块来传输。&lt;/li&gt;
&lt;li&gt;每个分块包含十六进制的长度值和数据，长度值独占一行，长度不包括它结尾的 CRLF（\r\n），也不包括分块数据结尾的 CRLF&lt;/li&gt;
&lt;li&gt;最后一个分块长度值必须为 0，对应的分块数据没有内容，表示实体结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HTTP/1.1 &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Server&lt;/span&gt;: nginx/1.1.19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Date&lt;/span&gt;: Mon, 13 Jul 2015 06:58:31 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Transfer-Encoding&lt;/span&gt;: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Connection&lt;/span&gt;: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;puppet&quot;&gt;2&lt;span class=&quot;keyword&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;connectionId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;qwertyu23456&quot;&lt;/span&gt;,  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;与之对应，如果采用&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HTTP/1.1 &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Server&lt;/span&gt;: nginx/1.1.19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Date&lt;/span&gt;: Mon, 13 Jul 2015 07:07:42 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Content-Type&lt;/span&gt;: vnd.collection+json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Content-Length&lt;/span&gt;: 47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Connection&lt;/span&gt;: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;json&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;connectionId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;qwertyu23456&quot;&lt;/span&gt;,  &lt;span class=&quot;attr&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;GET-with-body-message&quot;&gt;&lt;a href=&quot;#GET-with-body-message&quot; class=&quot;headerlink&quot; title=&quot;GET with body message&quot;&gt;&lt;/a&gt;GET with body message&lt;/h2&gt;&lt;p&gt;通常来讲，GET方法的body是空的，但是这并不是一个强制标准，只是一个习惯的用法，有些语义下，一个带有Body的GET方法是符合情理的，但是可能所用的web框架不支持，甚至curl也不支持，所以要手写内容检查方法，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_body&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(req)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg_body = req.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; itr &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; msg_body:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; check(itr) == &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abort(&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; msg_body&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里要注意，GET with body 不能够留下任何状态，必须是等幂的，不然违背GET的原则&lt;/p&gt;
&lt;p&gt;##web.py&lt;br&gt;FastCGI/WSGI各个参数在web.ctx中的解释，我遇到的问题是关于homepath，如果在nginx的&lt;code&gt;location&lt;/code&gt;中配置了&lt;code&gt;/api/hello&lt;/code&gt;，而在webpy中配置了&lt;code&gt;(&amp;quot;/api/hello&amp;quot;,&amp;quot;hello&amp;quot;)&lt;/code&gt;， 那么webpy中homepath会是&lt;code&gt;/api/home&lt;/code&gt; 而path是&lt;code&gt;\&lt;/code&gt;，这显然会匹配失败，正确的做法是&lt;code&gt;(&amp;quot;&amp;quot;,&amp;quot;hello&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;environ a.k.a. env – a dictionary containing the standard WSGI environment variables&lt;/li&gt;
&lt;li&gt;home – the base path for the application, including any parts “consumed” by outer applications &lt;a href=&quot;http://example.org/admin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.org/admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;homedomain – ? (appears to be protocol + host) &lt;a href=&quot;http://example.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;homepath – The part of the path requested by the user which was trimmed off the current app. That is homepath + path = the path actually requested in HTTP by the user. E.g. /admin This seems to be derived during startup from the environment variable REAL_SCRIPT_NAME. It affects what web.url() will prepend to supplied urls. This in turn affects where web.seeother() will go, which might interact badly with your url rewriting scheme (e.g. mod_rewrite)&lt;/li&gt;
&lt;li&gt;host – the hostname (domain) and (if not default) the port requested by the user. E.g. example.org, example.org:8080&lt;/li&gt;
&lt;li&gt;ip – the IP address of the user. E.g. xxx.xxx.xxx.xxx&lt;/li&gt;
&lt;li&gt;method – the HTTP method used. E.g. GET&lt;/li&gt;
&lt;li&gt;path – the path requested by the user, relative to the current application. If you are using subapplications, any part of the url matched by the outer application will be trimmed off. E.g. you have a main app in code.py, and a subapplication called admin.py. In code.py, you point /admin to admin.app. In admin.py, you point /stories to a class called stories. Within stories, web.ctx.path will be /stories, not /admin/stories. E.g. /articles/845&lt;/li&gt;
&lt;li&gt;protocol – the protocol used. E.g. https&lt;/li&gt;
&lt;li&gt;query – an empty string if there are no query arguments otherwise a ? followed by the query string. E.g. ?fourlegs=good&amp;amp;twolegs=bad&lt;/li&gt;
&lt;li&gt;fullpath a.k.a. path + query – the path requested including query arguments but not including homepath. E.g. /articles/845?fourlegs=good&amp;amp;twolegs=bad&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      HTTP笔记，Transfer-Encoding...
    
    </summary>
    
      <category term="HTTP" scheme="http://matthewgao.github.io/categories/HTTP/"/>
    
    
      <category term="http" scheme="http://matthewgao.github.io/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>VIM Command Notes</title>
    <link href="http://matthewgao.github.io/2014-9-2-vim-command-note/"/>
    <id>http://matthewgao.github.io/2014-9-2-vim-command-note/</id>
    <published>2014-10-05T04:52:36.000Z</published>
    <updated>2015-07-06T06:19:39.000Z</updated>
    
    <content type="html">&lt;p&gt;##生成tags&lt;br&gt;在所在目录运行&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ctags -&lt;span class=&quot;keyword&quot;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在vim中&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; tags &lt;span class=&quot;comment&quot;&gt;=&lt;/span&gt; /your/&lt;span class=&quot;comment&quot;&gt;path&lt;/span&gt;/tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##生成cscope索引&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;cscope&lt;/span&gt; -Rbq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;##命令    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:A&lt;/code&gt; 打开头文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:E&lt;/code&gt; 浏览打开文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wqa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:b(buffer)&lt;/code&gt; 浏览/切换缓冲区, 例如:&lt;code&gt;b1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cd&lt;/code&gt; 改变工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:lcd&lt;/code&gt; 改变当前窗口工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:pwd&lt;/code&gt; 显示当前工作目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:He&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:He!&lt;/code&gt;上分屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Ve&lt;/code&gt; 横分屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:Te&lt;/code&gt; tag explore&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:colorscheme test3&lt;/code&gt; 更改配色方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##快捷键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{c-f12}&lt;/code&gt;, &lt;code&gt;{c-n}&lt;/code&gt; 自动补全&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt; &lt;code&gt;;&lt;/code&gt; 结合&lt;code&gt;f{char}&lt;/code&gt;查找, 上一个, 下一个&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g;&lt;/code&gt; 上一个修改过的地方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g,&lt;/code&gt; 下一个修改过的地方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{c-o}&lt;/code&gt;,&lt;code&gt;{c-i}&lt;/code&gt; 回到上一个地方, 下一个地方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{c-a}{num}&lt;/code&gt;,&lt;code&gt;{c-x}{num}&lt;/code&gt; 增加num, 减少num&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt; undo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{c-r}&lt;/code&gt; 重做&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##文件比较&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; file1 file2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;d = diff&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;在你忘记用-root-方式打开文件时的文件保存&quot;&gt;&lt;a href=&quot;#在你忘记用-root-方式打开文件时的文件保存&quot; class=&quot;headerlink&quot; title=&quot;在你忘记用 root 方式打开文件时的文件保存&quot;&gt;&lt;/a&gt;在你忘记用 root 方式打开文件时的文件保存&lt;/h2&gt;&lt;figure class=&quot;highlight erlang-repl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:w !sudo tee &lt;span class=&quot;comment&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;按时间回退文件&quot;&gt;&lt;a href=&quot;#按时间回退文件&quot; class=&quot;headerlink&quot; title=&quot;按时间回退文件&quot;&gt;&lt;/a&gt;按时间回退文件&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:earlier&lt;/span&gt; 1&lt;span class=&quot;selector-tag&quot;&gt;m&lt;/span&gt; \\会把文件回退到 1 分钟以前的状态。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:later&lt;/span&gt; \\ 注意，你可以使用这个的命令进行相反的转换&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      记录下VIM的命令，不断学习中
    
    </summary>
    
      <category term="Linux" scheme="http://matthewgao.github.io/categories/Linux/"/>
    
    
      <category term="command" scheme="http://matthewgao.github.io/tags/command/"/>
    
      <category term="vim" scheme="http://matthewgao.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Software Engineering</title>
    <link href="http://matthewgao.github.io/2014-12-18-softwareengineering/"/>
    <id>http://matthewgao.github.io/2014-12-18-softwareengineering/</id>
    <published>2014-10-01T04:52:36.000Z</published>
    <updated>2015-07-06T05:14:13.000Z</updated>
    
    <content type="html">&lt;p&gt;##原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DRY原则- Don’t repeat yourself&lt;/li&gt;
&lt;li&gt;总是使用get/set方法来读写对象的属性， 这将使未来增加功能更方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###构建正交系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编写shame代码，不会没有必要的向其他模块暴露任何事情，也不依赖于其他模块的实现。如果需要改变这个对象的状态，让这个对象替你去做。&lt;/li&gt;
&lt;li&gt;避免使用全局变量，单例经常被用作全局变量&lt;/li&gt;
&lt;li&gt;避免写相似的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;原型&quot;&gt;&lt;a href=&quot;#原型&quot; class=&quot;headerlink&quot; title=&quot;原型&quot;&gt;&lt;/a&gt;原型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;prototype与 曳光弹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;类设计&quot;&gt;&lt;a href=&quot;#类设计&quot; class=&quot;headerlink&quot; title=&quot;类设计&quot;&gt;&lt;/a&gt;类设计&lt;/h2&gt;&lt;h3 id=&quot;高扇入&quot;&gt;&lt;a href=&quot;#高扇入&quot; class=&quot;headerlink&quot; title=&quot;高扇入&quot;&gt;&lt;/a&gt;高扇入&lt;/h3&gt;&lt;p&gt;让大量的类使用某个给定的类&lt;/p&gt;
&lt;h3 id=&quot;低扇出&quot;&gt;&lt;a href=&quot;#低扇出&quot; class=&quot;headerlink&quot; title=&quot;低扇出&quot;&gt;&lt;/a&gt;低扇出&lt;/h3&gt;&lt;p&gt;让一个类里少量的或者适中的使用其他的类，一般不要超过七个&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;The pragmatic Programmer&gt; 读书笔记
    
    </summary>
    
      <category term="Arch" scheme="http://matthewgao.github.io/categories/Arch/"/>
    
    
      <category term="软件工程" scheme="http://matthewgao.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Git Command Notes</title>
    <link href="http://matthewgao.github.io/2014-9-2-git-note/"/>
    <id>http://matthewgao.github.io/2014-9-2-git-note/</id>
    <published>2014-09-02T04:52:36.000Z</published>
    <updated>2015-07-06T05:11:39.000Z</updated>
    
    <content type="html">&lt;p&gt;##基本概念&lt;br&gt;Git 是一个分布式的版本管理工具，不同于perforce的是，他每个人都有一个完整的版本库，这种结构及其像bitcoin的原理。&lt;/p&gt;
&lt;h3 id=&quot;工作区-Workplace&quot;&gt;&lt;a href=&quot;#工作区-Workplace&quot; class=&quot;headerlink&quot; title=&quot;工作区 Workplace&quot;&gt;&lt;/a&gt;工作区 Workplace&lt;/h3&gt;&lt;p&gt;即文件夹所在的位置&lt;/p&gt;
&lt;h3 id=&quot;索引区-Index（stage）&quot;&gt;&lt;a href=&quot;#索引区-Index（stage）&quot; class=&quot;headerlink&quot; title=&quot;索引区 Index（stage）&quot;&gt;&lt;/a&gt;索引区 Index（stage）&lt;/h3&gt;&lt;p&gt;git add 提交到的区域，可以理解为缓存区&lt;/p&gt;
&lt;h3 id=&quot;版本库-Repository&quot;&gt;&lt;a href=&quot;#版本库-Repository&quot; class=&quot;headerlink&quot; title=&quot;版本库 Repository&quot;&gt;&lt;/a&gt;版本库 Repository&lt;/h3&gt;&lt;p&gt;git commit 提交到的区域，即为本地Repository。即.git文件夹&lt;/p&gt;
&lt;h3 id=&quot;stash&quot;&gt;&lt;a href=&quot;#stash&quot; class=&quot;headerlink&quot; title=&quot;stash&quot;&gt;&lt;/a&gt;stash&lt;/h3&gt;&lt;p&gt;与perforce中shelve的概念非常相似&lt;/p&gt;
&lt;h2 id=&quot;基本应用&quot;&gt;&lt;a href=&quot;#基本应用&quot; class=&quot;headerlink&quot; title=&quot;基本应用&quot;&gt;&lt;/a&gt;基本应用&lt;/h2&gt;&lt;h3 id=&quot;创建一个Repository&quot;&gt;&lt;a href=&quot;#创建一个Repository&quot; class=&quot;headerlink&quot; title=&quot;创建一个Repository&quot;&gt;&lt;/a&gt;创建一个Repository&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;添加文件到stage区&quot;&gt;&lt;a href=&quot;#添加文件到stage区&quot; class=&quot;headerlink&quot; title=&quot;添加文件到stage区&quot;&gt;&lt;/a&gt;添加文件到stage区&lt;/h3&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;add &lt;/span&gt;readme.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;提交到版本库&quot;&gt;&lt;a href=&quot;#提交到版本库&quot; class=&quot;headerlink&quot; title=&quot;提交到版本库&quot;&gt;&lt;/a&gt;提交到版本库&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; -m “&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看现有branch的状态&quot;&gt;&lt;a href=&quot;#查看现有branch的状态&quot; class=&quot;headerlink&quot; title=&quot;查看现有branch的状态&quot;&gt;&lt;/a&gt;查看现有branch的状态&lt;/h3&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看工作区中文件和版本库中区别&quot;&gt;&lt;a href=&quot;#查看工作区中文件和版本库中区别&quot; class=&quot;headerlink&quot; title=&quot;查看工作区中文件和版本库中区别&quot;&gt;&lt;/a&gt;查看工作区中文件和版本库中区别&lt;/h3&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;diff&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;readme&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看commit历史记录&quot;&gt;&lt;a href=&quot;#查看commit历史记录&quot; class=&quot;headerlink&quot; title=&quot;查看commit历史记录&quot;&gt;&lt;/a&gt;查看commit历史记录&lt;/h3&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--pretty=oneline&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--graph --pretty=oneline --abbrev-commit \\显示分支图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;退回上一个版本&quot;&gt;&lt;a href=&quot;#退回上一个版本&quot; class=&quot;headerlink&quot; title=&quot;退回上一个版本&quot;&gt;&lt;/a&gt;退回上一个版本&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--hard HEAD^&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--hard 3628164&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。&lt;/li&gt;
&lt;li&gt;当你用$ git reset –hard HEAD^回退到“add distributed”版本时，再想恢复到“append GPL”，就必须找到“append GPL”的commit id。Git提供了一个命令git reflog用来记录你的每一次命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git reflog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ea34578 HEAD@&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;: rese&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt; moving &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; HEAD^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3628164&lt;/span&gt; HEAD@&amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;: commi&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;append&lt;/span&gt; GPL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ea34578 HEAD@&amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;: commi&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt; distributed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cb926e7 HEAD@&amp;#123;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;: commit (initial): wrote &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; readme &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;丢弃工作区的修改&quot;&gt;&lt;a href=&quot;#丢弃工作区的修改&quot; class=&quot;headerlink&quot; title=&quot;丢弃工作区的修改&quot;&gt;&lt;/a&gt;丢弃工作区的修改&lt;/h3&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout &lt;span class=&quot;comment&quot;&gt;-- readme.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：有无 “–” 是有区别的，没有表示切换branch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;删除文件&quot;&gt;&lt;a href=&quot;#删除文件&quot; class=&quot;headerlink&quot; title=&quot;删除文件&quot;&gt;&lt;/a&gt;删除文件&lt;/h3&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;rm&lt;/span&gt; readme.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -&lt;span class=&quot;keyword&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;remove file&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h2&gt;&lt;p&gt;git的分支与perforce的分支大不同，git的分支是基于类似于指针的方式来实现的，它是在创建不同的指针指向不同的commit版本&lt;/p&gt;
&lt;h3 id=&quot;创建分支&quot;&gt;&lt;a href=&quot;#创建分支&quot; class=&quot;headerlink&quot; title=&quot;创建分支&quot;&gt;&lt;/a&gt;创建分支&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -&lt;span class=&quot;selector-tag&quot;&gt;b&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的命令建立了dev分支并切换到dev，等同于如下：&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch &lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout &lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;切换分支&quot;&gt;&lt;a href=&quot;#切换分支&quot; class=&quot;headerlink&quot; title=&quot;切换分支&quot;&gt;&lt;/a&gt;切换分支&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; checkout dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看分支&quot;&gt;&lt;a href=&quot;#查看分支&quot; class=&quot;headerlink&quot; title=&quot;查看分支&quot;&gt;&lt;/a&gt;查看分支&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除分支&quot;&gt;&lt;a href=&quot;#删除分支&quot; class=&quot;headerlink&quot; title=&quot;删除分支&quot;&gt;&lt;/a&gt;删除分支&lt;/h3&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;branch &lt;/span&gt;-d dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;合并分支&quot;&gt;&lt;a href=&quot;#合并分支&quot; class=&quot;headerlink&quot; title=&quot;合并分支&quot;&gt;&lt;/a&gt;合并分支&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkou &lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;git&lt;/span&gt; merge dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果有冲突，git会标示在有冲突的文件中，按照如下格式&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git tracks changes of files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;Creating a new branch is quick &amp;amp; simple.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=======&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Creating a new branch is quick AND simple.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; feature1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外一种合并分支的方法是&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;merge&lt;/span&gt; --&lt;span class=&quot;keyword&quot;&gt;no&lt;/span&gt;-ff -&lt;span class=&quot;keyword&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;merge with no-ff&quot;&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种方法的不同是 合并会是一个新的commit， 而之前的只是简单的把master指向dev&lt;/p&gt;
&lt;h2 id=&quot;远程管理&quot;&gt;&lt;a href=&quot;#远程管理&quot; class=&quot;headerlink&quot; title=&quot;远程管理&quot;&gt;&lt;/a&gt;远程管理&lt;/h2&gt;&lt;h3 id=&quot;查看远程库信息&quot;&gt;&lt;a href=&quot;#查看远程库信息&quot; class=&quot;headerlink&quot; title=&quot;查看远程库信息&quot;&gt;&lt;/a&gt;查看远程库信息&lt;/h3&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; remote -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;推送分支&quot;&gt;&lt;a href=&quot;#推送分支&quot; class=&quot;headerlink&quot; title=&quot;推送分支&quot;&gt;&lt;/a&gt;推送分支&lt;/h3&gt;&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt; master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获得分支&quot;&gt;&lt;a href=&quot;#获得分支&quot; class=&quot;headerlink&quot; title=&quot;获得分支&quot;&gt;&lt;/a&gt;获得分支&lt;/h3&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch --&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-upstream &lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; origin/&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; \\第一次的时候需要关联本地和远程的分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在本地创建和远程分支对应的分支&quot;&gt;&lt;a href=&quot;#在本地创建和远程分支对应的分支&quot; class=&quot;headerlink&quot; title=&quot;在本地创建和远程分支对应的分支&quot;&gt;&lt;/a&gt;在本地创建和远程分支对应的分支&lt;/h3&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b branch-&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt; origin/branch-&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;标签&quot;&gt;&lt;a href=&quot;#标签&quot; class=&quot;headerlink&quot; title=&quot;标签&quot;&gt;&lt;/a&gt;标签&lt;/h2&gt;&lt;h3 id=&quot;添加标签&quot;&gt;&lt;a href=&quot;#添加标签&quot; class=&quot;headerlink&quot; title=&quot;添加标签&quot;&gt;&lt;/a&gt;添加标签&lt;/h3&gt;&lt;p&gt;在某个分支上执行&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;v1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;v1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6224799&lt;/span&gt; \\commit id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看标签&quot;&gt;&lt;a href=&quot;#查看标签&quot; class=&quot;headerlink&quot; title=&quot;查看标签&quot;&gt;&lt;/a&gt;查看标签&lt;/h3&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;show &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;v1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除标签&quot;&gt;&lt;a href=&quot;#删除标签&quot; class=&quot;headerlink&quot; title=&quot;删除标签&quot;&gt;&lt;/a&gt;删除标签&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;-d&lt;/span&gt; v0.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      记录我与git和github的点点滴滴
    
    </summary>
    
      <category term="Dev Tool" scheme="http://matthewgao.github.io/categories/Dev-Tool/"/>
    
    
      <category term="git" scheme="http://matthewgao.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Splunk add-on 开发</title>
    <link href="http://matthewgao.github.io/howtowritesplunkplugin/"/>
    <id>http://matthewgao.github.io/howtowritesplunkplugin/</id>
    <published>2014-09-01T04:52:36.000Z</published>
    <updated>2015-07-06T06:22:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Splunk简介&quot;&gt;&lt;a href=&quot;#Splunk简介&quot; class=&quot;headerlink&quot; title=&quot;Splunk简介&quot;&gt;&lt;/a&gt;Splunk简介&lt;/h2&gt;&lt;p&gt;Splunk是一个广泛用于信息分析的一个软件，功能非常强大，并且提供了非常好的二次开发体验，总的来说Splunk支持两种二次开发，一种是关于统计分析内容的，splunk提供多种多样的数据可视化的功能，开发人员只要简单的编写符合splunk标准的xml文件或者Django的文件就可以轻松实现多种多样的数据分析和显示；另外一种是关于数据导入的，虽然splunk提供了众多的导入方式，但是并不是所有的都能覆盖到，所以用户可以根据自己的数据结构来开发plugin，来导入特定的信息类型，比如IPFIX。本文就简述如何开发一个splunk plugin。&lt;/p&gt;
&lt;h2 id=&quot;Splunk-SDK&quot;&gt;&lt;a href=&quot;#Splunk-SDK&quot; class=&quot;headerlink&quot; title=&quot;Splunk SDK&quot;&gt;&lt;/a&gt;Splunk SDK&lt;/h2&gt;&lt;p&gt;Splunk 提供了多种语言的SDK，本文我们以Python为例，猛击这里下载&lt;a href=&quot;http://dev.splunk.com/goto/sdk-python&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python SDK&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;建立自己的splunk-plugin&quot;&gt;&lt;a href=&quot;#建立自己的splunk-plugin&quot; class=&quot;headerlink&quot; title=&quot;建立自己的splunk plugin&quot;&gt;&lt;/a&gt;建立自己的splunk plugin&lt;/h2&gt;&lt;p&gt;Splunk SDK 提供三种主要的功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置plugin需要接受的参数, 这部分参数会在你配置你的plugin的时候在splunk页面上显示出来&lt;/li&gt;
&lt;li&gt;验证参数, 确保你设置的参数有效.&lt;/li&gt;
&lt;li&gt;发送数据流.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是一个plugin的框架, 你必须继承于splunk提供的Script类, 并且实现三个函数: &lt;code&gt;get_scheme&lt;/code&gt;, &lt;code&gt;validate_input&lt;/code&gt;, &lt;code&gt;stream_events&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; splunklib.modularinput &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyScript&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Script)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_scheme&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Returns scheme.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate_input&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, validation_definition)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Validates input.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stream_events&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, inputs, ew)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Splunk Enterprise calls the modular input, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# streams XML describing the inputs to stdin,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# and waits for XML on stdout describing events.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(MyScript().run(sys.argv))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好, 这就是最基本的plugin的框架, 下面我们来具体实现它, 我们将建立一个plugin来监听UDP端口, 来转发到Splunk server, 你可能要说Splunk不是已经提供了一个UDP类型的输入么, 当然, 我们这里只是以此为例, 因为很多UDP的数据都是自定义的, 所以Splunk自带的UDP未必能够满足你的需求, 所以还是可能需要自己开发.&lt;/p&gt;
&lt;h2 id=&quot;UDP-receiver例子&quot;&gt;&lt;a href=&quot;#UDP-receiver例子&quot; class=&quot;headerlink&quot; title=&quot;UDP receiver例子&quot;&gt;&lt;/a&gt;UDP receiver例子&lt;/h2&gt;&lt;p&gt;我把各个部分的解释放到了注释中。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UDPreceiver&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Script)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_scheme&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	这里我们声明了 Scheme, 叫做UDP receiver. 然后use_external_validation = true 表示我们要用自己写的函数来验证这个receiver的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	use_single_instance 表示如果只想启用一个plugin的实例, 则设为true, 不然设置为false.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	接下来Argument(&quot;port&quot;), 声明了一个输入参数叫做port&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	required_on_create = True 设置这个参数是必须的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scheme = Scheme(&lt;span class=&quot;string&quot;&gt;&quot;UDP receiver&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scheme.description = &lt;span class=&quot;string&quot;&gt;&quot;UDP receiver&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scheme.use_external_validation = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#if con-current start the input modular set it False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scheme.use_single_instance = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port_argument = Argument(&lt;span class=&quot;string&quot;&gt;&quot;port&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port_argument.data_type = Argument.data_type_number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port_argument.description = &lt;span class=&quot;string&quot;&gt;&quot;Listen Port&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port_argument.required_on_create = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scheme.add_argument(port_argument)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; scheme&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;validate_input&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, validation_definition)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	这里我们要验证我们的参数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	通过&quot;port&quot;这个key我们找到要验证的参数, 如果没有则调用raise ValueError(&quot;Port is not a integer&quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	这样会在splunk web上弹出错误提醒.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	接下来我们在验证端口是否在范围内, 是否被占用.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            port = int(validation_definition.parameters[&lt;span class=&quot;string&quot;&gt;&quot;port&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; ValueError(&lt;span class=&quot;string&quot;&gt;&quot;Port is not a integer&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(port&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; port&amp;gt;&lt;span class=&quot;number&quot;&gt;65535&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; ValueError(&lt;span class=&quot;string&quot;&gt;&quot;Port range exceeded&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sk = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sk.settimeout(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sk.bind((&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, port))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sk.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; socket.error, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sk.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e.errno == &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; e.errno == &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; ValueError(&lt;span class=&quot;string&quot;&gt;&quot;This port is already in use&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stream_events&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, inputs, ew)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	这里就是我们建立一个UDP socket监听端口的地方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        host =&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; input_name, input_item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; inputs.inputs.iteritems():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            port = int(input_item[&lt;span class=&quot;string&quot;&gt;&quot;port&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ew.log(EventWriter.INFO,&lt;span class=&quot;string&quot;&gt;&quot;IPFIX converter init&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#checkForRunningProcess(port)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#writePidFile(port)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#ew.log(EventWriter.INFO,&quot;Start to listen port &quot;+str(port))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#ew.log(EventWriter.INFO,port)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            s.bind((host, port))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ew.log(EventWriter.ERROR,str(sys._getframe().f_code.co_name)+&lt;span class=&quot;string&quot;&gt;&quot;:Failed When Establish Connection:&quot;&lt;/span&gt;+str(e))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                message, address = s.recvfrom(&lt;span class=&quot;number&quot;&gt;16384&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ew.log(EventWriter.ERROR,str(sys._getframe().f_code.co_name)+&lt;span class=&quot;string&quot;&gt;&quot;=&quot;&lt;/span&gt;+str(e))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		Event() 是Splunk一条数据的一个对象, 里面可以设置多种信息, 包括data, stanza, time, host等等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		最主要的还是data信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		最后调用ew.write_event()来发送这条数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	event1 = Event()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                event1.data = str(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                event1.stanza = str(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                event1.time = time.strftime(&lt;span class=&quot;string&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                event1.host = str(address[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                event1.sourcetype = &lt;span class=&quot;string&quot;&gt;&quot;UDP packets&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#event1.index=None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#event1.done=None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#event1.unbroken=None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ew.write_event(event1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                f = sys.exc_info()[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;].tb_frame.f_back&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ew.log(EventWriter.ERROR,str(f.f_code.co_name)+&lt;span class=&quot;string&quot;&gt;&quot; at line &quot;&lt;/span&gt;+str(f.f_lineno)+&lt;span class=&quot;string&quot;&gt;&quot;, failure reason:&quot;&lt;/span&gt;+ str(e))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(UDPreceiver().run(sys.argv))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;stream_events方法中包含两个参数，一个是input，一个是ew， 从input中可以获取我们设置的参数，ew是eventWriter，是splunk sdk内置的一个类，用来发送数据，同时也具备log功能。&lt;/p&gt;
&lt;h2 id=&quot;添加log&quot;&gt;&lt;a href=&quot;#添加log&quot; class=&quot;headerlink&quot; title=&quot;添加log&quot;&gt;&lt;/a&gt;添加log&lt;/h2&gt;&lt;p&gt;Splunk具有log的功能，在sdk也提供了写入系统log的功能，我们可以通过这样的语句来发送一个log &lt;code&gt;ew.log(EventWriter.ERROR,&amp;quot;OUTPUT STRING:&amp;quot;+str(outstr))&lt;/code&gt; 除了ERROR我们还有几种log level&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ERROR&lt;/li&gt;
&lt;li&gt;WARNING&lt;/li&gt;
&lt;li&gt;INFO&lt;/li&gt;
&lt;li&gt;DEBUG&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在的DEBUG level的log似乎会有问题，不知道原因，所以慎用。log最终被写入splunkd.log文件中，实际上splunk sdk的log是对标准输出和标准错误输出进行了重新定向。&lt;/p&gt;
&lt;h2 id=&quot;生成安装包&quot;&gt;&lt;a href=&quot;#生成安装包&quot; class=&quot;headerlink&quot; title=&quot;生成安装包&quot;&gt;&lt;/a&gt;生成安装包&lt;/h2&gt;&lt;p&gt;在生成之前先建立自己的目录结构&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$SPLUNK_HOME&lt;/span&gt;/etc/apps/&amp;lt;app_name&amp;gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app_name&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    splunklib/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      __init__&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  default/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app&lt;span class=&quot;selector-class&quot;&gt;.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  README/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inputs&lt;span class=&quot;selector-class&quot;&gt;.conf&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.spec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要把splunklib目录拷贝到&lt;code&gt;$SPLUNK_HOME/etc/apps/&amp;lt;app_name&amp;gt;/bin&lt;/code&gt;, 然后根据需要建立app.conf和inputs.conf.spec. &lt;/p&gt;
&lt;p&gt;Splunk的安装包是spl格式，但实际上就是个tar.gz格式，所以可以直接打包&lt;app_name&gt;目录：&lt;/app_name&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &lt;span class=&quot;variable&quot;&gt;$SPLUNK_HOME&lt;/span&gt;/etc/apps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar cv MyApp/ &amp;gt; MyApp&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gzip MyApp&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv MyApp&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt; MyApp.spl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后我们就可以在splunk上直接安装啦。&lt;/p&gt;
&lt;h2 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.splunk.com/Documentation/Splunk/6.2.2/AdvancedDev/PackageApp&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package your app or add-on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.splunk.com/view/python-sdk/SP-CAAAER3&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to create modular inputs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; class=&quot;headerlink&quot; title=&quot;联系方式&quot;&gt;&lt;/a&gt;联系方式&lt;/h2&gt;&lt;p&gt;Matthew Gao, matthewgao[at]gmail.com&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Splunk plugin 是负责搜集数据的第三方插件，Splunk提供了一个SDK，但是似乎国内这方面的开发指导不是很多，所以写篇文章供大家分享
    
    </summary>
    
      <category term="Misc" scheme="http://matthewgao.github.io/categories/Misc/"/>
    
    
      <category term="splunk" scheme="http://matthewgao.github.io/tags/splunk/"/>
    
      <category term="python" scheme="http://matthewgao.github.io/tags/python/"/>
    
      <category term="add-on" scheme="http://matthewgao.github.io/tags/add-on/"/>
    
  </entry>
  
</feed>
